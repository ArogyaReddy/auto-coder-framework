[
  {
    "file": "accessibility-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/a11y/accessibility-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "application {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "team {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "essOrPSS {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "journey {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "feature {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "variant {string} is specified for Accessibility testing meta data",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Current page {string} should have no accessibility violations and all reports are generated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Includes only the body of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Excludes only the body of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Includes only the head section of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Excludes only the head section of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Includes only the side menu section of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Excludes only the side menu section of current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex includes only the wizard section of employee onboarding page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Excludes only the wizard section of employee onboarding page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex includes section with selector {string} on current page for accessibility analysis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex excludes section with selector {string} on current page for accessibility analysis",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../support/accessibility/run-axe-reporter",
      "../../support/accessibility/run-axe-options",
      "../../support/accessibility/cucumber-axe-reporter",
      "@axe-core/webdriverjs"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-advisory-opportunities-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-advisory-opportunities-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Advisory Opportunities page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "All Clients tab is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Opportunities tab is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Shared Opportunities tab is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Referrals Sent tab is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Dismissed Opportunities tab is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Products by Client header is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Products By Client Searchbox is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clients View filter is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Download CSV element is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Business Name settings icon is displayed on the AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Client column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Human Resources column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Group Health Insurance column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Credits column is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies if the info icon is displayed in Human Resources column in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Human Resources info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll & HR Solutions modal is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Time info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time & Attendance modal is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Workers Compensation info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Insurance modal is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Group Health Insurance info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Group Health Insurance modal is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Retirement info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement modal is displayed in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Tax Credits info icon in AC Advisory Opportunities page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Credits modal is displayed in AC Advisory Opportunities page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-advisory-opportunities-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-analysis-tools-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-analysis-tools-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Analysis Tools page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Client Activity tab is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Compensation Benchmarking tab is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Industry Insights tab is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Vertical IQ Industry Reports tab is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Business Valuation tab is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Overview Header is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Activity Timeframe Sort dropdown is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Product Trends tile is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New Jurisdictions tile is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee Trends tile is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on IQ Industry tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies if Auto Repair Shops pdf is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Child Care Centers tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies if Child Care Centers pdf is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-analysis-tools-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-authorization-screen-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-authorization-screen-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/ac/accountant/ac-authorization-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-calculator-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-calculator-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Calculators Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Salary Paycheck Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hourly Paycheck Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Gross Pay Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "IRS Withholding Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA Overtime Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Full-time Equivalent FTE Employee Calculator is displayed on Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement Calculators title is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SECURE Act Tax Credit Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "401k Contribution Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Choosing Your Annual Withdrawal Rate is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Borrowing from Your 401k is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Other Calculators title is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Business Valuation Calculator by BizEquity is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP R&D Tax Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Premium Only Plan POP Tax Savings Calculator is displayed on the Calculators page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Tax Calculator by Avalara is displayed on the Calculators page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-calculators-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-clients-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-clients-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Clients page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Clients header is displayed on the AC Clients page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search box is displayed on the AC Clients page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filters option is displayed on the AC Clients page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sort By option is displayed on the AC Clients page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clients lists is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "General Ledger link is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll link is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Report and Tax Forms is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "More Actions is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option to filter results in Clients Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option to clear the filters in Filters section",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field Payroll Due Date is displayed on Client List View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is displayed on Client List View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Role 26 searches for client using provisioned IID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for client IID and clicks on result",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-clients-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "user navigates to Reports and Tax Forms Page from AC Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "user navigates to Refer a Client from AC Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "user navigates to Exclusive Discounts Tab from AC Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option {string} at Filter by payroll products section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option {string} at Filter by client type section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option {string} at Filter by client status section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option {string} at Filter by section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option {string} at Sort by section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant click on Apply Filters on from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant choose start date {string} in date picker at filters section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant choose end date {string} in date picker at filters section",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RUN clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "WorkForce Now clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RUN for Partners clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP TotalSource clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RUN & Done clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "S Corp clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Active clients should be displayed on slideover menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "onboarding clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Terminated clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll due date clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Next check date clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "all clients should be displayed on AC dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant Connect dashboard is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Partner Programs tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Queue tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Frequently Used Tools tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Exclusive Discounts tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "News tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "CPELink Learning System tile is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sort by dropdown is displayed on AC Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects deeplink Payroll under client on AC Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Go To Run deeplink",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option to filter results in Dashboard Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant should be able to navigate to Run on a different window from Accountant connect",
        "async": true
      },
      {
        "type": "When",
        "pattern": "RUN left navigation is displayed in RUN Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} page is displayed in RUN Page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/ac/accountant/accountant-connect-page",
      "../../../pages/ac/accountant/ac-dashboard-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-empty-client-list-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-empty-client-list-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Accountant clicks on Connect Existing Client option inside Clients section in AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant Connect Invitation Form is displayed in AC Application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Refer a Client option inside Clients section in AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant Connect Referral Form is displayed in AC Application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Connect Existing Client option inside Clients section in Clients menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Refer a Client option inside Clients section in Clients menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Connect Existing Client option inside Clients section in Reports and Tax Forms menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Refer a Client option inside Clients section in Reports and Tax Forms menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Connect Existing Client option inside Clients section in Advisory Opportunities menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Refer a Client option inside Clients section option in Advisory Opportunities menu",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-empty-client-list-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-firm-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-firm-settings-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/ac/accountant/ac-firm-settings-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-generate-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-generate-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Generate Reports page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The search box on the select client panel is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The clients status dropdown on the select client panel is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on The status list on the select client panel is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The status list on the select client panel is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The engine icon on the select client panel is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Client from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects CATP Altenwerth Roberts from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects NP AC R29 RunClient 004 from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects all Client from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Payroll Detail Summary from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects XLS option on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Employee Reports from list on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on ALL to select a Employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Employee modal is displayed on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects the option Generate reports only for the following employees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects a employee from the list",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on save button on the Select Employee modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant filters Now frequency by Quarters and Years on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant filters Now frequency by Last month on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant filters Now frequency by Last quarter on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant filters Now frequency by Last year on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant filters Now frequency By check date on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Recurring on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Recurring Frequency to After Every Payroll on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Year 2023 Q1 in the Frequency table on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks Generate Report button on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generated Report preview is displayed on screen on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "View report is displayed on screen on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the download icon on the View report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the delete icon on the View report",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Advisory Opportunities ad is displayed on the Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the back icon on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate page is displayed on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant navigates to Schedules tab on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate Tab is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Queue Tab is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedules Tab is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Clients Panel is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Reports & Tax Forms panel is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Frequency panel is displayed on the AC Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant enters schedule name on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks Create Schedule button on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Successful Schedule modal is displayed on screen on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks Done on the Schedule now active modal on the AC Generate Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedules page is displayed on the AC Generate Reports page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-generate-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-header-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-header-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Accountant navigate to Start New Payroll Client from Start Payroll Client menu from header",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/ac/accountant/ac-header-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-invitation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-invitation-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Accountant clicks on Connect to a Client option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects RUN Powered by ADP radio button from Choose ADP Payroll Product option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant input Company Name into AC Invitation Form",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Client ID Number Radio button in the Invitation form",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant input Client ID Number in the Invitation form",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks Connect button in the Invitation form",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirmation of invitation sent is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-invitation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-left-navigation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-left-navigation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Accountant verifies that the Left Menu item {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects {string} from the Left Menu",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-left-navigation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-login-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Accountant Connect log in page is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/common/practitioner-login",
      "../../../pages/ac/accountant/ac-login-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-my-profile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-my-profile-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/ac/accountant/ac-my-profile-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-onboarding-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-onboarding-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/ac/accountant/ac-onboarding-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-products-services-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-products-services-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Products and Services page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Solutions Tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Solutions Tile header is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Marketplace is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Exclusive Discounts is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Partner with ADP tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on ADP Solutions Tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Payroll & HR Solutions tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Retirement tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Insurance tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that HR Outsourcing tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Payroll ID Tax Registration tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Tax Credits & Incentives tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Managing 1099 Workers tab is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in Managing 1099 Workers tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "WorkMarket by ADP and ADP MyTax tiles are displayed side by side inside Managing 1099 Workers tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on ADP Marketplace tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Marketplace static design is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Exclusive Discounts tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Avalara is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that BizEquity is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that BotKeeper is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Jirav is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accountant verifies that Rightworks is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-products-services-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-queue-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-queue-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Queue page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects a generated report to download",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the download icon on the AC Queue page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Report is downloaded on the AC Queue page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects a generated report to delete",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the delete icon on the AC Queue page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Report is deleted on the AC Queue page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects all generated reports to downloads",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "All Reports are downloaded on the AC Queue page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects all generated reports to delete",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "All Reports are deleted on the AC Queue page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-queue-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-refer-a-client-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-refer-a-client-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Accountant clicks in Connect or refer option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Refer a new client to ADP option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Refer a new client form is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant fills out the Refer a new client form",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks Send button on the Refer a new client form",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirmation of referral sent is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale user clicks Send button on the Refer a new client form",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-refer-a-client-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-resources-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-resources-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Resources page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Marketing Tools tab is displayed on the Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "State Payroll Tax Rates tab is displayed on the Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Key Facts tab is displayed on the Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reference Guides tab is displayed on the Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Forms tab is displayed on the Resources page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-resources-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-schedule-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-schedule-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Schedules page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on edit icon to edit a schedule",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Edit Schedule modal is displayed on the AC Schedules page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects Payroll Liability by Payroll on the edit schedule modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Save schedule button on the Edit Schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedule is edited on the AC Schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on delete icon to delete a schedule",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedule is deleted on the AC Schedules page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on the switch to pause a schedule",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedule is paused on the AC Schedules page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-schedule-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ac-slideover-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/accountant/ac-slideover-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Accountant clicks in a client from the Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Client slideover is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Reports & Tax Forms tab in the slideover",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports slideover is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks to expand Payroll Reports category in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks to select a report from Payroll Reports list in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects a time period as 2024 Q1 quarter in the Frequency option section dropdown in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Generate button in the slideover",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Report result screen is displayed in a full screen modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Download button in the report result screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Delete button in the report result screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks in the Recurring radio button in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant selects a time period as Every Month in the Recurring Frequency option section dropdown in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant provides a name for the schedule in the Schedule Name field in the slideover",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Accountant clicks on Create schedule button in the slideover",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-slideover-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-companies-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/mca/mca-companies-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Companies Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Companies icon is displayed on the Multi Company Access Companies Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search companies is displayed on the Multi Company Access Companies Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filters option is displayed on the Multi Company Access Companies page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/mca/mca-companies-page"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-left-navigation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/mca/mca-left-navigation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "MCA user verifies that the Left Menu item {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects {string} from the Left Menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Companies page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports & tax forms page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Analytics page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Salary benchmarks page is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/mca/mca-left-navigation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/mca/mca-login-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Multi Company Access dashboard is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/common/practitioner-login",
      "../../../pages/ac/mca/mca-login-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-report-tax-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/mca/mca-report-tax-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Reports and tax forms Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms generate button is displayed on the Multi Company Access Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms schedule button is displayed on the Multi Company Access Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms queue is displayed on the Multi Company Access Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms queue is displayed with no info on the Multi Company Access Reports and tax forms Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on {string} from Reports Tax and Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects checkbox Select all on Select companies column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects Payroll Reports on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects Last quarter on Select frequency column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Generate button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Im done button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects Recurring on Select frequency for schedule a report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user enters My schedule name",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Schedule button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "This schedule is now active modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Show all reports & tax forms from Reports Tax and Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Queue reports page displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects a report to be downloaded",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "MCA user go back to the report page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects a report to be deleted",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects more than 8 quarters on Select frequency column",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "MCA user verify the if new error message is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects one company on Select companies column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user expands Employee Reports on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects Earnings Record report on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on ALL option on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Employee dialog is displayed on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects radio button Generate reports only for the following employees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user selects one employee in the list of available employees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks in Save inside Select Employee window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "MCA user sees the selected employee displayed in Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Download All from Generate screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks on Delete All button from Generate screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks in a company name inside reports queue",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "MCA user is redirected to the report view output screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "MCA user clicks in the arrow icon in the top left of the Report output screen",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/mca/mca-report-tax-page"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-salary-benchmark-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/mca/mca-salary-benchmark-step.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Salary benchmarks title is displayed on the Salary benchmarks page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/mca/mca-salary-benchmark-page"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-analysis-tools-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-analysis-tools-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale clicks on IQ Industry tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Auto Repair Shops pdf is displayed on the AC Analysis Tools page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks on Child Care Centers tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Child Care Centers pdf is displayed on the AC Analysis Tools page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-analysis-tools-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-clients-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-clients-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "select clients should be displayed on AC dashboard",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleAC/wholesale-clients-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-firm-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-firm-settings-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/ac/wholesaleAC/wholesale-firm-settings-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-left-navigation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-left-navigation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Left Menu item {string} is displayed on the left side navigation",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale selects {string} from the Left Menu",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/ac/accountant/ac-left-navigation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-login-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Refer a Client option is displayed under Connect or refer button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale filters by payroll product and selects {string} from AC dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale selects deeplink Payroll under client on AC Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale should be able to navigate to Run on a different window from Accountant connect",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/common/practitioner-login",
      "../../../pages/ac/wholesaleAC/wholesale-login-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-products-services-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-products-services-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale clicks on ADP Solutions Tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll & HR Solutions tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement tab is displayed on the Products and Services Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Insurance tab is displayed on the Products and Services Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "HR Outsourcing tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll ID Tax Registration tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Credits & Incentives tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Managing 1099 Workers tab is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks in Managing 1099 Workers tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks on ADP Marketplace tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks on Exclusive Discounts tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Avalara is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "BotKeeper is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Jirav is displayed on the Products and Services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rightworks is displayed on the Products and Services page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-products-services-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-refer-a-client-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-refer-a-client-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale clicks in Connect or refer option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks on Refer a new client to ADP option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale fills out the Refer a new client form",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks Send button on the Refer a new client form",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/ac/accountant/ac-refer-a-client-page"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-reports-and-tax-forms-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleAC/wholesale-reports-and-tax-forms-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Generate Reports tab is displayed on the Reports & Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Queue tab is displayed on the Reports & Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Schedules tab is displayed on the Reports & Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report Templates tab is displayed on the Reports & Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Clients Panel is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate Reports page is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Reports & Tax Forms panel is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select Frequency panel is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report Templates page is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go to Custom Reports button is displayed on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale selects Client from list on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale selects Payroll Detail Summary from list on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale filters Now frequency by Quarters and Years on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale selects Year 2023 Q1 in the Frequency table on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks Generate Report button on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale clicks on the back icon on the Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate page is displayed on the Reports and Tax Forms page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/accountant/ac-generate-reports-page",
      "../../../pages/ac/wholesaleAC/wholesale-reports-and-tax-forms-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-CancelButtonRedirect-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-CancelButtonRedirect-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Manage Firm info option inside Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user is redirected to Firm Info screen in RUN Classic",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Cancel Button inside Firm Info screen in RUN Classic",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Add Logo option inside Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user is redirected to Add Logo screen in RUN Classic",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Cancel Button inside Add Logo screen in RUN Classic",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleRunMod/wholesaleRunMod-CancelButtonRedirect-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-companies-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-companies-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} left menu button on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on toggle navigation button on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} column on companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Company details tooltip button in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user fill search input with {string} value on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} company list button on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user select company details {string} on filter company list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user select status {string} on filter company list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects the option {string} at Filter by payroll date section from AC dashboard filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user choose start date {string} in date picker at filters section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user choose end date {string} in date picker at filters section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user check clients that {string} on filter company list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} button on filter company list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on filter tag date close button on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} company in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} company in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click sort Status descending on Wholesale Firm View",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on {string} arrow button in company list pagination footer on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Companies page is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "left menu text {string} is not displayed on the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "left menu text {string} is displayed on the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company list is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company list column {string} is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "first row displays {string} company in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company list is sorted by column {string} in {string} order on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale child companies badge in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RUN Retail companies badge in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "S Corp companies badge in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RUN & Done companies badge in companies list on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company details tooltip content is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company list message {string} is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "filter company list floating pane is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "filter tag {string} is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "filter tag {string} is not displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "filter tag date is displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "filter tag date is not displayed on Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current page value {string} is displayed in companies list on Wholesale Firm View",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleRunMod/wholesaleRunMod-companies-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/common/practitioner-login",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-profile-information-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-profile-information-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in the profile icon in the right upper corner of the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Profile Information tile is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "My Profile option is displayed in the Profile Information tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Change my Password is displayed in the Profile Information tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in My Profile option in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user is redirected to My Security Profile screen in RUN Classic",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Change my Password option in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user is redirected to Change my Password screen in RUN Classic",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleRunMod/wholesaleRunMod-profile-information-page",
      "@cucumber/cucumber",
      "chai",
      "../../../pages/common/company-settings-page"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-report-tax-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-report-tax-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects Reports & tax forms option from the Left Menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms generate button is displayed on the Wholesale Run Mod Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms schedule button is displayed on the Wholesale Run Mod Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms Custom Reports button is displayed on the Wholesale Run Mod Reports and tax forms Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reports and tax forms queue grid is displayed on the Wholesale Run Mod Reports and tax forms Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Generate a report or tax form from Reports Tax and Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects checkbox Select all on Select companies column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects Payroll Reports on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects Last quarter on Select frequency column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Generate button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate page is displaying All reports are ready header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate page is displaying print icons for all reports",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Download All from Generate screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Delete All button from Generate screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Im done button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects one company on Select companies column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user expands Employee Reports on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects Earnings Record report on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on ALL option on Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects radio button Generate reports only for the following employees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects one employee in the list of available employees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Save inside Select Employee window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user sees the selected employee displayed in Select reports and tax forms column",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects Recurring on Select frequency for schedule a report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user enters My schedule name",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Schedule button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Show all reports & tax forms from Reports Tax and Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in a company name inside reports queue",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user is redirected to the report view output screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in the arrow icon in the top left of the Report output screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects a report to be downloaded",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects a report to be deleted",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user selects more than 8 quarters on Select frequency column",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Run Mod user verifies if new error message is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks on Build Custom Reports button from Reports Tax and Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Reports main screen is displayed inside Reports and Tax Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Global Search bar is displayed on the top center of Wholesale Run Mod experience",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help button is displayed inside Reports & tax forms option for the Wholesale Run Mod User",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Wholesale Run Mod user clicks in Help button inside Reports & tax forms option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help modal is displayed in a new window inside Wholesale Run Mod Experience",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleRunMod/wholesaleRunMod-report-tax-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesaleRunMod-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ac/wholesaleRunMod/wholesaleRunMod-settings-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Wholesale selects Settings from the Left Menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Settings page is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Manage firm info tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add a logo tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Check RUN & Done payroll status tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Access billing and invoices tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add a tax filing client tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add a non-tax filing client tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add users tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Manage user security tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Manage my security profile tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Change my password tab is displayed in the Wholesale Firm View",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Test check tab is displayed in the Wholesale Firm View",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/ac/wholesaleRunMod/wholesaleRunMod-settings-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "adp-rs-401k-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/adp-rs-api/adp-rs-401k-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for 401K api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} Client OOID for 401K api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Adp RS 401K plan client is setup in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Adp RS 401k plan client with RS API user header is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the 401K plan details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "RS 401k plan id created is retrived and stored in metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have correct 401k plan name details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "default json payload for {string} is setup for 401K api test",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the 401K plan setup is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the 401K plan setup post has a missing property",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a put request is sent to update the 401K plan already setup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post request is sent to setup the 401K plan",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "401K plan get response json should have error message that contains {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "created client ooid and aoid is stored in 401k plan api test metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "401K plan get response json should return error message {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the 401K plan setup is updated with {string} date as {int} days more than current date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with date value of {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/adpRetirement/adp-rs-401k-plan-api"
    ],
    "pageObjects": []
  },
  {
    "file": "adp-rs-starterk-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/adp-rs-api/adp-rs-starterk-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for starter api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} Client OOID for starter api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Adp RS starter plan client is setup in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Adp RS starter plan client with RS API user header is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the starter plan details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plan id created is retrived and stored in metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have correct plan name details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "default json payload for {string} is setup for starter api test",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the starter plan setup is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the starter plan setup is updated with {string} date as {int} days more than current date",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the starter plan setup post has a missing property",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a put request is sent to update the starter plan already setup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post request is sent to setup the starter plan",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "starter plan get response json should have error message that contains {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "created client ooid and aoid is stored in metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "starter plan get response json should return error message {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "starter plan get response json should include error message {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/adpRetirement/adp-rs-starterk-plan-api"
    ],
    "pageObjects": []
  },
  {
    "file": "atp-test.steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/atp-test.steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "../../support/git-file-reader"
    ],
    "pageObjects": []
  },
  {
    "file": "common-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/common-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "response json should have property {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have nested property {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} which is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with length greater than {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with length of {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with value of {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with value of {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} that contains {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json path {string} should show {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "api response code should be {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should not have property {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with value of true",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with value of false",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "company-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/company-api-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "create-delete-contractor-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/create-delete-contractor-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex adds a contractor with department {string} to current client",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "create-delete-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/create-delete-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex adds CompanyContractor {string} to existing IID {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex deletes Employee {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex deletes all Employees {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "i save the runmod iid from json data {string} as {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "i save a runmod iid {string} as {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "../../support/helpers",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "crm-db-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/crm-db-checks-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "decision-engine-db-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/decision-engine-db-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "There are no records retrieved from the table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "AOID should be correct",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "docvault-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/docvault-api-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "i make a docvault get request using ooid with ref {string} and aoid with ref {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get folder request using ooid with ref {string} and aoid with ref {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get folder request using ooid with ref {string} and aoid with ref {string} and resourceid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get folder request for client to get folder using ooid {string} aoid {string} resourceid {string} and AIMPERSONID Id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the following {string} response code  should be displayed:",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get folder request using ooid with ref {string} and aoid with ref {string} and adp_on_behalf_of_id with ref {string} and userrole {string} and resourceid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get quota request using ooid with ref {string} and aoid with ref {string} and adp_on_behalf_of_id with ref {string} and userrole {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get request using ooid with ref {string} and aoid with ref {string} and adp on behalf of id with ref {string} and adp person id {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault post folder request for client using ooid {string} aoid {string} foldername {string} and Parent Folder Id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i veriy folder {string} created with status {string} under Parent folder {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault put folder request for client to update folder using ooid {string} aoid {string} foldername {string} and Parent Folder Id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i veriy folder name updated as {string}  with status {string} under Parent folder {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault delete folder request for client to delete folder using ooid {string} aoid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault post folder request for Associate using ooid {string} aoid {string} onbehalfOfID {string} foldername {string} and Parent Folder Id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i veriy folder {string} created with status {string} under Parent folder {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault put folder request for Associate to update folder using ooid {string} aoid {string} onbehalfOfID {string} foldername {string} and Parent Folder Id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i veriy folder name updated as {string}  with status {string} under Parent folder {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault delete folder request for Associate to delete folder using ooid {string} aoid {string} onbehalfOfID {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get download request using ooid with ref {string} and aoid with ref {string} and resourceid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get download request for client to get download using ooid {string} aoid {string} resourceid {string} and AIMPERSONID Id {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get download request using ooid with ref {string} and aoid with ref {string} and adp_on_behalf_of_id with ref {string} and userrole {string} and resourceid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get download request using ooid with ref {string} and aoid with ref {string} and adp_on_behalf_of_id with ref {string} and AIMPERSONID {string} and resourceid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a docvault get download request using ooid with ref {string} and aoid with ref {string} and resourceid {string} for Invalid authentication",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "chai",
      "deep-equal-in-any-order",
      "../../apis/runMod/docvault",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ein-locals-verification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/ein-locals-verification-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "i make a company summary get request using ooid with ref {string} and aoid with ref {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the following local tax information should be displayed:",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "chai",
      "deep-equal-in-any-order",
      "../../apis/runMod/company",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/employee-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "department health insurance eligibility date should be saved in run for employee",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../apis/runMod/Employee",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "entitlements-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/entitlements-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "OOID and AOID for entitlements are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "OOID and AOID for entitlements are not defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "route validation endpoint is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "runservices entitlements api endpoint is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Test_App base url is defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a entitlement test_app noaccess API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a entitlement test_app protected API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a entitlement test_app alsoprotected API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a entitlement test_app openpath API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a entitlement test_app unprotected API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get RunNgEntitlements routes API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a runservices entitlements get installation attributes API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a runservices entitlements get user attributes API request is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a runservices entitlements get subject entitlements API request is sent",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response body should be a {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "entitlements installation attributes should have installation id",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "entitlements user attributes should have service level",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "subject entitlements should have entitlement {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/runMod/entitlements"
    ],
    "pageObjects": []
  },
  {
    "file": "genstruct-classifier-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/genstruct-classifier-api-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "a document classification request {string} was made for the document type with the requestor as part of {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} classifier status is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} classifier status message is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "document type is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "page number is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "confidence score is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "instruction pages document type is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "instruction pages number is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "instruction pages confidence score is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} page number is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "document type of {string} is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} confidence score is {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/runMod/genstruct"
    ],
    "pageObjects": []
  },
  {
    "file": "genstruct-documentextractor-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/genstruct-documentextractor-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "suiRate confidence score is {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/runMod/genstructextractor"
    ],
    "pageObjects": []
  },
  {
    "file": "manual-check-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/manual-check-api-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../support/referencename-handler",
      "../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-authorization-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-authorization-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace AA tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace EP AA tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace AA client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace AA client is updated with employee AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace AA client is updated with employee 1099 AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace AA client is updated with 1099 company AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate authorization permissions",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json is as expected for {string} user",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/marketPlace/associate-authorization-api"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-certifications-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-certifications-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate certifications tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace associate certifications tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace associate certifications tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace associate certifications tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate certifications client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add certifications",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to update certifications",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to remove the certification item created",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve certifications for a worker",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the workers certificate id is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate certifications meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate certification for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve certification meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} post",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} post is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} post has a missing property",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have error message that contains message text {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} post payload is updated with {string} AOID",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have certification itemid with value greater than 0",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have itemid of certification created or updated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a marketplace API request is sent to retrieve associate certfication codelist values",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/marketPlace/associate-certifications"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-educational-degrees-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-educational-degrees-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate education degrees tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace associate education degrees  tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace associate education degrees tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace associate education degrees tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate education degrees client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add education degrees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to update education degrees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to remove education degrees",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve education degrees for a worker",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the workers education degree id is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate education degrees meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate education degree for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve education degree meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the {string} post is updated with {string} AOID",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have itemid with value greater than 0",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have itemid of degree created or updated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a marketplace API request is sent to retrieve associate education degree codelist values",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/marketPlace/associate-educational-degrees"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-organizational-assets-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-organizational-assets-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate organizational assets tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace associate organizational assets tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace associate organizational assets tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace associate organizational assets tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate organizational assets client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add organizational assets",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to update organizational assets",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to unassign organizational asset",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve organizational assets",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve organizational asset assignments",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve an associate organizational asset assignment details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the worker asset ids are retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate organizational assets meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve an associate organizational asset details",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for organizational asset {string} post",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the organizational asset {string} post is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the organizational asset {string} post has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the organizational asset {string} post payload is updated with {string} AOID",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have asset id with value greater than 0",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have related asset id with value greater than 0",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have asset id created or updated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a marketplace API request is sent to retrieve organizational asset codelist values",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a marketplace API request is sent to retrieve organizational asset assignment codelist values",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/marketPlace/associate-organizational-assets"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-performance-review-results-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-performance-review-results-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate performance review results api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace associate performance review results api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace associate performance review results api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace associate performance review results api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate performance results client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate performance review results for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee aoid for the retrieve associate performance review results get event is updated with 1099 AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee aoid for the retrieve associate performance review results get event is updated with company 1099 AOID",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/associate-performance-results"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-skills-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-skills-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate skill tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate skills client is set up in the testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} add skills",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add associate skills",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to associate skills of a worker",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the worker skill id is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate skills of a worker by ID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} update skills",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a put marketplace API request is sent to update associate skills",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a delete marketplace API request is sent to delete associate skills",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} remove skills",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to remove associate skills",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "lodash",
      "../../../apis/runMod/marketPlace/associate-skills-api"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-time-profiles-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/associate-time-profiles-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace associate time profiles api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace associate time profiles api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace associate time profiles api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace associate time profiles api tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace associate time profiles client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate time profiles",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve associate time profiles meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee aoid for the retrieve associate time profiles get event is updated with 1099 AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee aoid for the retrieve associate time profiles get event is updated with company 1099 AOID",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/associate-time-profiles"
    ],
    "pageObjects": []
  },
  {
    "file": "dedudcion-configuration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/dedudcion-configuration-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration client is updated with owner AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration client is updated with employee AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "unique payload values are updated for deductions API",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a delete marketplace API request to delete {string} deduction is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to create deduction is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to stop deduction is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to start deduction is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace request is sent to retrieve general deduction",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to update deduction is sent",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json deduction payload {string} is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "deduction payload is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "new associates AOID is set in deduction json payload",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID is set in deduction json payload for actor and originator",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should include {string} general deduction instruction",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} general deduction instruction should have percentage of {float} in response payload",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace deduction configuration proxy client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "AOID is set in deduction json payload for actor originator and employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should not include {string} general deduction instruction",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/marketPlace/deduction-configuration-api"
    ],
    "pageObjects": []
  },
  {
    "file": "ep-subscription-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/ep-subscription-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "marketplace embedded payroll subscription client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace embedded payroll cheddrSuite subscription client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace embedded payroll field clock client for subscription test  using ng api is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace embedded payroll cheddrSuite client for subscription test  using ng api is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to trigger embedded payroll subscription",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to trigger ng subscription api",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/ep-subscription-api"
    ],
    "pageObjects": []
  },
  {
    "file": "marketplace-onboarding-V1-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/marketplace-onboarding-V1-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload to onboard V1 applicant is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload to onboard V1 applicant has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V1 payload has the {string} property with empty object",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V1 payload has the {string} property with empty array",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V1 payload has the {string} property with {string} value",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client is updated with owner AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client is updated with employee AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to fetch applicant onboard meta is sent",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V1 default payload {string} is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "employee applicant onboard V1 payload unique values are generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V1 client for proxy test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the hire date shown is same as the passed value in V1",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "assert",
      "../../../apis/runMod/marketPlace/applicant-onboard-V1-api"
    ],
    "pageObjects": []
  },
  {
    "file": "marketplace-onboarding-V2-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/marketplace-onboarding-V2-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V2 client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicants V2 first name and last name are retrieved",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 default payload {string} is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 payload is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "employee applicant onboard V2 payload unique values are generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "contractor applicant onboard V2 payload unique values are generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "company applicant onboard V2 payload unique values are generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 payload is missing the provided properties",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 payload has the {string} property with empty object",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 payload has the {string} property with empty array",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicant onboard V2 payload has the {string} property with {string} value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a put marketplace API request to edit an applicant is sent",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V2 client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace applicant onboard V2 client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy applicant onboard V2 client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicants V2 company name is retrieved",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "applicants V2 first name and last name are updated to {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the hire date shown is same as the passed value in V2",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "assert",
      "../../../apis/runMod/marketPlace/applicant-onboard-V2-api"
    ],
    "pageObjects": []
  },
  {
    "file": "marketplace-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/marketplace-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace onboarding are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for API tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for API tests are defined in the testing metadata with new data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace workers client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace codelists client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client is updated with owner AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client is updated with employee AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client is updated with an invalid AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client is updated with an invalid OOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve organizations is sent",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll client is updated with owner AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll client is updated with employee AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the worker can be retrieved from the response by family name",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the worker can be retrieved from the response by company name",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the workers associate ID is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve workers general deduction payroll instruction for the worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve workers general deduction payroll instruction",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve payroll V3 codeLists {string} is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve codeLists {string} is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve {string} deductions is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve all deductions is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve the {string} deduction is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve deduction meta is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request to retrieve general deduction {string} meta is sent",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "payroll payload is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "payroll payload is missing the provided properties",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have applicant resource ID",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have error message that contains {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have success status in confirm message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "an employee is onboarded via ATP",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a contractor with department {string} is onboarded via ATP",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the new associates state tax profile meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the new associates state tax profile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the new associates state tax profile with aoid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the worker state tax profile meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the worker state tax profile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the {string} meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "json state tax default payload {string} is loaded",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add a state income tax",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request to get the onboarding employee state tax profile",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "an onboarding employee OID is stored in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json state tax payload is updated with onboarding employee OID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to change pay distributions",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to change a state income tax",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace workers client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace codelists client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace workers client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace codelists client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace organizations client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the report csv {string} is set with the headers {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the report csv {string} is appended",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the report csv {string} is appended for marketplace with status value {int}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy workers client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy codelists client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy payroll client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy organizations client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace worker onboarding are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the worker can be retrieved from the response by family name {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the worker can be retrieved from the response by company name {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the created workers associate ID is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} client AOID and OOID for marketplace worker onboarding are defined in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../support/helpers",
      "../../../apis/runMod/marketPlace/workers-V2-api",
      "../../../apis/runMod/marketPlace/codelists-api",
      "../../../apis/runMod/marketPlace/organizations-api",
      "../../../apis/atp/ATP-runner",
      "../../../apis/runMod/marketPlace/payroll-api",
      "../../../support/csv-processor"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-data-input-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/pay-data-input-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "partner1 AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "partner2 AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "partner3 AOID and OOID for marketplace PDI tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace PDI client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace PDI client is set up in the testing metadata for timesheet data cleanup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "the worker associate ID is set to the worker aoid from other client",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the item ID for pay frequency {string} is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to push pay data",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to replace existing pay data",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve pay data imported",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve meta {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have pay data itemid",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PDI replace response json should have pay data itemid",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup for payDataInput",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input post is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input post has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input add is updated with employee details for partner1",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input add is updated with employee details for partner2",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input add is updated with employee details for partner3",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay data input replace is updated with employee details for partner3",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "existing paydata imports are discarded",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have correct earning details",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace PDI client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace PDI client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy PDI client is set up in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/marketPlace/pay-data-input-api"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-distributions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/pay-distributions-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace pay distributions tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "employee AOID and OOID for marketplace pay distributions tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "1099 contractor AOID and OOID for marketplace pay distributions tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "practitioner AOID and OOID for marketplace pay distributions tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace pay distributions client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to update pay distributions for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "json payload for the pay distributions change event is updated with employee AOID with no ESS",
        "async": true
      },
      {
        "type": "When",
        "pattern": "json payload for the pay distributions change event is updated with 1099 AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee aoid for the pay distributions get event is updated with 1099 AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "json payload for the pay distributions change event is updated with another employee AOID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve pay distributions details for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve the meta details for pay distributions",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup for pay distributions change",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay distributions change event is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the pay distribution change has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace pay distributions client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace pay distributions client for api gateway test is set up in the testing metadata with new client",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/pay-distributions-api"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-statements-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/pay-statements-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace paystatements tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "practitioner AOID and OOID for marketplace paystatements tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "employee AOID and OOID for marketplace paystatements tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace paystatements client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve paystatements data for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve paystatements data for a worker with invalid AOID {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve paystatements data for a worker AOID from another client",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve paystatements data for a worker AOID with no paystatements",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve single paystatement data for a worker with invalid id {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve single paystatement pdf for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve single paystatement pdf for a worker with invalid document id {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response paystatements json is as expected",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace paystatements client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace paystatements client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy paystatements client is set up in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/marketPlace/pay-statements-api"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-output-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/payroll-output-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "employee AOID and OOID of client for marketplace payroll output tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "practitioner AOID and OOID of client for marketplace payroll output tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID and OOID of client for marketplace payroll output tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll output client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve payroll output details for payrun {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json is as expected for payrun {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve payroll output list",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve payroll output meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll output client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace payroll output client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy payroll output client is set up in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/marketPlace/payroll-output-api"
    ],
    "pageObjects": []
  },
  {
    "file": "personal-contact-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/personal-contact-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace personal contact tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace personal contact client is set up in the testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} to add {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to add {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve personal contact data of a worker",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the workers personal contact id is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve personal contact details for a worker by ID",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "lodash",
      "../../../apis/runMod/marketPlace/personal-contact-api"
    ],
    "pageObjects": []
  },
  {
    "file": "us-federal-tax-profile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/us-federal-tax-profile-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace federal tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace federal tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace federal tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace federal tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace us federal tax profile client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to update federal tax profile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve federal tax profile for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve US tax profile default federal meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve federal tax filing change meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve federal tax filing status values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup for us federal tax profile change",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the federal tax profile post is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the federal tax profile post has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the federal tax profile post is updated with {string} AOID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace us federal tax profile client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace us federal tax profile client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy us federal tax profile client is set up in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/us-federal-tax-api"
    ],
    "pageObjects": []
  },
  {
    "file": "us-local-tax-profile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/us-local-tax-profile-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace local tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace local tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "invalid AOID and OOID combination for marketplace local tax profile tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace us local tax profile client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve local tax profile for a worker",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve local tax profile meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy us local tax profile client is set up in the testing metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/us-local-tax-profile-api"
    ],
    "pageObjects": []
  },
  {
    "file": "worker-events-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/worker-events-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace worker tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace worker tests are defined in the testing metadata with new data",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} and {string} for marketplace worker tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace worker cash indicator tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee AOID and OOID for marketplace worker tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "practitioner AOID and OOID for marketplace worker tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker events client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker events client with cash payroll is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker corporate contacts client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "the worker associate ID is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent for worker event {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve the meta details for worker event {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have error message that contains text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers response json returned should have DOB masked for employees and individual 1099s",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers response json returned should have SSN masked for employees and individual 1099s",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers response json returned should have TIN masked for company contractors",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the worker associateOID is retrieved and stored in the metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup for worker event",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker event is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker event has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker hire client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy worker hire client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve worker hire meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup to initiate hire for {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to push worker hire",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker hire event has a missing property",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker hire event is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker hire event is updated with new SSN",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker hire event is updated with new TIN",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve corporate contacts meta",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get marketplace API request is sent to retrieve corporate contact meta",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker corporate contacts client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker events client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker hire client for api gateway test is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker corporate contacts client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker events client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace worker hire client for api gateway test is set up in the testing metadata with new client",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have property {string} with indicator value as {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy worker events client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy worker events client with cash payroll is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace proxy worker corporate contacts client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup for worker event with new employee onboarded for state {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "created {string} employee aoid is stored in metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "created {string} contractor aoid is stored in metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "created {string} company aoid is stored in metadata",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/marketPlace/worker-events-api",
      "../../../apis/runMod/marketPlace/worker-hire-api",
      "../../../apis/runMod/marketPlace/corporate-contacts-api"
    ],
    "pageObjects": []
  },
  {
    "file": "worker.work-assignment.modify-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/marketplace-api/worker.work-assignment.modify-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace pay schedule change tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace pay schedule change client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload is setup for {string} post pay schedule field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to change pay schedule",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/marketPlace/worker.work-assignment.modify-api"
    ],
    "pageObjects": []
  },
  {
    "file": "myadp-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/myadp-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "myadp post request with updated json body {string} is sent to endpoint {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "no emergency contacts are present for current employee",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random dob {string} is generated for runtool api payload",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random dob {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random adp email {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random adp phone number {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random gender {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address street one {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address street two {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address city {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address postal code {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random address state {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random routing number {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "routing number {string} is specified as {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random account number {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random direct deposit percentage {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random account name {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random emergency contact info {string} is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a random emergency contact info {string} with non standard relationship type is generated",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for LMS tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for LMS Associate user tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "A contractor is logged into my adp for personal info tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "A company contractor is logged into my adp for personal info tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "A contractor is logged into my adp for direct deposit tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "A company contractor is logged into my adp for direct deposit tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for IRS lock unchecked tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for IRS lock checked tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for federal tax edit tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An employee is logged into my adp for paperless payroll tests",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "no emergency contact details should be displayed on emergency contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee navigates to your profile from myadp dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee opens demographic information page on myadp profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee opens emergency contacts page on myadp profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee opens personal information page on myadp profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits gender for insurance as {string} on myadp demographic information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits birthdate as {string} on myadp demographic information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits email as {string} on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits home phone as {string} on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits primary contact info as {string} on myadp emergency contact information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee deletes primary contact info on myadp emergency contact information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee adds non primary contact info as {string} on myadp emergency contact information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "contractor edits home phone as {string} on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "contractor deletes home phone on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits cell phone as {string} on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits gender as {string} on myadp demographic information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee edits randomly generated address on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee updates state to a different state on myadp personal information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee navigates to manage direct deposit page from my pay page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee clicks edit on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Name on Your Account should display correctly on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Routing Number should display {string} on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm Routing Number should display {string} on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account Number should display {string} on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm Account Number should display {string} on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Deposit amount {string} should be selected on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "no accounts should be displayed on my adp my pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee should be unable to make changes on my adp direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "unable to edit tax message is displayed on my adp my pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee can edit federal tax on my adp my pay page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee navigates to edit tax withholding from my pay page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee navigates expands tax withholding from my pay page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee clicks lets begin button on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee clicks next button on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee selects {string} on Are you a non resident alien quesiton on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee selects {string} on filing status on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee selects {string} on do you claim exeption on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee selects {string} on do you work more than one job question on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee selects {string} on will your income be 200000 or less question on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee supplies electronic signature on myadp edit tax withholding page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filing Status should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total Credit Amount should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Other Income Amount should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Deduction Amount should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Additional Withholding Amount should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Additional Percent Withheld should display {string} on my adp pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "primary emergency contact info {string} should be displayed correctly on myadp profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "emergency contact tile should not be displayed on myadp profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the onboarding user details are correct in the IPSYS_User table of the iFarm database",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the role 14 employee details are saved correctly in IPSYS_User table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the role 14 individual contractor details are saved correctly in IPSYS_User table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the role 14 company contractor details are saved correctly in IPSYS_User table",
        "async": true
      }
    ],
    "imports": [
      "../../support/json-processor",
      "@cucumber/cucumber",
      "chai",
      "path",
      "../../apis/atp/ATP-runner",
      "../../support/helpers",
      "../../apis/runMod/myAdp/myadp-base-api",
      "../../pages/common/practitioner-login",
      "../../pages/myAdp/adp-dashboard-page",
      "../../pages/myAdp/adp-profile-page",
      "../../pages/myAdp/adp-personal-info-page",
      "../../pages/myAdp/adp-demographic-info-page",
      "../../pages/myAdp/my-adp-direct-deposit-page",
      "../../pages/myAdp/my-adp-pay-page",
      "../../pages/myAdp/my-adp-emergency-contact-page",
      "../../apis/runMod/myAdp/v1/pay-distributions-api",
      "../../apis/runMod/myAdp/v2/federal-tax-withholding-api",
      "../../apis/runMod/myAdp/v1/personal-contacts-api",
      "../../pages/myAdp/my-adp-federal-tax-wizard-page"
    ],
    "pageObjects": []
  },
  {
    "file": "owner-credential-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/owner-credential-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "plaid-verification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/plaid-verification-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Plaid {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Activity Additional Detail {string} field should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Activity Additional Detail {string} {string} subfield should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plaid token should be reset with value {string}",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../apis/runMod/plaid",
      "../../apis/atp/ATP-runner",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "pre-check-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/pre-check-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "atp script execution should be successful",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "red-db-checks-steps .js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/red-db-checks-steps .js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../apis/atp/ATP-runner",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "clover-worker-onboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/reports-api/clover-worker-onboard-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for clover worker onboard tests are defined in the testing",
        "async": true
      },
      {
        "type": "When",
        "pattern": "get value from the response with property {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup to initiate worker onboard",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the worker onboard cancel is updated with new associateid",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post worker onboard cancel API request is sent to cancel the worker onboard",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "@playwright/test"
    ],
    "pageObjects": []
  },
  {
    "file": "create-report-package-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/reports-api/create-report-package-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace create report package tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} and {string} for marketplace create report package tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace create report package client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} is setup to initiate create report package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to push create report package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to push create report package to get response code",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "get resourceID from the response with property {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/reportApi/embedded-payroll-gwbase-api"
    ],
    "pageObjects": []
  },
  {
    "file": "getcompany-address-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/reports-api/getcompany-address-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace company address tests are defined in the testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "{string} and {string} for company address tests are defined to testing the company address details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have company address property details {string} with value of {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have company address property details {string} with value of ",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "getsubject-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/reports-api/getsubject-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace getsubjects tests are defined in the testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "marketplace getsubjects client is set up in the testing",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have report property details {string} with value of {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "response json should have report property details {string} with value of {int}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/runMod/reportApi/embedded-payroll-gwbase-api"
    ],
    "pageObjects": []
  },
  {
    "file": "search-es-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/search-es-api-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "i make a Suggester Search post request  with reference to {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a Suggester Search post request for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} in response of Suggester post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a hr guides Search post request",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} in response of hr guides post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a hr partner Search post request with reference to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} partner in response of hr partner post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a FAQ  help and support search for runcomplete partner with reference to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} partner in response of FAQ  help and support search for runcomplete partner post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a FAQ search for runcomplete partner with reference to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} in response of FAQ search for runcomplete partner post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a Help & support articles search for runcomplete partner with reference to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} in response of Help & support articles search for runcomplete partner post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i make a Quick Links  Site Content search for runcomplete partner with reference to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "i verify {string} in response of Quick Links  Site Content search for runcomplete partner post request",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I make an Earnings search request using {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I make a Deductions search request using {string} without category boosting",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I make a Deductions search request using {string} with category boosting",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify {string} is returned in search response",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I make an MCA PeopleList request using {string} and {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify employees are returned in search response",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I make an MCA PeopleList request using {string}, {string}, and {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify employees are not returned in search response",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/runMod/search",
      "../../data/fit_api/search/suggesterQuickLinksResponse.json"
    ],
    "pageObjects": []
  },
  {
    "file": "search-notifications-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/search-notifications-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "{string} should be able to {string} notification",
        "async": true
      }
    ],
    "imports": [
      "../../apis/search/notifications",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "servicetech-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/servicetech-api/servicetech-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "test data for the jurisdictions API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a juristiction client is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the {string} tax info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the {string} service levels with params {string},{string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "default json payload for {string},{string} is setup",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "default json payload for {string} Sevice levels to update {string} is setup",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the jurisdiction event is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the service level event is updated with provided values",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a put request is sent to update the {string} of the {string} with {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for the employee API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a employee is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the employee list",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for the servicelevels API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a service levels client is setup in the testing metadata",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "api response code should be {int} for servicelevels",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for the pendingpayroll API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a Pendingpayroll is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the Pendingpayroll list",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for the Usersecurity API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a Usersecurity is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the Usersecurity details",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "test data for the Product API request is set in testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a Product is setup in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a get request is sent to retrive the Product details",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/runMod/serviceTech/jurisdiction-api.js",
      "../../../apis/runMod/serviceTech/employee-api",
      "../../../apis/runMod/serviceTech/servicelevels-api.js",
      "../../../pages/runMod/serviceTech/serviceTech-page",
      "../../../apis/runMod/serviceTech/pendingpayroll-api",
      "../../../apis/runMod/serviceTech/usersecurity-api",
      "../../../apis/runMod/serviceTech/product-api"
    ],
    "pageObjects": []
  },
  {
    "file": "worker-hire-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/apis/workerhire-api/worker-hire-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "AOID and OOID for marketplace worker hire tests are defined in the testing metadata",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "worker hire embedded client is set up in the testing metadata",
        "async": true
      },
      {
        "type": "When",
        "pattern": "a post marketplace API request is sent to push w2",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create json payload for {string} is setup to initiate hire for {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the w2 event is updated with new SSN",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create json payload for without email {string} is setup to initiate hire for {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload to onboard w2 event is updated with provided values",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "onboard w2 first name and last name are updated to {string} {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create json payload for workTypeCode optional {string} is setup to initiate hire for {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "json payload for the embedded worker hire w2 event has a missing property",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the hire date shown is same as the passed value in w2 onboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "existing SSN response json should have error message that contains {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workerHire w2 response json should have error message that contains {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "lodash",
      "../../../apis/runMod/workerHireApi/embedded-w2base-api"
    ],
    "pageObjects": []
  },
  {
    "file": "calculate-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/calculate-checks-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/checks/calculate-checks-page"
    ],
    "pageObjects": []
  },
  {
    "file": "checks-basepage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/checks-basepage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex hovers over the Home menu on the Classic Run homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} in the Home Menu on the Classic Run homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Checks shortcut Icon is displayed in Run Classic homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Checks shortcut icon on the Run Classic homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} page is displayed in Run Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create PDF To Print button is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/classic/checks/checks-basepage"
    ],
    "pageObjects": []
  },
  {
    "file": "direct-deposit-voucher-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/direct-deposit-voucher-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Okay on the Direct Deposit Vouchers to print warning",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/checks/direct-deposit-vouchers-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-payment-refunds-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/employee-payment-refunds-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the headline text {string} should be displayed on the Employee Payment Refunds page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the results panel should contain {string} on the Employee Payment Refunds page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the refund status tooltip for {string} is displayed on the Employee Payment Refunds page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the refund status tooltip for {string} on the Employee Payment Refunds page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the refund status tooltip for {string} should contain text {string} on the Employee Payment Refunds page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/checks/employee-payment-refunds-page"
    ],
    "pageObjects": []
  },
  {
    "file": "print-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/print-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Print Checks page is displayed in Classic Run",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/classic/checks/print-checks-page"
    ],
    "pageObjects": []
  },
  {
    "file": "third-party-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/third-party-checks-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/checks/third-party-checks-page"
    ],
    "pageObjects": []
  },
  {
    "file": "void-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/checks/void-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the Void Payment Refunds slider is displayed in the Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Void Completion Summary page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the title is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the main header is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the main header should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sub header is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sub header should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the help link is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the help link should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the help text should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the details section is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Check Date column is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Check Amount column is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Batch Number column is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Batch Number should display as {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Request Refund column is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Bill column is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the warning dialog is displayed in the Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the warning dialog title {string} is displayed in the Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee {string} is selected on the Void Checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the unable to refund help text header should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the unable to refund help text should contain {string} in the Refund Slider in Void Checks Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the payment section text {string} is displayed in the Refund Slider in Void Checks Preview page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/checks/void-checks-page",
      "../../../pages/classic/checks/void-checks-preview-page"
    ],
    "pageObjects": []
  },
  {
    "file": "common-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/common/common-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex fills in the first name field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex fills in the last name field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex ticks {string} checkbox in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../support/helpers",
      "../../../pages/classic/common/common-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "home-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/common/home-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Accept on Terms and Conditions modal if displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Run Payroll on homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} ToDo link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over Dashboard and clicks {string} menu option in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over Wholesale Firm View and clicks {string} menu option in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over the Employees menu and clicks Add contractor",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over the Employees menu and clicks Add employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the classic Home page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the pre-setup classic Home page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex handles the set up client dialog box for wholesale child",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over Dashboard and clicks ADP Code Details menu option in classic UI",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/classic/common/home-page"
    ],
    "pageObjects": []
  },
  {
    "file": "login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/common/login-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex is logged into Classic RunMod as an Owner client for Print Checks test",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/atp/ATP-runner",
      "../../../pages/classic/common/login-page",
      "../../../pages/common/practitioner-login",
      "../../../support/credentials-manager",
      "../../../pages/classic/common/home-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "company-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/company/company-setup-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on No, Do it later button in States You Added Modal on Company Set Up page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the state dropdown in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Income tax state dropdown in the State Tax Setup page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Legal Zip Code field in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Legal Name Company field in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into State identification no field in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into State unemployment experience rate field in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into State disability experience rate field in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Same as legal dropdown in Company Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Active employee direct deposit dropdown in Bank Account page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Bank Name field in Bank Account page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Routing Number field in Bank Account page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Account Number field in Bank Account page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} for the first letter of local jurisdiction in the Local Tax Setup page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters today date into the {string} field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters date {int} days from now into the {string} field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK if Just letting you know popup is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Deductions Dropdown in Deductions page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Earning dropdown in Earnings page in classic ui",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/company/company-setup-page",
      "../../../pages/classic/company/earnings-deductions-page",
      "../../../pages/classic/company/pay-frequency-page",
      "../../../pages/classic/company/pto-page",
      "../../../pages/classic/company/tax-info-page",
      "../../../pages/classic/common/common-page",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "earnings-and-deductions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/company/earnings-and-deductions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects {string} in the list of Earnings and Deductions in classic UI",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is not displayed in the list of Earnings and Deductions in classic UI",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in the list of Earnings and Deductions in classic UI",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the dialogue with text is displayed in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK button on the dialogue in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/company/earnings-deductions-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-frequency-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/company/pay-frequency-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Edit on the Pay Frequency on the Pay Frequency Info page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters date {int} days from today in the Check Date field on the Pay Frequency in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on Just letting you know popup if present",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Success popup is displayed on the Pay Frequency page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on the Success popup on the Pay Frequency page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters todays date in the Check Date field in Pay Frequency page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Anters todays date in the Period Start Date field in Pay Frequency page in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/company/pay-frequency-page"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard-setup-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/classic/dashboard-setup-page"
    ],
    "pageObjects": []
  },
  {
    "file": "adp-code-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/adp-code-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the ADP Code Details page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex confirms that payroll blocked status is {string} on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the payroll blocked status is not displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Unblock checkbox on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Number of Payrolls Allowed on ADP Code Details - {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects cancel button on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects save button on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects OK button on ADP Code Details popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects cancel button on ADP Code Details popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Allow employee tax exemptions checkbox on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Allow employee tax exemptions checkbox should be checked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Allow employee tax exemptions checkbox should be unchecked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll only checkbox should be checked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Unblock checkbox should be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll Override should be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Unblock checkbox should not be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll Override should not be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random Sales code on ADP Code Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the {string} field on ADP Code Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded Payroll section should be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded Payroll section should not be displayed on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded Payroll Partner should contain value {string} on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded Payroll Model should contain value {string} on ADP Code Details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded Payroll Mutual field should contain value {string} on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Yes Print W2 Copy D checkbox on ADP Code Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the No Print W2 Copy D checkbox on ADP Code Details",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/adp-code-details-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "bank-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/bank-details-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Routing Number on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Confirm Routing Number on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Bank Name on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address 1 on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address 2 on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the City on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as the State/Province on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Zip Code on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as the Country on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Check Number Length on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters current date as the End Date on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Account Number on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Confirm Account Number on the Bank Details Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects cancel button on Bank Details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects save button on Bank Details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects OK button on Success popup on Bank Details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects OK button on the Just Letting You Know popup on Bank Details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from Bank Details page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/bank-details-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "bank-overview-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/bank-overview-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the Bank Overview page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Edit Link for Bank Code {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Add Bank button on Bank Overview screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from Bank Overview page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/bank-overview-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "fraud-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/fraud-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the Fraud Dashboard page to load",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex confirms the Fraud Status is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Release GSO Block checkbox is displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Release GSO Block checkbox is not displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Blocklisted Accounts grid is displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Blocklisted Accounts grid is not displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Release GSO Block checkbox",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the GSO Approver {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects to add account for employee {string} to Allow List",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects to add account for company to Allow List",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters case details for the payroll block removal - {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects save button on Fraud Dashboard screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects cancel button on Fraud Dashboard screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Continue on the popup to only Unblock the client on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Cancel on the popup to only Unblock the client on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Confirm on the popup to add bank accounts to the allow list on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Cancel on the popup to add bank accounts to the allow list on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from Fraud Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Status contains {string} on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid enabled account is {string} on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user selects the Plaid Bypass Next Payroll checkbox",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user deselects the Plaid Bypass Next Payroll checkbox",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Bypass Next Payroll checkbox is selected on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Bypass Next Payroll checkbox is not selected on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Bypass Next Payroll checkbox is disabled on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Plaid Bypass Next Payroll checkbox is enabled on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid button is displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid button is not displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid button is enabled on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid button is disabled on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Turn Off Plaid button on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid Modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Plaid Modal is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Turn Off Modal text is correct",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the No, Dont Turn It Off button on the Turn Off Plaid Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Yes, Turn It Off button on the Turn Off Plaid Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the X button on the Turn Off Plaid Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the {string} reason to Turn Off Plaid on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Select the reason for turning off Plaid modal is displayed on the Fraud Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the OK button on the Select the reason for turning off Plaid modal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/fraud-dashboard-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "identity-services-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/identity-services-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Identity Services status for {string} user {string} is expected status in Identity Services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the user type dropdown in Identity Services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} user type in Identity Services page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/identity-services-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "products-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/products-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Associate waits for the Products page to load",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the row for Product Code {string} is displayed on the Products Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the row for Product Code {string} is not displayed on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects Products row for Product Code {string} on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects {string} from the Product dropdown on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate enters the current date as the End Date on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate enters the correct Start Date on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate enters the correct Product End Date on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects {string} from the Est. net payroll dropdown on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the New Product button on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the Save Product button on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects Delete Product button on the Products Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Delete Product Popup is displayed on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the OK button on Delete Product Popup on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects {string} from the Impound Account Number dropdown on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the New Impound Account button on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the Delete Impound Account button on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the Save Impound Account button on the Products Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Delete Impound Account Popup is displayed on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the OK button on Delete Impound Account Popup on the Products Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Product Requires Impound Popup is displayed on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the OK button on Delete Impound Account Confirm Popup on the Products Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Success Popup is displayed on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate selects the OK button on Success Popup on the Products Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Okay on the Just Letting You know popup",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/products-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "shipping-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/dashboard/shipping-details-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Associate user clicks Save button on the Shipping Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user clicks OK button on the Shipping Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user navigates to Home page from Shipping Details page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/dashboard/shipping-details-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/contractor-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex fills in the SSN field on the classic New Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the work state dropdown in the New Contractor 1099 info page in Classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Pay Rate field in the 1099 Payroll Info page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../support/helpers",
      "../../../pages/classic/employeeManagement/contractor-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-access-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/employee-access-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Allow Access if not enabled on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Allow Access to the contractor on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks social security number for current employee on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates social security number to a random number for current employee on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates tin to a random tin for current company on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex save changes successfully on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates dob to a random dob on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates zip code to a random zip code on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates email address to a random email on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to resend invites page from employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex check only the current employee on reinvite to register page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save on Employee Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex save changes successfully on reinvite to register page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i add variable {string} with value {string} to context",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks resend email button on individual employee access page for edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current employee should not be listed on employee access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "nudge button should show {string} on employee access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "last sent is not displayed for current employee on employee access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "last sent is displayed as today for current employee on employee access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits email address on individual employee access page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits email address to {string} on individual employee access page for edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "nudge button should not be displayed on employee access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current employee should be listed on employee access page in company settings",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current company contractor should be listed on employee access page in company settings",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/employeeManagement/employee-access-bulk-edit-page",
      "../../../pages/runMod/modal/security-verification-modal-classic",
      "../../../pages/classic/employeeManagement/employee-access-individual-edit-page",
      "@cucumber/cucumber",
      "chai",
      "../../../support/helpers",
      "../../../pages/classic/employeeManagement/employee-access-resend-invite-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employment-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/employment-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex fills in the Social security no field in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../support/helpers",
      "../../../pages/classic/common/common-page"
    ],
    "pageObjects": []
  },
  {
    "file": "garnishments-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/garnishments-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Edit button on the {string} garnishment in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects dollar for deduction amount on Garnishment Info page in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/garnishments-page"
    ],
    "pageObjects": []
  },
  {
    "file": "new-hire-common-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/new-hire-common-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Edit button on the {string} deduction in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Gender dropdown in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/new-hire-common-page"
    ],
    "pageObjects": []
  },
  {
    "file": "new-hire-direct-deposit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/new-hire-direct-deposit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Bank Name field in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Routing Number field in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Routing Number Confirm field in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Account Number field in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Account Number Confirm field in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Deposit Distribution Dropdown in New Hire Direct Deposit page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Amount field in New Hire Direct Deposit page in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/new-hire-direct-deposit-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/payroll-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in the monthly salary field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the weekly salary field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the hourly rate field in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the HR department dropdown in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/common/common-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pto-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/pto-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/paid-time-off-page"
    ],
    "pageObjects": []
  },
  {
    "file": "retirement-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/retirement-info-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/retirement-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "review-and-complete-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/review-and-complete-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/review-and-complete-page"
    ],
    "pageObjects": []
  },
  {
    "file": "security-verification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/security-verification-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/security-verification-page"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/employeeManagement/tax-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects {string} radio button for {string} in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Find button on the Local Tax page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the EIN field in Local State Tax page in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/employeeManagement/tax-info-page",
      "../../../pages/classic/company/tax-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "firm-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/firm-info-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/classic/firm-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "account-mapping-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/account-mapping-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Account mapping Page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Start button on account mapping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button on account mapping page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company mappings is completed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on account mapping page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/account-mapping-page"
    ],
    "pageObjects": []
  },
  {
    "file": "chart-of-accounts-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/chart-of-accounts-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Chart of Accounts Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Account is displayed under {string} accounts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account is displayed under account category",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close on the chart of accounts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes account on COA page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account is removed from accountslist under account category",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} message is dispalyed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/chart-of-accounts-page"
    ],
    "pageObjects": []
  },
  {
    "file": "gl-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/gl-settings-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Settings Page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex provides required settings for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Summarized by Company is selected by default on Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks finish button on Settings page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/settings-page"
    ],
    "pageObjects": []
  },
  {
    "file": "gl-transactions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/gl-transactions-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "General Ledger Transactions Page is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/gltransactions-page"
    ],
    "pageObjects": []
  },
  {
    "file": "glsetup-accountingsoftware-selection-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/glsetup-accountingsoftware-selection-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "GL Setup is initiated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Use Run default COA option on in Accounting Software page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Create my own accounts option on in Accounting Software page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ViewUpdate button for default COA on Accounting Software page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add button for my own COA on Accounting Software page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on Accounting Software page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks finish later button in GL setp flow",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/accountingsoftware-selection-page"
    ],
    "pageObjects": []
  },
  {
    "file": "glsetup-completion-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/generalledger/glsetup-completion-summary-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "GL Setup completion summary Page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks done on completion summary page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/generalledger/setup-completion-page",
      "../../../pages/common/home-page"
    ],
    "pageObjects": []
  },
  {
    "file": "gl-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/gl-setup-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/classic/gl-setup-page"
    ],
    "pageObjects": []
  },
  {
    "file": "order-entry-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/orderEntry/order-entry-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Search button in classic Sales Associate Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} link in the classic Order Entry Summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks a link and accepts an alert in the classic Order Entry Summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the City field in the Order Entry Company Information page in Classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the State dropdown in the Order Entry Company Information page in Classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Zip Code field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Business Phone field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Phone number field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the First name field in the Order Entry Company Information  page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Last name field in the Order Entry Company Information  page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Title field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Contact Phone Number field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Contact Phone Number Ext field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Email field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the number of Active Employees field in the Order Entry Company information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the number of Total Employees field in the Order Entry Company Information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Balances drop down in the Order Entry Company information page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects ADP Complete Payroll and HR Plus checkbox in the Order Entry Feature Selection page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects General Ledger checkbox in the Order Entry Feature Selection page in classic ui",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "@playwright/test",
      "../../../pages/classic/orderEntry/order-entry-page",
      "../../../pages/classic/common/common-page",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-feature-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/payroll-feature-setup-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Set Up Features Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is displayed in set up features page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../pages/classic/payroll-feature-setup-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-frequency-selection-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/payroll/pay-frequency-selection-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters payroll with weekly payfrequency in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with Biweekly payfrequency in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for pay frequency selection page to load in classic ui",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/classic/payroll/payfrequency-selection-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-process-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/payroll/payroll-process-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex handles employee pde page popup to continue processing payroll in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on pde next button on the employee PDE page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks preview payroll button on the contractors PDE page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks approve button on the payroll preview page in classic ui",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Home button after Successful Payroll completion",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/payroll/process-payroll"
    ],
    "pageObjects": []
  },
  {
    "file": "run-payroll-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/payroll/run-payroll-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex handles employee PDE page popup in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks preview payroll button on the employee PDE page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks approve button on the payroll preview page in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex confirms the payroll in classic UI",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Success page is loaded in classic UI",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Home button after Successful Payroll completion in classic UI",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/classic/payroll/run-payroll-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ppaw-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/ppaw-setup-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/classic/ppaw-setup-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/reports-steps/payroll-details-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/reports-page/payroll-details-page",
      "../../../pages/classic/common/home-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-liability-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/reports-steps/payroll-liability-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/reports-page/payroll-liability-page",
      "../../../pages/classic/common/home-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/reports-steps/payroll-summary-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/reports-page/payroll-summary-page",
      "../../../pages/classic/common/home-page"
    ],
    "pageObjects": []
  },
  {
    "file": "user-registration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/user-registration-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../pages/classic/user-registration-page"
    ],
    "pageObjects": []
  },
  {
    "file": "user-security-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/classic/user-security-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/classic/user-security-page"
    ],
    "pageObjects": []
  },
  {
    "file": "ci-build-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/ci-build-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "The process to build the QA_Automation Repo is started",
        "async": false
      }
    ],
    "imports": [
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "client-account-agreement-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/client-account-agreement-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the Client Account Agreement page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Accept button on Client Account Agreement page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Decline button on Client Account Agreement page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Print button on Client Account Agreement page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from Client Account Agreement page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/client-account-agreement",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "client-provisioning-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/client-provisioning-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "a new dto client is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new runMod client is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new runmod client with an employee is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new {string} client is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new {string} client with multiple pay frequencies is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a {string} client is provisioned for state {string} and ooid is saved as {string} with aoid saved as {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new {string} client with only Deductions {string} is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new {string} client with only Earnings {string} is provisioned for state {string} and Alex logs in",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a new {string} client with Earnings {string} and Deductions {string} is provisioned for state {string} and Alex logs in",
        "async": true
      }
    ],
    "imports": [
      "../../apis/atp/ATP-runner",
      "../../pages/common/practitioner-login",
      "../../pages/common/home-page",
      "@cucumber/cucumber",
      "fs",
      "path",
      "../../support/iid-manager",
      "../../support/credentials-manager",
      "../../support/xml-processor",
      "path",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "company-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/company-settings-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to the company paid time off home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the job costing page from company settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the bank accounts page from company settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the departments page from company settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from company settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Accountant Connect Authorization page by clicking Add your accountant link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Profile page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on Tax Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add users page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the User Security page by clicking Manage user access link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to {string} on Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reloads the content iFrame providing button {string} is not present",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the company settings landing page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Address Info page from company settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Details page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the My Security Profile page by clicking My name and contact info link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Change My Password page by clicking Change My Password link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Change My Password page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Set My PIN link in Company Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks I'll do it later in PIN setup modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel in PIN setup modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PIN setup modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Pay Frequency Info page by clicking Pay schedule link in Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay Frequency Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Earnings and Deductions Info page by clicking Earnings and Deductions link in Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earnings and Deductions Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Payment Checks Info page by clicking Company payment checks link in Company Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the close page button on the Paymnet Checks Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payment Checks Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Departments Info page by clicking Departments link in Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Departments Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Manage payroll reminders link in Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll reminders container is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close in the Departments Info container",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close in the Payroll reminders container",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Notification Center page by clicking Set up custom reminders link in Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Notification Center page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Lists page by clicking the Set up custom tracking link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Lists page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the International ACH Info page by clicking the International banking link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "International ACH Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Workers Comp Info page by clicking the Workers comp class codes link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Comp Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to manage employee access page from company settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} section in the company settings landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee access link is not displayed on company settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Set PIN page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Settings page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the next gen settings page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Next Gen Earnings and Deductions page from company settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Next Gen Workers Compensation page from company settings page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/company-settings-page",
      "@cucumber/cucumber",
      "../../pages/classic/change-my-password-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "delete-employee-ui-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/delete-employee-ui-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "email-actions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/email-actions-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "plus addressed email {string} is in the scenario context",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex retrieves email sent to the current plus addressed gmail test account",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex retrieves email sent from {string} to the gmail test account",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex retrieves email sent from email {string} to current gmail test account",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex retrieves link with partial text {string} sent to current gmail test account",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../support/gmail/GmailApiManager.js"
    ],
    "pageObjects": []
  },
  {
    "file": "eso-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/eso-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "I am on the eso landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I select option {string} on the eso landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I click ok button on the eso landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "get sales order message with opportunity id {string} is sent",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Order Status text area should show {int} on eso page",
        "async": true
      }
    ],
    "imports": [
      "../../support/xml-processor",
      "../../pages/common/eso-page",
      "../../apis/atp/ATP-runner",
      "../../pages/common/practitioner-login",
      "../../support/credentials-manager",
      "../../pages/runMod/time/Enableadptkfeature-page",
      "../../pages/max/sales-dashboard-page",
      "@cucumber/cucumber",
      "chai",
      "path",
      "fs",
      "../../support/helpers",
      "path",
      "path",
      "path",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "feature-and-services-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/feature-and-services-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex select feature {string} on feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user selects feature {string} on feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on dialog message in feature and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is not displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is selected on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is not selected on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is enabled on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "feature {string} is not enabled on features and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks tooltip icon for feature {string} on feature and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "tooltip title {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "tooltip text {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ESS popup is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "image is displayed in ESS popup on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ESS and Form I9 popup is displayed on features and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ESS and Form I9 popup Okay button on feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ESS Popup Keep On button on feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ESS Popup Turn Off button on feature and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ESS popup header text {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ESS popup sub header text {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ESS popup bullet point {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The bundle {string} field retrieved from the table should have null value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on Confirm Cancel dialog in feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds feature {string} on feature and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes feature {string} on feature and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees feature {string} is displayed below feature {string} on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "information popup is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "information popup text {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on information pupup dialog in feature and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "error popup is displayed on features and services page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "error popup text {string} is displayed on features and services page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on error pupup dialog in feature and services page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/features-and-services-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "footer-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/footer-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies that the Footer item Client ID is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Footer item Client IID is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Footer item {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Footer item {string} is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Footer Copyright is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/footer-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "header-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/header-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Referrals and Rewards in Header Profile menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the header Notifications icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the header Profile icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the mark as read in kebab menu on notification panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on People things to do in People landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects and clcick on We need your Hawaii Tax Identification Number. ADP can apply for you task from tax things todo",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Complete Quick Hire Notification is displayed in the Notifications Tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the mark as unread in kebab menu on notification panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Run Logo in the header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Reviewnow button on to do things",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select and click on review button in notification list",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Company Name is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Navigation Icon is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Run Logo is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Paperless Icon is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Service Request Icon is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Profile Icon is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Header Profile menu option {string} is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on Payroll in the left hand menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the Run logo in the header to return to home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the Menu icon in the header to hide the left hand menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the Menu icon in the header to expand the left hand menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Fieldclock logo is displayed on the RUN Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Paperless icon in the RUN Header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Paperless modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks sign me up for paperless",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Paperless should be signed up for",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects turn off paperless",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects yes I want to turn off paperless",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a {string} to turn off paperless and submits",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "It is confirmed that paperless is turned off",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/payroll-landing-page",
      "../../pages/common/header-page",
      "../../pages/common/home-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "home-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/home-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex Searched for {string} at home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to dashboard overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that View Pending payroll Items task is displayed on the home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select and click on {string} task in top things to do on homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on garnishment task in top things to do on homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Wholesale Parent Home page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the {string} from the Dashboard page in Wholesale Run Mod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} item from Top things to do",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll tile right chevron",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs out of RUN using Profile and Sign Out button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate logs out of RUN using Profile and Sign Out button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due badge is displayed on the Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "payroll due containing text {string} is displayed in upcoming payroll tile on the Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Upcoming payroll tooltip contains text {string} on the Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help link is displayed in the upcomning payroll tooltip popup on the Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll due today by {string} PM {string} is displayed on the Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll due in 2 business days or more badge is displayed on the Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Run Payroll button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay employee garnishment task is displayed on the home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay employee garnishment task is not displayed on the home page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@playwright/test",
      "@cucumber/cucumber",
      "../../pages/common/home-page",
      "../../pages/runMod/runcertification/certification-page",
      "../../pages/ac/wholesaleRunMod/wholesaleRunMod-companies-page"
    ],
    "pageObjects": []
  },
  {
    "file": "installation-selection-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/installation-selection-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Installation Selector page is visible",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for the IID {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for non-runmod IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user role searches for the IID {string} for Messagecenter tests",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens a classic IID as Associate user for certification tests",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an {string} IID as Associate user for certification tests",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters runmod IID to validate aegis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters runmod IID to validate Fiscal reports",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters runmod with wholesale child IID to validate aegis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens IID as Associate user for W2 SEM",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for the {string} IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod ended deduction IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod goal met deduction IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod HSA deduction IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod disapearing deduction IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod 401K deduction IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod goal met deduction and Annual PF IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod IID for payroll info tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "An Associate user searches for a RunMod Client for Add report to service requests test",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod EE Invite PYE tests IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for a RunMod Rehire PYE tests IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for RunMod DocVault IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex searches for Classic Run IID {string} for Checks Print tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate searched for NG Runmod IID {string} for Checks Print tests",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for time enable",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for ADPTKP enable",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for terminated IID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for ADP Time& Attendance enable",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate searches for {string} company in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate searches for Code {string} in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Timestamp is captured for performance testing",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An error has occurred message is not displayed in content iframe",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time difference between request and response is lower than {string} threshold",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company list returns companies all with {string} in Installation Selector page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company list returns companies all with ADP code {string} in Installation Selector page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company list returns companies all within the specified date range in Installation Selector page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company list returns companies all under {string} partner in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate sets the Partner filter to {string} in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate sets the From date as {int} days ago in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate sets the To date as {int} days ago in Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over the Operations Hub and clicks on the Payrun Status & Re-Send option on the Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over the Dashboard and clicks on Payroll Print Redirect option",
        "async": true
      }
    ],
    "imports": [
      "../../apis/atp/ATP-runner",
      "../../pages/common/installation-selector-page",
      "../../pages/common/home-page",
      "../../support/credentials-manager",
      "@cucumber/cucumber",
      "chai",
      "fs",
      "path",
      "path",
      "path",
      "path",
      "path",
      "path",
      "path",
      "path",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "login-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/login-step.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex navigates to ADP Website Terms and Conditions page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex navigates to ADP Website Privacy Statement page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in as a Runmod client user - regular payruns",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged in as a DTO client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged in as a DTO client, who done the DTO provision submition",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged into RunMod client with aoid reference as {string} and ooid {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex navigates to ADP.com",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex opens new window in the browser for certification tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex loads {string} client provisioning url for certification tests",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in to the DigitalPlus Onboarding as a {string} client",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged in as a Docvault MCA user",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged in as a Docvault Wholesale user {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is logged into RunMod as Owner for Check Print checks",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/practitioner-login",
      "../../pages/common/associate-login",
      "@cucumber/cucumber",
      "../../pages/common/home-page",
      "../../pages/common/ng-diagnostics",
      "../../apis/atp/ATP-runner",
      "../../pages/runMod/runcertification/certification-page",
      "../../support/credentials-manager",
      "../../pages/common/associate-login",
      "../../pages/runMod/time/Enableadptkfeature-page",
      "chai",
      "../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-companies-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/mca-companies-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex navigates to the Companies page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the MCA Companies Header is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the MCA Companies Search element is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the table header {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Table Header Branch Code is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the MCA ID is displayed in the MCA companies table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the second MCA ID is displayed in the MCA companies table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex enters MCA Company ID into the search bar and clicks Enter",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex confirms the Companies Switch down caret is visible",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the Companies Switch down caret",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Second Company",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex confirms switch by verifying Company ID in Footer",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the MCA ID displayed in the table",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Docvault MCA ID displayed in the table",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the second MCA company on the Companies page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Switched Company IID in footer is the first MCA company on the Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Switched Company IID in footer is the second MCA company on the Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on first company name on MCA companies dropdown",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on Company {string} in MCA Companies page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the maritz enabled MCA Company in MCA Companies page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} iid on the Companies page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/home-page",
      "../../pages/common/mca-companies-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-home-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/payroll-home-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on highlighed search option {string} on home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Text Reminders on Settings Panel in Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Run home page for {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Earn Rewards button on Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "IID is provisioned and visible at the bottom of home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Change IID button is visible on Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate clicks on Change IID button on Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can click People in the Left Hand Navigation",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select add contractor button on Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select add employee button on Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to {string} menu option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the import-timesheets button on the home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to employee invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to individual contractors self onboarding",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to company contractors self onboarding",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the important notification popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Payroll section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll section on the Home Page is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the To Dos section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Grow Your Own Business section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Latest Payroll section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Calendar section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Report section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Left Menu is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Left Menu item {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Notifications tab is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the close button on the Notifications slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the All tab on the Notifications slider is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the {string} tab on notification slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clickon {string} tab on notification slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex uncheck {string} tab on notification slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select and click on {string} task in notification tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on saveforlater for Quick Hire Task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clickon close button for We need your Hawaii Tax Identification Number task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clickon close button for We need your Hawaii Tax Identification Num task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Notifications tab is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the that the Homepage is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Run Payroll button is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects company contractor from contractors wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll section on the Home Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "state update message for current employee is displayed on Things to Do Notifications page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll details in Last Payroll tile on Homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X in Payroll details modal on Homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll options in Payroll details modal on Homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Payroll Plus logo is displayed on the Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to simplified employee invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to simplified individual contractor invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to simplified company contractor invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} should display on the Upcoming payroll tile on the Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can select and click on {string} task in ToDo list",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} task in ToDo list is NOT displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the embedded payroll referral logo for {string} company is displayed on the Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Footer Contact us link on the Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the home page footer contact us popup is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the home page footer contact us popup ID is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the home page footer contact us popup phone number is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the home page footer contact us popup phone number is not displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/home-page",
      "../../pages/common/add-employee-page",
      "../../pages/common/people-landing-page",
      "../../pages/common/contractor-type-page",
      "../../pages/common/notifications-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "pbp-emulator-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/pbp-emulator-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "I am on the PBP Emulator landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I click OK button on the PBP Emulator page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the Branch Code on the PBP Emulator page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the ADP Code on the PBP Emulator page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the Source System on the PBP Emulator page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I get the response for the client data on the PBP Emulator page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "IID {string} should be contained in the response on the PBP Emulator page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Partner ID {string} should be contained in the response on the PBP Emulator page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Partner description {string} should be contained in the response on the PBP Emulator page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Partner type {string} should be contained in the response on the PBP Emulator page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/pbp-emulator-page.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "people-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/people-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects on employee {string} on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on employee {string} on Peoples Landing Page version 2",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on new hire link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add new employee tile on peoples landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks Fill out info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex enters the employee name {string} into the first name field",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks save for later",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add new contractor tile on peoples landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee {string} on people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects new consolidated employee from directory in People Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex resumes employee or contractor from Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex resumes company contractor from Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex resumes company {string} from Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee on people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects contractor on people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects company contractor on people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on filter button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select {string} from filter on peoples landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clear the Active filter on peoples landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created company employee is listed in the directory section on people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see a popup with options to delete the consolidated employee or user or both",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see a popup with options to Terminate or Remove access only or Both",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete this person option on delete consolidated account popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Remove access only option on delete consolidated account popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Both option on delete consolidated account popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Terminate option on delete consolidated account popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Got it button on pop-up message on people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send invite link in myADP information popup message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex looks for employee {string} in myADP modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the header checkbox",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee {string} in myADP modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "clicks Send Invites button in myADP modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see employee {string} has email address {string} displayed in myADP modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see a toaster message {string} displayed in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see warning message {string} displayed for employee {string} in Invite your people to MyADP modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee {string} on Peoples Landing Page version two",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select employee {string} on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select filter above Directory section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects filter above Directory section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the filter above Directory section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in filters in Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "people landing page filter is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can delete {string} filter pill above Directory section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see {string} filter pill displayed above Directory section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The filter criteria {string} is displayed in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The filter criteria {string} is not displayed in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The clear button of the filter criteria {string} is displayed in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The default value of the filter criteria Lives in in the filter section on Peoples Landing Page is {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the dropdown option in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Lives in dropdown in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the options in the dropdown list in the filter section on Peoples Landing Page are in ascending alphabetical order",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {int} options where the employees live are displayed in the dropdown list in the filter section on Peoples Landing Page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the options where the employees do not live in are not displayed in the dropdown list in the filter section on Peoples Landing Page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} option is not displayed in the dropdown list in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the state {string} should be selected in the filter section on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the clear button of the filter criteria {string} on Peoples Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to company settings page from peoples landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the people to do notification {string} on the people landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Post a Job button on the People landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see onboarding table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on employee change status page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current employee should not be listed on people landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Onboarding employee table retrieves {int} records",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Onboarding Employee table previous row count {string} should be same with current row count {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "messages header is displayed on People landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Settings link in People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Things to do link in People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close in Things to do panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add new employee W-2 on the People landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon on page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add new contractor 1099 on the People landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks accept button on confirmation delete modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks accept button in Delete default modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created company employee {string} is listed in the directory section on people page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../apis/atp/ATP-runner",
      "../../pages/common/people-landing-page",
      "../../pages/runMod/employeeManagement/employee-sidenav/employee-edit-sidenav-page",
      "../../pages/runMod/employeeManagement/employeeStatus/employee-termination-page",
      "../../pages/common/add-employee-page",
      "fs",
      "@cucumber/cucumber",
      "../../support/helpers",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "plaid-modal-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/plaid-modal-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks the {string} button on the plaid modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} bank on the plaid modal select bank page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the tile for {string} bank on the plaid modal select bank page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects account {string} on the plaid modal select account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the user name field on the plaid modal enter credentials page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the password field on the plaid modal enter credentials page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses to link with account number on the plaid modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X on the plaid modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the title {string} is displayed on plaid modal page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the error message {string} is displayed on plaid modal page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex changes context to the Embedded RUN Frame in Billings Gate",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the OAUTH window to open",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../pages/common/plaid-modal"
    ],
    "pageObjects": []
  },
  {
    "file": "plaid-oauth-window-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/plaid-oauth-window-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../pages/common/plaid-oauth-window"
    ],
    "pageObjects": []
  },
  {
    "file": "reports-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/reports-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Reports landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Reports title header is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Run Single Reports tile is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Report Packages Tile is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Build Custom Reports Tile is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Year-End Reports Tile is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Reports Tip Container is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Your Favorites Container Header is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generated Report Packages Container Header is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Popular Reports Header is displayed on reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the CARES reports Header is displayed on reports page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/reports-landing-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "retirement-service-plan-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/retirement-service-plan-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex opens People Landing Page from ADP 401k plan page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP 401K Plan page is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/retirement-service-plan-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "run-left-nav-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/run-left-nav-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/common/run-left-nav-page"
    ],
    "pageObjects": []
  },
  {
    "file": "run-navigation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/run-navigation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The RUN Logo image is displayed on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Left Menu container is displayed on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clicks on the sidebar menu icon to hide the LeftNav menus on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clicks on the sidebar menu icon to show the LeftNav menus on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verify that the LeftNav menus are hidden on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verify that the LeftNav menus are shown on the LeftNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Time landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Human Resources landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Tax landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verify that the sidebar menu icon is displayed on the LeftNav",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../pages/common/run-navigation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "run-onboarding-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/run-onboarding-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../pages/common/run-onboarding-page",
      "../../pages/runMod/modal/security-verification-modal",
      "../../pages/common/home-page",
      "../../pages/max/digitalplus-dashboard-page"
    ],
    "pageObjects": []
  },
  {
    "file": "view-pending-item-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/view-pending-item-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "View pending items page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on pending items page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/common/view-pending-items-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "window-tabs-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/common/window-tabs-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex switches to the other window or tab",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex waits for the other window or tab to load",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex switches to the main window or tab",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex switches to window or tab with title {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex switches to window or tab at index {int}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/dashboard-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Dashboard section {string} is displayed on the Dashboard landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Dashboard item {string} is displayed on the Dashboard landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Dashboard page {string} is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../pages/common/installation-selector-page",
      "../../pages/dashboard/dashboard-landing-page"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-billing-information-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/sbsBilling/dashboard-billing-information-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Billing Address Type Dropdown on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Billing Name field on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Billing Address Line 1 field on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Billing City field on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Billing State dropdown on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Billing Zip field on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Billing County dropdown on the Billing Information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Save button on the Billing Information page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/dashboard/sbsBilling/dashboard-billing-information-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "dasboard-order-entry-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/sbsImplementation/dasboard-order-entry-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Order Entry Details page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Time Zone dropdown on the Order Entry Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Save button on the Order Entry Details page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/dashboard/sbsImplementation/dasboard-order-entry-details-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-address-overview-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/sbsImplementation/dashboard-address-overview-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Address Overview page is displayed from Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit on the W2 Shipping Address on the Address Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Same As dropdown on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address Details for W2 Shipping page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Shipping Address field on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the City field on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Zip Code field on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the County drop down on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the State field on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save on the Address Details for W2 Shipping page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "W2 shipping address should be {string} on the Address Overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Billing address should be {string} on the Address Overview page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/dashboard/sbsImplementation/dashboard-address-overview-page",
      "../../../pages/dashboard/sbsImplementation/dasboard-order-entry-details-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-jurisdictions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/sbsImplementation/dashboard-jurisdictions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters Experience Rate {string} on Jurisdictions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save Experience Rate button on Jurisdictions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Ok button on Information Saved modal on Jurisdictions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save Jurisdiction button on Jurisdictions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Experience Rate {string} should be displayed in the Experience Rates grid on Jurisdictions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Jurisdiction dropdown on Jurisdictions page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/dashboard/sbsImplementation/dashboard-jurisdictions-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-audit-overview-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/sbsSystem/dashboard-audit-overview-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clears the User field on the Audit Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the Date Span field on the Audit Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Retrieve Audit Data button on the Audit Overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should be displayed in the results grid on the Audit Overview page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/dashboard/sbsSystem/dashboard-audit-overview-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-change-payroll-transmission-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-change-payroll-transmission-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Change Payroll Transmission page is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/operationsHub/transmission-client-page"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-quarter-files-overrides-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-quarter-files-overrides-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Quarter File Overrides page is displayed on Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company name is displayed in the results table on the Quarter Overrides page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Okay if the Test Client warning popup is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/dashboard/usefulLinks/dashboard-quarter-file-overrides-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-rates-and-limits-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-rates-and-limits-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Tax Rates and Limits page is displayed from Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Taxes dropdown on the Taxes Rates and Limits page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Rate {string} should be displayed on the Taxes Rates and Limits page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/dashboard/usefulLinks/dashboard-state-reciprocity-page",
      "../../../pages/dashboard/usefulLinks/dashboard-rates-and-limits-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-state-reciprocity-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-state-reciprocity-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The State Reciprocity page is displayed over the Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the States dropdown on the State Reciprocity page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the Taxes dropdown on the State Reciprocity page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the Lives in SIT dropdown on the State Reciprocity page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The SIT rule description is {string} on the State Reciprocity page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The SUI rule is {string} on the State Reciprocity page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The SDI rule is {string} on the State Reciprocity page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/dashboard/usefulLinks/dashboard-state-reciprocity-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-tax-filing-status-information-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-tax-filing-status-information-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Tax Filing Status Information page is displayed on Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Exemptions tile is displayed on the Tax Filing Status Information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Exemption Personal Rate is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Exemption Default Allowance is {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/dashboard/usefulLinks/dashboard-tax-filing-status-information-page"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-tax-tables-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dashboard/usefulLinks/dashboard-tax-tables-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Tax Tables page is displayed on Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Tax Table dropdown on the Tax Tables Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filing Status on the Tax Tables Dashboard page is",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Tax Table is displayed on the Tax Tables Dashboard page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/dashboard/usefulLinks/dashboard-tax-tables-page"
    ],
    "pageObjects": []
  },
  {
    "file": "set-api-request-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dcs/set-api-request-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "I call dcs SET api {string} with an {string} and a valid Json payload {string} for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a valid dataItemKey should be returned with a status code {string}",
        "async": true
      }
    ],
    "imports": [
      "../../apis/dcs/util/generate-encrypted-payload",
      "../../apis/dcs/dcs-set-request-post",
      "validator",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "demo2-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/demo2/demo2-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/classic/common/login-page.js",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "digial-purchase-price-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/digitalPurchaseOnboarding/digial-purchase-price-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Digital purchase price page is shown with the page title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The purchase offer banner title is shown as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The purchase offer banner detail is shown as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The purchase cost detail is shown as {string} on Digital purchase {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The bundle name is shown as {string} on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The bundle description is shown as {string} on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The bundle price is shown as {string} on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The price per employee is shown as {string} on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The client testimonials section {string} is shown on Digital purchase price page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on Digital purchase price page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An offer details modal will be shown with a title {string} on Digital purchase price page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An offer details modal will be closed clicking on Got it button on the offer details modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is shown on Digital purchase {string} page",
        "async": true
      }
    ],
    "imports": [
      "../../apis/digitalPurchase/digital-purchase-lead",
      "../../pages/digitalPurchaseOnboarding/digital-purchase-price-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digial-purchase-review-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/digitalPurchaseOnboarding/digial-purchase-review-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Digital purchase {string} page is shown with the page title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Digital purchase set up page is shown with the page title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Digital purchase review page header description is shown as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A sub text is shown as {string} on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Section title {string} should be displayed on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Section sub-title {string} should be displayed on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First name {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Last name {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company name {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Number of employees {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Zip code {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email address {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Phone number {string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} value should be displayed as {string} on Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters First name {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last name {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Company name {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Number of employees {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip code {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email address {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Phone number {string} on Edit your info modal of Digital purchase review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} terms checkbox on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on input field {string} should shown as {string} on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on {string} field should shown as {string} on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message for {string} should shown as {string} on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert message header {string} is shown on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert message description {string} is shown on Digital purchase {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} terms checkbox is displayed on Digital purchase review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Auto-renewal terms additional text {string} is shown on Digital purchase Review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pricing terms additional text {string} is shown on Digital purchase Review page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/digitalPurchaseOnboarding/digital-purchase-review-page",
      "../../pages/digitalPurchaseOnboarding/digital-purchase-price-page",
      "../../pages/max/digitalplus-company-details-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digital-purchage-create-lead-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/digitalPurchaseOnboarding/digital-purchage-create-lead-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/digitalPurchaseOnboarding/digital-purchase-review-page",
      "../../pages/digitalPurchaseOnboarding/digital-purchase-price-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "dto-employee-edit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/dto/dto-employee-edit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters first name as {string} on employee info edit page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/dto/dto-employee-info-edit-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ebjm-database-check-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/ebjm/ebjm-database-check-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "eBJM flag is enabled",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/atp/ATP-runner",
      "../../pages/common/practitioner-login",
      "../../pages/common/associate-login",
      "../../pages/ebjm/ebjm-checks-page",
      "../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "service-generated-emails-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/emails/service-generated-emails-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The email {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The number of email rows returned should equal {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The email {string} field retrieved from the table should have null value",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The email {string} field retrieved from the table should be set to true",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The email {string} field retrieved from the table should be set to false",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} is contained in the email body",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "deLink-mutual-linking-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/api/deLink-mutual-linking-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "default payload {string} for de-link api is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "de-link api default payload is updated for {string} client",
        "async": true
      },
      {
        "type": "When",
        "pattern": "authorized post api with request is sent to de-link api for {string} client",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/embeddedPayroll/deLink-mutual-linking-api.js"
    ],
    "pageObjects": []
  },
  {
    "file": "keyFacts-mp-internal-api-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/api/keyFacts-mp-internal-api-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "default payload {string} for keyfacts marketplace internal api call is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "authorization api payload is updated to {string} client Id",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "post request to Authorization api is sent with valid payload to generate access token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "link initiate default payload is updated with unique value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request is sent to marketplace internal link initiate api with valid OAuth token",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "api JSON response should have properties:",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to confirm link api is sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to marketplace internal link verify api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to marketplace internal delink api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "activation api payload data is updated with unique values",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "federationId from the response is retrieve from activation api",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "keyfacts marketplace internal create api default payload is updated with unique value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to keyfacts marketplace internal create api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "keyfacts marketplace internal read api default payload is updated with unique value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to keyfacts marketplace internal read api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "keyfacts marketplace internal modify api default payload is updated with unique value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to keyfacts marketplace internal modify api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "keyfacts marketplace internal delete api default payload is updated with unique value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "post request to keyfacts marketplace internal delete api is sent with valid OAuth token",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "link process api payload is missing properties",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "link process api payload is empty properties",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "activation api payload is missing properties",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "activation api payload is empty properties",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../apis/embeddedPayroll/keyFacts-mp-internal-api.js",
      "../../../apis/embeddedPayroll/provisionClient-api.js",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "provision-client-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/api/provision-client-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "a default xml {string} file is loaded to field clock provisioning",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create client payload data is updated with a unique client id",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "a pre request script is run to generate authorization for scope {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verify client OOID is generated by the field clock provisioned create client api",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create user payload data is updated with client ooid data",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verify associate OID is generated by the field clock provisioned create user api",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "filed clock provisioned json payload {string} is loaded",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create federation id api payload is updated with aoid and ooid data",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field clock provisioned api JSON response should have property:",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "create second user payload aoid and ooid data is updated",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/embeddedPayroll/provisionClient-api.js"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-calendarpage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-calendarpage-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-calendar-page"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-clover-purchase-flow-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-clover-purchase-flow-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex logs into the sample bank application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} link is displayed on Sample Bank application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} link on Sample Bank application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies user credentials are displayed in the new tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex fetches the user credential data from the new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates back to Sample Bank Application and verifies {string} link is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs in to the Billingsgate application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button to start clover purchase flow",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Clover Bundle Purchase page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} checkbox on Clover Purchase page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens and closes Authorization accordion on Clover Purchase Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on I have read and accept authorization on Clover Purchase Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} is displayed for legal name of company",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} code for industry best fit for company",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} for federal tax identification number",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Business detail page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets started with business details on Company setup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} button to start Company setup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button to start Company setup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} header is displayed on Business detail page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks yes button for people work in this location under Business detail page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks no button for people work in this location under Business detail page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies plaid model is opened on Business detail page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies bank account is displayed in business detail page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} radio button for using ADP to make payment section",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} is displayed after setting up business details",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} status next to give us your business details",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-clover-purchase-flow-page",
      "../../../pages/embeddedPayroll/sample-bank-main-page",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-mutual-linking-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-dashboardpage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-dashboardpage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on Billings gate header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button {string} on Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Billings Gate Dashboard page should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Activation account banner button {string} should be displayed on Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Activation account modal dialog should be displayed on Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "button {string} should be displayed on Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button {string} on activation modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button Link an existing account on activation modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex tries to enter a not found page on Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the error {string} should be displayed on Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on left menu {string} on Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll left menu {string} on Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex switches back to default content out of iframe",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "button {string} should be displayed on Get Quote page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button {string} on Get Quote page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm ADP Sales Contact page should be displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-dashboard-page"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-landingpage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-landingpage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex logs into Billings Gate as {string} client user",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs into Billings Gate as Decision Engine {string} client user",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-landing-page",
      "../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-mutual-linking-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-mutual-linking-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies {string} button is displayed on Billingsgate application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Billingsgate application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies dropdown labeled {string} is displayed on Billingsgate application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the dropdown options on Billings Gate Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Terms and Conditions checkbox is displayed on RUN payroll application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Terms and Conditions checkbox displayed on RUN payroll application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on RUN payroll application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} checkbox is displayed on RUN Payroll application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} checkbox on RUN Payroll application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button for Terms and condition on RUN payroll application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} text is displayed on RUN Payroll application",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on read Authorization on RUN Payroll application",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-mutual-linking-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-projectspage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-projectspage-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-projects-page"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-reportspage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-reportspage-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-reports-page"
    ],
    "pageObjects": []
  },
  {
    "file": "billingsgate-teamspage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/billingsGate/billingsgate-teamspage-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/billingsGate/billings-gate-teams-page"
    ],
    "pageObjects": []
  },
  {
    "file": "max-embedded-run-onboarding-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/max/max-embedded-run-onboarding-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll Onboarding link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the EMBEDDED Payroll Homepage is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the EMBEDDED Payroll Non Setup tile is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Run Onboarding client is created and the Payroll Onboarding link exists",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "chooses {string} to Do any of your people work in this location in Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "chooses {string} to Do you have any additional work locations in Company Address page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/max/max-embedded-run-onboarding-page",
      "../../../pages/embeddedPayroll/sample-bank-main-page",
      "../../../pages/max/digitalplus-company-bank-account-page",
      "../../../pages/runMod/employeeManagement/personal-info-page",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "partner-definition-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/partnerDefinition/partner-definition-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The number of rows returned for {string} should equal {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The number of components returned should equal {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Embedded Payroll {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The number of rows returned should equal {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Embedded sign out text is displayed in Embedded sign out page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sign out message should contain {string} in Embedded sign out page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sign out message information should contain {string} in Embedded sign out page",
        "async": true
      }
    ],
    "imports": [
      "../../../apis/atp/ATP-runner",
      "../../../pages/embeddedPayroll/partnerDefinition/partner-signout-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "run-activation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/run-activation-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/embeddedPayroll/run-activation-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "activate-payroll-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/sampleBank/activate-payroll-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is logged into Sample Bank as {string} user",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs into Sample Bank as a client user using {string} credentials for pcc",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs into Sample Bank as a client user using {string} credentials for payroll",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Activate Payroll button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} header menu option on Sample bank",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/embeddedPayroll/sample-bank-main-page"
    ],
    "pageObjects": []
  },
  {
    "file": "link-delink-run-account-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/sampleBank/link-delink-run-account-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex logs into Sample Bank application with a new login credentials",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} link on Sample Bank application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the RUN login page is displayed in the new tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs into RUN Page using mutual linking client",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Open RUN Payroll link is displayed on Sample bank application main page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/embeddedPayroll/sample-bank-main-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "manage-users-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/embeddedPayroll/sampleBank/manage-users-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies that create user button is displayed under Manage user page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on create user under manage user page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that {string} form is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex fills in the create user form on sample bank application with valid data",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the user form is submitted successfully",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the edit icon is displayed on the manage user page next to the user created",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the edit user icon displayed on the manage user page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates required information on the update user form",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the delete icon is displayed on the manage user page next to the user",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on the delete user icon on the manage user page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the user listed is deleted successfully from the manage user page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/embeddedPayroll/sample-bank-main-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "appsnapshots-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/internal/command_center/appsnapshots-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "click the environment input box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to {string} environment option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to remote environment options",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check that there are {int} table rows",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check that {string} environment is available",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check that the table dates are valid",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check that snapshotIds are valid",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "remember the first snapshot as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "remember the page number as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to page {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "make sure the snapshots {string} the same",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "make sure that the end page is {string} the start page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to the next page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to the previous page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to the first page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate page number behavior",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate snapshot behavior",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "test remote navigation",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "set modal snapshot to position {int}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "click the deploy button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "click the cancel button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "wait {float} seconds",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to {int} days ago",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate {int} days ago starts on the current page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate calendar action for {int} days ago",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validate remote calendar action for {int} days ago",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/internal/command_center/appsnapshots",
      "@adp-sir/ngcore-foundation"
    ],
    "pageObjects": []
  },
  {
    "file": "featureflags-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/internal/command_center/featureflags-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "navigate to {string} namespace dropdown option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "select {string} flag to expand",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check that {string} is on or off",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/internal/command_center/featureflags"
    ],
    "pageObjects": []
  },
  {
    "file": "homepage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/internal/command_center/homepage-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "I can navigate to the command center homepage as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "check if {string} icon is visible",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigate to {string} app",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "I specify a baseline file {string} as {string}",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/common/command-centre-login",
      "../../../pages/internal/command_center/home",
      "../../../support/feature-flags-compare",
      "../../../support/feature-flags"
    ],
    "pageObjects": []
  },
  {
    "file": "jarvis-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/internal/jarvis/jarvis-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "I can navigate to the jarvis homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that Jarvis page loads",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I open the Help Page within Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I close the Help Page within Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I open the Settings Page within Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enable the Show Request and Response JSON setting for Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enable the Test Data setting for Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I close the Settings Page within Jarvis",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the Test Data Button is shown on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the Request and Response fields are shown on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I select the Test Data button in Jarvis",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the {string} popup on Jarvis Page is shown with the {string} message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I click the OK button on the error popup on the Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I click the Clear Fields button for Home Address on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I search for {string} as home address in Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the home address field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the home address field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the home city field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the home city field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the home state field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the home state field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the home zip field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the home zip field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enable the Same as home address setting for Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I click the Clear Fields button for Work Address on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I search for {string} as work address in Jarvis",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the work address field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the work address field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the work city field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the work city field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the work state field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the work state field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I enter {string} into the work zip field on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the work zip field contains {string} on Jarvis Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "I select the Get Jurisdiction button on Jarvis Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I verify that the {string} value in row {string} is {string} on Jarvis Page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/internal/jarvis/jarvis-home-page",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-agreements-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-agreements-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "{string} is not displayed on Digitalplus Sign agreements landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "ALex clicks on the {string} radio button on the Sign agreements page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} button on the Sign agreements page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Forward RAA button on the Sign the federal Reporting Agent Authorization page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the indentity verified modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex fills in Job Title and Signature fields on the Sign Reporting Agent Authorization page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the header is displayed on the Sign Reporting Agent Authorization page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} agreement status badge text shown as {string} on Agreements Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Submission confirmation modal shown with a header text {string} on Digitalplus Sign forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A modal shown with a header text {string} on Digitalplus Sign forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A message {string} shown on the modal of Digitalplus Sign forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the {string} button on the modal of Digitalplus Sign forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert title {string} is shown on RAA container of the on Agreements Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert message {string} is shown on RAA container of the on Agreements Landing Page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-agreements-page",
      "../../pages/common/home-page",
      "@cucumber/cucumber",
      "chai",
      "../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-address-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-address-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "DigitalPlus Company Address page with page title {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Company {string} page header description as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Company Legal address present on company details page on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Company phone number present on company details page on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses {string} to Do you have any additional work locations on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses {string} to Do any of your people work in this location under Additional location on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses {string} to Do any of your people work in this location under Legal address on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters address {string} in to Search address for Additional location on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters address {string} in to Search address for Legal addres on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} banner is displayed on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Health insurance title text {string} is displayed on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from {string} dropdown on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes Addtional location by clicking on Delete button on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} is displayed on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} input field is displayed on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select current date from {string} Date picker on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed under {string} input field on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed under {string} dropdown field on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed for {string} input field on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A validation message {string} is displayed under {string} for Legal address on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A validation message {string} is displayed under {string} for Additional location added on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A validation message {string} is displayed under {string} for Additional locations on DigitalPlus Company Address page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} radio button under Do you have any additional work locations is deselected on DigitalPlus Company Address page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-address-page",
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/max/digitalplus-common-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-bank-account-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-bank-account-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "DigitalPlus Company Bank account page with page title {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Search icon inside Account holder input field on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option from Account holder's name container on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account holder container should contain option {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Account holder on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into Account number on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into Confirm account number on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into Routing number on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into Confirm routing number on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into Bank name input field on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button is enabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button is disabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is disabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is enabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} input field is disabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} input field is enabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on field {string} should contain {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Bank name populated as {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a Giact retry message header {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a Giact retry message description {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a Giact verify message header {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a Giact message description {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see uploaded documnet {string} appeared on Uploaded files section on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see upload error message {string} appeared on Upload file section of DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Upload button is disabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can delete the file using Delete icon on file uploader section of DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes the uploaded file using Delete icon on Uploaded files section of DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button inside the Delete file modal on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a confirmation modal shown with a header {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Clicks on {string} link inside warning message of DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see a Modal opened with a title {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can close accepted proof of your account Modal on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "NACHA header {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "NACHA text {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses {string} to non affiliated third party Only on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Associate chooses {string} to non affiliated third party Only on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Non-affiliate header {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Non-affiliate header sub text {string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} modal is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clicking on {string} button, {string} modal will be closed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} section is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} section should be disappeared on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter {string} in to Non-affiliate legal name on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select {string} from Industry dropdown on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter {string} in to Federal EIN on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex enters address {string} in to Address for a non-affiliate on DigitalPlus Company Bank page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes Non-affiliate section {string} by clicking on Delete button on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Non affiliate radio button selection set to {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses Link with account numbers inside Plaid modal on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex cancels Plaid modal if displayed on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "file {string} disappeared on file upload section on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is enabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is disabled on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on DigitalPlus Company Bank account Giact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} text is displayed on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} message is displayed on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plaid modal is displayed with a title {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Bank name {string} is shown on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Bank account {string} is shown on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Bank verification status shown as {string} on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on input field {string} should shown {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on dropdown field {string} should shown {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete confirmation modal shown with a header text {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete confirmation modal shown with a description text {string} on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on the {string} modal dispalyed on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on Are you sure you don’t have any non affiliates? modal on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Verify your account info button on DigitalPlus Company Bank account page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} button is not displayed on the Company Bank account for payroll page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} link is not displayed on the DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} link is displayed on the DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Associate clicks on {string} checkbox on DigitalPlus Sales Associate bank info modal",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-bank-account-page",
      "../../pages/max/digitalplus-common-page",
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/common/plaid-modal",
      "@cucumber/cucumber",
      "chai",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-contact-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-contact-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "DigitalPlus Company Contact page with page title {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Users page header description shown as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user name is displayed on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user job title is displayed on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user phone number is displayed on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user email address is displayed on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user name is displayed as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user access type is displayed as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user job title is displayed as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user phone number is displayed as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user email address is displayed as {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is displayed on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is displayed on Edit user info modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} checkbox on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex added himself as an employee for {string} using {string} checkbox on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is ticked on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is disabled on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button against {string} user on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters First name {string} on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last name {string} on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Job title {string} on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Phone number {string} on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email {string} on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on {string} user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on Additional user delete modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company Contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} is shown for Primary Owner Phone Number on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A message {string} is shown under the email input field on Primary user Edit modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on user action menu button against user name {string} of Additional users table on DigitalPlus Company Contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on additional user contact name {string} of Additional users table on DigitalPlus Company Contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} from action menu of Additional users table on DigitalPlus Company Contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Secondary contact banner should display the message {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Secondary contact banner for no conatcts should display the message {string} on DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Name is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Name is displayed as {string} with a clickable link in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Job title is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Contact email address is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Contact number is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Additional user Access type is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First Additional user Access type is displayed as {string} in Additional users table of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses {string} radio button on Additional user modal of DigitalPlus Company contact page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} modal shown with a header {string} on DigitalPlus Company contact page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-contact-page",
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/max/digitalplus-common-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "DigitalPlus Company Onboarding page with page title {string} should be displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} menu on DigitalPlus Company Onboarding page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Company legal name exists on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Company legal name on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into DBA trade name on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Federal tax ID on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as Industry on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company Onboarding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Asssociate clicks on {string} button on DigitalPlus Company Onboarding page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Review modal with the header message {string} is displayed on DigitalPlus Company Onboarding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter company details {string} as DBA tradename and {string} as Industry for on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} radio button is selected on DigitalPlus Company name page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button should not be displayed on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button should be displayed on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} text should be displayed on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Radio button with label {string} is displayed with description {string} on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Radio button with label {string} is selected on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on field {string} should contain {string} on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on input field {string} should shown {string} on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on date input field {string} should shown {string} on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} input field is disabled on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is disabled on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} checkbox is ticked on DigitalPlus Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert message {string} is shown on Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert title {string} is shown on Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An alert title description {string} is shown on Company {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation error alert {string} is shown on Company {string} page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/max/digitalplus-common-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-pay-schedule-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-pay-schedule-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "DigitalPlus Company Pay schedule page with page title {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Check date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate should see the Check date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Pay period start date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate should see the Pay period start date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Pay period end date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate should see the Pay period end date exists on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Check date is not shown on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay period start date is not shown on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay period end date is not shown on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from {string} dropdown on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter {string} in to {string} on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} date in to {string} input field on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter date {string} of next month in to {string} input field for {string} on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} populated for Pay period end date on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see pay frequency as {string} on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see pay frequency description as {string} on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Pay period end date shown as {string} for {string} on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} pay dates on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} Pay period end date shown as {string} day of next month on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes the date entry from {string} input field on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} pay frequency option is available to choose on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on DigitalPlus Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation error message {string} is shown on Company Pay schedule page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} pay frequency option is selected on DigitalPlus Company Pay schedule page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-pay-schedule-page",
      "../../pages/max/digitalplus-common-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-company-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-company-summary-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Company Summary page with page title {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Summary page section with a title {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Summary page section with a title {string} should not be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} field should not be displayed on Company Summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} field should be displayed on Company Summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} field should have value {string} on Company Summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company summary page alert box has the title {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The chat with us now button is clicked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Adp Assist is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The close Adp Assist button is clicked",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The confirm close Adp Assist button is clicked",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The close company summary button is clicked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The company summary page is not displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-summary-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Tell us about your business is displayed in Max Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Notifications icon in header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Notifications tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Notifications slider is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the DigitalPlus Dashboard Page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} icon on Left Menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Run logo on the top left",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the LeftNav Hamburger menu is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Run Logo is displayed on DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the User Profile Icon is displayed in DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the User Company Name is displayed in DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Help and Support is displayed in DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button on chat widget",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the chat notification window is displayed with Yes And No buttons in DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes button on chat notification window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Chat icon is displayed in DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Chat icon is not displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the chat bubble in DigitalPlus Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Company submission error {string} in Tell us about your company tile on DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company submission {string} in Tell us about your company tile on DigitalPlus Dashboard should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} status displayed as {string} for {string} tile on DigitalPlus Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The dashboard is not displayed on DigitalPlus landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The message {string} is displayed on DigitalPlus landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company legal name is displayed in the onboarding Company set up page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on 1099 disclaimer modal of DigitalPlus Dashboard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex skips company details Modal steps on the DigitalPlus Dashboard Page to get on to {string} page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate finishes Company setup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on View button for about your company",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Chat banner is displayed on summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plan table is displayed on summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the view button for the {string} section on DigitalPlus Dashboard",
        "async": true
      }
    ],
    "imports": [
      "../../apis/atp/ATP-runner",
      "../../pages/max/digitalplus-dashboard-page",
      "../../pages/max/digitalplus-tiles-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-getting-to-know-you-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-getting-to-know-you-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alext clicks Submit company info button on Tell us about your company details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The header and subtitle for tell us about your summary page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The basics for tell us about your summary page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The payroll history for tell us about your summary page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The chat banner for tell us about your summary page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button for tell us about your summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes welcome modal on the Digitalplus onboarding dashboard if displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-getting-to-know-you-page",
      "../../pages/max/digitalplus-common-page",
      "@cucumber/cucumber",
      "chai",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-onboarding-checklist.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-onboarding-checklist.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/max/digitalplus-tax-onboarding-checklist",
      "../../pages/common/installation-selector-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-people-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-people-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "{string} API is called",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} API gets a successful response",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the captured API response status is {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} added as an Onboarding employee on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on employee {string} on People Landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} tile is not displayed on the People Landing Page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-people-page",
      "@cucumber/cucumber",
      "chai",
      "../../pages/runMod/employeeManagement/personal-info-page",
      "../../support/helpers",
      "../../pages/runMod/employeeManagement/setUpNewEmployee/employee-prefill-page",
      "../../pages/runMod/employeeManagement/payrollInfo/payroll-info-page",
      "../../pages/runMod/employeeManagement/common-page",
      "../../pages/runMod/employeeManagement/reviewAndComplete/review-and-complete-page",
      "../../pages/runMod/modal/security-verification-modal",
      "../../pages/common/people-landing-page",
      "../../pages/common/contractor-type-page",
      "../../pages/runMod/employeeManagement/personalInfo/contractor-info-page",
      "../../pages/runMod/employeeManagement/employmentInfo/employment-info-page",
      "../../pages/max/digitalplus-common-page",
      "../../pages/runMod/employeeManagement/taxInfo/tax-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-pto-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-pto-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/max/digitalplus-pto-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-tax-review-submit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-tax-review-submit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Gather your tax info section on digitalPlus tax review and submit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on Gather your tax info section on digitalPlus tax review and submit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on {string} section on digitalPlus tax review and submit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} popup displayed on digitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and submit tax info screen displayed on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} state tax section displayed with {string} taxID for {string} on tax review and submit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The close tax summary button is clicked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Federal doc section is displayed on tax summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers comp section is displayed on tax summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers comp section is displayed with {string} on tax summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "workers comp section is displayed with date on tax summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "document uploaded count {string} for state {string} is displayed on tax summary page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-tax-review-submit-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-tax-sales-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-tax-sales-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/max/digitalplus-tax-sales-page",
      "../../pages/common/installation-selector-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-tax-state-taxes-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-tax-state-taxes-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex search and choose Workers Compensation Class Code {string} on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Workers Comp {string} on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from {string} dropdown on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Acknowledgement tick box is shown on Digitalplus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Input field {string} should not be displayed on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Input section {string} should not be displayed on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} is displayed for {string} input field on DigitalPlus DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} is displayed for {string} WC input field on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} tax Id from left hand menu on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} radio button on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} input field is disabled on DigitalPlus State tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax info status for {string} is shown as {string} on DigitalPlus Tax Review and submit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex fills in {string} as tax ID on Digitalplus State tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on next button and captures the network traffic on DigitalPlus State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} in the workers comp search input field on DigitalPlus State tax page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-tax-state-taxes-page",
      "../../pages/max/max-tax-page",
      "../../pages/max/digitalplus-common-page",
      "../../pages/max/digitalplus-company-details-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-tax-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-tax-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex Verifies Radio button with label {string} is selected on DigitalPlus Tax {string} page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/max/digitalplus-tax-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalplus-tiles-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalplus-tiles-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Countdown to payroll is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Countdown tile is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Chat tile is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/digitalplus-tiles-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "digitalpplus-secondary-user-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/digitalpplus-secondary-user-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/max/digitalplus-secondary-user-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "max-tax-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/max-tax-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the DigitalPlus Provide Tax Ids option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} state on digitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on federal menu on federal info V2 tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Why we need your tax Ids text is shown as {string} on Digitalplus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Workers comp menu should not be displayed on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on federal menu on federal info tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verify FEIN value on federal info tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Gather your tax ids option is displayed in LeftNav menu on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "DigitalPlus {string} heading is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} radio button on state info tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verify {string} help text  on state info tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates using next button on state info tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on state {string} section on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects file to upload on DigitalPlus Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} option on DigitalPlus Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on learn More for taxid page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verify learn More link is displayed on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Header is displayed in Learn More popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on state info tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verify uploaded documnet appearing on upload section on DigitalPlus Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Enter TaxID {string} in to the California Employer Payroll Tax Account Number",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Enter TaxID {string} in to the {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Acknowledge on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on done button on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verify TaxID {string} on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see uploaded documnet {string} appeared on Uploaded files section DigitalPlus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters TaxID in to the {string} on DigitalPlus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Submission confirmation modal shown with a header text {string} on Digitalplus tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Submission confirmation modal on submission of agreements is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on acknowledge on the modal displayed on agreements page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on non-critical popup in tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} missing tax id name is displayed on DigitalPlus Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} popup is displayed on  tax I am done",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} tax id label name is displayed on DigitalPlus Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "{string} clears the tax ID on the digitalPlus Tax Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on acknowledge checkbox on Submission confirmation modal of Digitalplus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} acknowledge checkbox on Submission confirmation modal of Digitalplus tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the current date for the Workers comp start date on DigitalPlus tax page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/max-tax-page",
      "@cucumber/cucumber",
      "chai",
      "../../pages/max/digitalplus-common-page",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "sales-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/max/sales-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "SalesAssociate focus on the Dashboard Menu and click on Installation selector from sales dashboard home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate focus on the Dashboard on left nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clicks on the installation selector",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Installation selector page is loaded from Dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate focus on the Dashboard Menu and click on Sales Dashboard menu from sales dashboard home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The sales representative name with icon loaded on the sales dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate searching the client by IID {string} on search box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate searching the client by Company Name on search box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate searching the client by status {string} on search box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clear the Searched  IID OR Company name from search box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Not registered from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Registered from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Company from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The People from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Tax from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The PTO from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Agreements from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Submitted to QC from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate select The Flagged as never start from filter dropdown on the Sales Dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filtered row with company name and IID are displayed in the grid on sales dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filtered row with {string} status is displayed in the grid on sales dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Should sees the filtered row with Flagged company name on table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SalesAssociate should see the sales order table on sales dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First column Company name should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Second column Contact should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Third column Contact info should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fourth column Check date should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fifth column Client progress should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sixth column Status should displayed on sales dashboard table",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clear the all status from filtered items on sales dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate Select the Resend Registration email from kebab menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate Cancels the Registration email from model",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate Submits the Registration email from model",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The success banner on the header should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The success banner on the header should not be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Flagging option should be enabled in kebab menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clicks on the filtered alex from Sales Dashboard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clicks on the company for the filtered {string} from Sales Dashboard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clicks on the company of the newly provisioned iid for Alex from Sales Dashboard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "SalesAssociate clicks on the {string} icon on Left Menu from Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verifies that the DigitalPlus Dashboard Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verifies that the Run Logo is displayed on DigitalPlus Dashboard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Associate clicks on {string} menu on DigitalPlus Company Onboarding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Associate clicks on {string} button on DigitalPlus Company Bank account landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button is displayed on Sales Associate bank info modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate bank info modal displayed with title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate bank info modal text is displayed as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sales Associate bank info modal checkbox text is displayed as {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Sales Associate clicks the {string} button on Sales Associate bank info modal",
        "async": true
      }
    ],
    "imports": [
      "../../pages/max/sales-dashboard-page",
      "../../pages/max/digitalplus-dashboard-page",
      "../../pages/max/digitalplus-tiles-page",
      "../../pages/max/digitalplus-company-bank-account-page",
      "../../pages/runMod/time/Enableadptkfeature-page",
      "../../pages/max/digitalplus-company-details-page",
      "../../pages/common/practitioner-login",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "quarterly-files-mimic-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/mimic/quarterly-files-mimic-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex processes quarterly files",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/mimic/quarterly-files-mimic",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "billing-home-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/billing/billing-home-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the billing wholesale child client company",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/billing/billing-home-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "home-chatbot-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/chatbot/home-chatbot-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies chat link existance in overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ChatBot for user without firstpayroll run",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the chat icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the chat link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies chat widget opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies for Chatbot header option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies chatbot options based on agents availability",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll chatbot option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Clicks on close button on chat widget",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies notification window displayed with yes And No buttons",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on yes button on notification window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies survey form displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies survey form not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies survey options on survey window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ratings displayed as per star selected for first question",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ratings displayed as per star selected for Second question",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ratings displayed as per star selected for Third question",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter survey comments and click on submit survey",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies suvery submitted successfully",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies chat widget closed and chat icon displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select wholesale child client from table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ChatAvailability for WholeSaleClient",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies cobrowse link avaliable in help and support menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on cobrowse footer links",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies cobrowse session key generated",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/chatbot/home-chatBot-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "check-print-basepage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/check-print-basepage-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Check Print Options modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Print Checks option in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Print Direct Deposit Vouchers option in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Print Cash Vouchers option in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reprint Checks option in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reprint Direct Deposit Vouchers in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reprint Cash Vouchers option in Check Printing options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Print a Test Check option in Check Printing options modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} page is displayed in NG RunMod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Create PDF to Print button for Printing Checks first printing in NG Runmod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Create PDF to Print Button in NG Runmod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the PDF tab and returns to NG RunMod",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal telling Alex that there are {string} to be printed is displayed in NG Runmod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Okay to continue to print in NG Runmod",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No checks or stubs to print at this time message is displayed in NG Print Checks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel on the No Checks to Print message on Print Checks page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/check-print-basepage"
    ],
    "pageObjects": []
  },
  {
    "file": "check-reconciliation-and-check-number-update-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/check-reconciliation-and-check-number-update-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Mark checks that have cleared option in Check and Payment options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Update check number option in Check and Payment options modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Find in the Check Reconciliation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Find in the Check Number Update page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Status",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Today date as Cleared Date in Check Reconciliation Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Updates Check Number for a Check in Check Number Update Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save Button in the Check Reconciliation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save Button in the Check Number Update page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/check-print/check-reconciliation-and-check-number-update-page"
    ],
    "pageObjects": []
  },
  {
    "file": "dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the Shipping details option on the Dashboard page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/dashboard-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-print-redirect-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/payroll-print-redirect-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Print Redirect page is displayed in NG RunMod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} print center from the Redirect from print center dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the radio button for Redirect all payroll print to one print center",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the radio button No Redirection and clicks on the Save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects current date as the start date and start time as {string} AM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects current date as the end date and end time as {string} PM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Redirect to print center as {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Shipper Account number as {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on the Saved Successfully modal",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/payroll-print-redirect-page"
    ],
    "pageObjects": []
  },
  {
    "file": "print-sample-check-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/print-sample-check-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Check Details page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Create PDF to Print Button in Check Details to print a Sample Check",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the PDF tab and returns to Check Details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Print Number on Check dropdown on the Check Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save on the Check Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Successfully saved modal is displayed on the Check Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Okay on the Successfully saved modal on the Checks Details page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/check-print/print-sample-check-page",
      "../../../pages/runMod/check-print/check-print-basepage"
    ],
    "pageObjects": []
  },
  {
    "file": "print-taxforms-1099s-W2s-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/print-taxforms-1099s-W2s-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Create Image button in tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create PDF To Print button to print 1099 Forms",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Forms stock type dropdown in tax Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create PDF To Print button to print W2 Forms",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee data grid is displayed for the selected value in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Close button in 1099 Forms page and returns to homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Home page is displayed after clicking Close button in 1099 Forms page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/check-print/print-taxforms-1099s-W2s-page",
      "../../../pages/runMod/check-print/check-print-basepage",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "reprint-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/reprint-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Find on the Reprint page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks an employee to reprint their check",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning about Check Numbers have changed is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel on the Re-print page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/reprint-checks-page",
      "../../../pages/runMod/check-print/check-print-basepage"
    ],
    "pageObjects": []
  },
  {
    "file": "retransmit-to-printcenter-search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/retransmit-to-printcenter-search-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the first Payrun with {string} status and clicks on the select button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Clicks on the send button for re transmitting payroll",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the ok button on the warning dialog",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Checks",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} Print Center",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/retransmit-to-printcenter-search-page"
    ],
    "pageObjects": []
  },
  {
    "file": "shipping-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/shipping-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Shipping details page is displayed in NG RunMod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Check type",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Print Center",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Carrier",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} option as Reports",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on the Shipping details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save Successfull modal is displayed on the Shipping details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on the Saved Successfully modal on the Shipping details page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/shipping-details-page"
    ],
    "pageObjects": []
  },
  {
    "file": "test-checks-print-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/check-print/test-checks-print-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Test Checks page is displayed in NG RunMod",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add new test on the Test Checks print page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Test1 to the test name field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adjusts the vertical shift for the new Test check",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adjusts the horizontal shift for the new Test check",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Create PDF to Print on Print Test Check page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Letting you know modal regarding proper alignment is displayed on Print Test Checks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on the Letting you know modal on Print Test Checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Letting you know modal regarding saved alignment settings is displayed on Print Test Checks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Edit test in list on Test Checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Letting you know modal asking if Alex is sure about deleting the Test Check is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Delete on Test1 for cleanup in Print Test Check page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Test Check PDF Tab and returns to NG Print Test Check page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/check-print/test-checks-print-page"
    ],
    "pageObjects": []
  },
  {
    "file": "adding-state-tax-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/adding-state-tax-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Tax Info page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "State Tax page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the dropdown and types {string} on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State ID number on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as EIN Check Digit number on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State Unemployment Experience Rate on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as Employer Category on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as PFML Employer Category on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the Employer Category Current Quarter date on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the Sui Experience Rate From Date on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the PFML Employer Category Current Quarter date on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as PFML Employer Contribution on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save to Save State Tax on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Do It Later on the Tax Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Okay on the Tax Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "State Tax {string} {string} is saved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit on {string} on the Tax Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State Identification Number is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Unemployment State Identification Number is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The EIN Check Digit is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State Unemployment Experience Rate is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PFML Employer Contribution is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PFML Employer Category is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PML Employer Category is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Employer Category Current Quarter date is the same on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Sui Experience Rate From Date is the same on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PFML Employer Category Current Quarter date is the same on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State PFML EIN on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State Unemployment Identification Number on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State PFML EIN is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State Unemployment Identification Number is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as Paid Medical Leave on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as Paid Family Leave on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as Long Term Care on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Paid Medical Leave is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Paid Family Leave is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Long Term Care is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as WA Unified Business Identifier on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters todays date as Massachusetts business start date on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Massachusetts business start date is currently todays date on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State Paid Family Leave Identification Number on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State Paid Family Leave Identification Number is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as State Paid Medical Leave Identification Number on the State Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State Paid Medical Leave Identification Number is currently {string} on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Federal, state, and local tax profile link to access the Tax Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks New Jurisdiction to add a new State",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Juris name {string} from dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next when trying to add a Jurisdiction",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as deposit frequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the current date for the ADP filing start date",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the current date for the Client filing start date",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as Jurisdiction Employer Category",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} Ein",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save to start saving the State",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save when trying to save a State",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} radio button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks okay after adding jurisdiction",
        "async": true
      },
      {
        "type": "When",
        "pattern": "State is added {string} {string} is saved",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The EIN is currently {string} Jurisdiction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Employer Category is currently {string} Jurisdiction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Employer Category effective date is currently the start of the current quarter Jurisdiction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as SIT Check Digit number on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks new contribution button on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters current quarter start date when adding a contribution on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the percentage when adding a contribution on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save experience rate button on the State Tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks somewhere on the Jurisdiction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as Jurisdiction Employee Group",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} Ein check digit",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The {string} table is cleared for {string} IID and {string} Juris Code",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks outside of the date input field after entering a date on the Jurisdiction page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/company/employerCategory/adding-state-tax-page",
      "@cucumber/cucumber",
      "../../../apis/atp/ATP-runner",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "bank-accounts-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/bank-accounts-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks add new bank account button on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks replace bank account button for bank {string} on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on x to close the bank accounts CAA non affiliates page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "account holders name dropdown should contain options {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the description text {string} on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the table footer text {string} on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the description text {string} on the bank accounts giact failure page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the description text {string} on the bank accounts success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the main info text {string} on the bank accounts success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the signature info text {string} on the bank accounts success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the heading text {string} on the bank accounts giact failure page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the heading text {string} on the bank accounts success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the bank account name {string} on the bank accounts overview page row {float}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the bank account number {string} on the bank accounts overview page row {float}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the bank account usage {string} on the bank accounts overview page row {float}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the bank account products {string} on the bank accounts overview page row {float}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the bank account product {string} on the bank accounts overview page row {float}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see confirmation that bank {string} with account ending in {string} has been added on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see confirmation that bank {string} with account ending in {string} has replaced bank {string} and account {string} on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the payroll box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the billing box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the adp services box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the product boxes",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the tax filing product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the fsdd product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the adp check product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the gps product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the 401k product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the pay by pay product box is selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the tax filing product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the fsdd product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the adp check product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the gps product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the 401k product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the pay by pay product box is not selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the confirmation modal includes the {string} service on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the confirmation modal does not include the {string} service on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the pay by pay product boxes",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the submit button is enabled on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the try again button on the bank accounts giact failure page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the next button is enabled on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the checkbox {string} on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects the checkbox {string} on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the product checkbox {string} on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects the product checkbox {string} on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on the items will not be funded pop up modal on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on the items will not be funded pop up modal on the bank accounts select account usage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks previous button on the bank accounts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks leave without saving button on the bank account select account usage page modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks go back and save button on the bank account select account usage page modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the next button on bank accounts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the cancel button on bank accounts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the submit button on bank accounts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects user {string} from the client confirmation modal dropdown on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save on client confirmation modal on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the client confirmation modal on the bank accounts enter bank account info page is populated with the following users:",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the select a different client link from the client confirmation modal on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the try again button on bank accounts giact failure page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the go to bank accounts button on bank accounts giact failure page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the go to bank accounts button on bank accounts success page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the name on account field on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the bank name field on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the plaid link on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the bank name field to be populated with {string} on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the add bank account button is disabled on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the payroll in progress message {string} is displayed on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the digital signature message {string} is displayed on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks review and accept CAA button on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the {string} field on the enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on the routing number field on the enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on the confirm routing number field on the enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on the account number field on the enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit on the confirm account number field on the enter bank account info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the add account button on the bank accounts overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the replace button on the bank accounts overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for validation messages to appear on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the non-affiliate form section on the bank accounts CAA non affiliates page is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the non-affiliate form section on the bank accounts CAA non affiliates page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the no radio button on the bank accounts CAA non affiliates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the yes radio button on the bank accounts CAA non affiliates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the examples link on the bank accounts CAA non affiliates page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the examples modal header text {string} on the bank accounts CAA non affiliates page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the examples modal has been closed on the bank accounts CAA non affiliates Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the close button on the examples modal on the bank accounts CAA non affiliates Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} in the company legal name field on the bank accounts CAA non affiliates Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} in the federal ein field on the bank accounts CAA non affiliates Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the industry dropdown field on the bank accounts CAA non affiliates Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the delete button on non-affiliate form one on the bank accounts CAA non affiliates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on non affiliate page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the pdf is displayed on the review and accept caa page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reloads the pdf if not displayed on the review and accept caa page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters address {string} in address field on the bank account caa non affiliates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Got it button on the dialog displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see inline heading text {string} on the bank accounts success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects address {string} from the dropdown menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the add checking account button on the bank accounts plaid entry page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the last check number field on the bank accounts plaid verified page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the submit button on the bank accounts plaid page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the previous button on the bank accounts plaid entry page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the cancel button on the bank accounts plaid entry page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the learn more link on the bank account info plaid entry page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the bank accounts learn more modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the bank accounts learn more modal is displayed on the bank account info plaid entry page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the bank accounts learn more modal is not displayed on the bank account info plaid entry page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the last check number on account field is displayed on the bank accounts enter bank account info plaid verified page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the last check number on account field is not displayed on the bank accounts enter bank account info plaid verified page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on x in the company bank accounts header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into field {string} on the bank accounts enter bank account info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the field {string} on the bank accounts enter bank account info page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-overview-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-select-account-usage-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-plaid-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-enter-bank-account-info-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-giact-failure-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-success-page",
      "../../../pages/runMod/company/bankAccounts/bank-accounts-caa-non-affiliates-page",
      "../../../pages/runMod/company/bankAccounts/bank-account-caa-review-and-accept-page"
    ],
    "pageObjects": []
  },
  {
    "file": "company-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/company-details-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to W2 Delivery edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "W2 Delivery page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select Other in the Make this address the same as drop dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Canada in the Country dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the State on the W2 Delivery page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Zip Code on the W2 Delivery page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the City on the W2 Delivery page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks No Thanks button in the pop up",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address Line One is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address Line Two is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address City is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address State is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address Country is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Address Zip Code is currently {string} on the Company Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Legal Address edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Legal Address page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the State on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears text from all fields on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Zip Code on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the City on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address Line 1 on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address Line 2 on the Legal Address page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button in the pop up",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address Line 1 on the W2 Delivery page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as the Address Line 2 on the W2 Delivery page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../apis/atp/ATP-runner",
      "../../../pages/runMod/company/companyDetails/company-details-page"
    ],
    "pageObjects": []
  },
  {
    "file": "company-payment-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/company-payment-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the Company Payment Checks option from the settings menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payees name is displayed in company payment checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "status is displayed in company payment checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "last check is displayed in company payment checks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "amount is displayed in company payment checks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex add the payment check by clicking on Add payment check",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex save the changes by clicking save button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the required field message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex cancel the changes by clicking on cancel button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "verifies the leave without saving popup message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the company payment checks page remains same",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the popup as select atleast 1 deductions",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex will close the popup by clicking on ok button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects active payment check on company payment checks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the added deduction included payees name in edit mode",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/company/companyPaymentChecks/company-payment-checks-page.js"
    ],
    "pageObjects": []
  },
  {
    "file": "company-pto-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/company-pto-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks the close button on the company paid time off Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Add Plan link on the company paid time off Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes {string} plan from company paid time off home page if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes {string} created plan from company paid time off home page if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Show more earnings link on the company paid time off Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Show less earnings link on the company paid time off Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} tile on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the month to reset dropdown to appear on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the pay frequency dropdown to appear on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} tile is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Next button on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Back button on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Next button is disabled on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the header left arrow on the company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Continue Working button on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Leave Without Saving button on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company PTO Home page header {string} should display",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button with label {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the modal button with label {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters plan description as {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a plan name as {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters default available hours for the year as {string} on paid time off accrual type page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into field {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into maximum hours an employee can earn on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should display value {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should display input value {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field maximum number of hours should display value {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into balance cap unused hours on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks checkbox {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks checkbox {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Checkbox {string} is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks radio {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "enter rate manually button is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "use calculator button is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks unlimited hours checkbox on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks carry over unlimited hours checkbox on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "unlimited hours checkbox is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "unlimited hours carry over checkbox is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks the Automatically add new employees to this plan checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Automatically add new employees to this plan checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Earn Sick hours when not being paid checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Earn Sick hours when on Leave of absence checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks the Earn hours when not being paid checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Earn hours when not being paid checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks the Earn hours when on Leave of absence checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Earn hours when on Leave of absence checkbox on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Automatically add new employees to this plan checkbox is selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Automatically add new employees to this plan checkbox is not selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earn hours when not being paid checkbox is selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earn hours when not being paid checkbox is not selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earn hours when on Leave of absence checkbox is selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earn hours when on Leave of absence checkbox is not selected on pto additional options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "dropdown choose pay frequency should display {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} pay frequency from dropdown on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit link in section with label {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks manage link in section with label {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Select all employees checkbox on company PTO assign employees page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the checkbox for employee {string} on company PTO assign employees page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the checkbox for employee {string} on company PTO assign employees page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks the checkbox for employee {string} on company PTO assign employees page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into balance field for employee {string} on company PTO assign employees page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "for employee {string} Balance column should display value {string} on company PTO assign employees page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters anniversary year with value {string} on the work anniversary awards page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters increase PTO allowance field with value {string} on the work anniversary awards page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a toast is displayed saying We saved your new work anniversary award",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex dismisses the toast on Work Anniversary Awards page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "anniversary year {string} should display on the work anniversary list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "anniversary year {string} should not display on the work anniversary list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "new PTO rate field for anniversary year {string} should display value {string} on the work anniversary list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "hours per year field for anniversary year {string} should display value {string} on the work anniversary list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "new PTO allowance field for anniversary year {string} should display value {string} on the work anniversary list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit icon for anniversary year {string} for an annual allowance plan award on the work anniversary list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks edit icon for anniversary year {string} for a per hour or per pay period plan award on the work anniversary list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete icon for anniversary year {string} for an annual allowance plan award on the work anniversary list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete icon for anniversary year {string} for a per hour or per pay period award on the work anniversary list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should display value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "earnings field {string} should display tooltip value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "earnings field {string} should contain tooltip value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} earning is not displayed on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} earning is displayed on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "new PTO rate field for anniversary year {string} should display value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "hours per year field for anniversary year {string} should display value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "new PTO allowance field for anniversary year {string} should display value {string} on a company PTO review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "for plan name {string} Method column should display value {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "for plan name {string} PTO Rate Or Amount column should display value {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "for plan name {string} Assigned column should display value {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Assigned value icon for plan name {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu item {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu item {string} with plan name {string} on the company PTO Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plan name {string} should not display on the company PTO Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plan name {string} should display on the company PTO Home page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the plan name {string} is displayed on the company PTO Home page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the plan code {string} for current client is ended",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the plan code like {string} for current client is ended",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the work anniversaries for plan code {string} for current client are deleted",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the work anniversaries like plan code {string} for current client are deleted",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "all the work anniversaries for current client are deleted",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the employee PTO plans for plan code {string} for current client are inactive",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "the employee PTO plans like plan code {string} for current client are inactive",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "message popup header {string} is displayed on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "message popup text {string} is displayed on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "work anniversary message popup text {string} is displayed on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "message popup with the following body text is displayed on a company paid time off page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see popup text {string} displayed on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the View more info link in the opt out message on the company paid time off Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PTO {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The PTO {string} field retrieved from the table should have null value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters number {string} in waiting period field",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} displays against waiting period field in the additional option page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex see waiting period check box is set in additional option page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} displays for pto plan dialog",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the plan type {string} should not display on the company pto plan type page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "pto plan type {string} should display on the company pto plan type page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add your own option should not display on the company pto plan type page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} button should not display on the custom pto type modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks earning checkbox label {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks earning checkbox label {string} on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning checkbox {string} is selected on a company paid time off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning checkbox {string} is not selected on a company paid time off page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../apis/atp/ATP-runner",
      "../../../pages/runMod/employeeManagement/common-page",
      "../../../pages/runMod/company/pto/company-pto-home-page",
      "../../../pages/runMod/company/pto/company-pto-accrual-type-page",
      "../../../pages/runMod/company/pto/company-pto-work-anniversary-awards-page",
      "../../../pages/runMod/company/pto/company-pto-work-anniversary-awards-list-page",
      "../../../pages/runMod/company/pto/company-pto-generic-page",
      "../../../pages/runMod/company/pto/company-pto-additional-options-page",
      "../../../pages/runMod/company/pto/company-pto-review-page",
      "../../../pages/runMod/company/pto/company-pto-assign-employees-page"
    ],
    "pageObjects": []
  },
  {
    "file": "custom-notifications-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/custom-notifications-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to the Custom Notifications page by clicking Set up custom reminders link in Company Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks X button in the custom notification header on the set up custom reminders page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the {string} dropdown in the custom notification page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "custom reminders sub text will display on custom notifications page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@playwright/test",
      "@cucumber/cucumber",
      "../../../pages/runMod/company/customNotifications/custom-notifications-page"
    ],
    "pageObjects": []
  },
  {
    "file": "departments-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/departments-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks add department button on the departments overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks assign button on the departments overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes the department with number {string} on the departments overview page if it exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the x button in the departments header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the department number field on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the department number field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the department name field on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the department name field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the general ledger class field on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the departments status dropdown field on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the department number field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the department name field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters text {string} into the general ledger class field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the departments status dropdown field on the manage department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save button on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks move people button on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks not now button on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button on the add department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save button on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on the departments manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks go to people button on the departments manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects department row number {string} on the departments overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects department {string} on the departments overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on View or Manage people link on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok on the deactivating departments modal on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok on the activating departments modal on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete department on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Continue without saving on the unsaved changes modal on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save and continue in Unsaved Changes dialog",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Department status inline message on the manage department page should contain {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Department status validation message on the manage department page should contain {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Department number validation message on the add department page should contain {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Department name validation message on the add department page should contain {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button {string} on department save confirmation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} on view manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} on move people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} on assign department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks row {string} employee checkbox on add people modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} department from the moving from dropdown for employee {string} on add people modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} department from the moving from dropdown for employee {string} on move people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} department from the assign to dropdown for employee {string} on assign department page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} department from the assigned department dropdown for employee {string} on view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the action cannot be performed modal is not displayed on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the action cannot be performed modal is displayed on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the just letting you know modal is displayed on the departments manage page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the just letting you know modal contains the text {string} on the departments manage page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the something you should be aware of modal contains the text {string} on the departments manage page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the OK button on the action modal on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is added to the assign new people table on view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments payroll banner displays {string} on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments multi rate banner displays {string} on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments people banner displays {string} on the departments view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments people banner displays {string} on the departments assign page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments assignment banner displays {string} on the departments overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the departments assignment banner is not displayed on the departments overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is added to the people currently assigned table on view manage people page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is not listed in the people currently assigned table on view manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} on add people modal on view manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on person link {string} on view manage people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X button on add people modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on row {string} delete icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X to exit Departments overview page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/common/practitioner-login",
      "../../../pages/runMod/company/departments/departments-overview-page",
      "../../../pages/runMod/company/departments/departments-add-page",
      "../../../pages/runMod/company/departments/departments-manage-page",
      "../../../support/credentials-manager",
      "../../../pages/runMod/company/departments/departments-save-confirmation-page",
      "../../../pages/runMod/company/departments/departments-view-manage-people-page",
      "../../../pages/runMod/company/departments/departments-assign-people-page",
      "../../../pages/runMod/company/departments/departments-assign-department-page",
      "../../../pages/runMod/company/departments/departments-manage-people-page",
      "../../../pages/runMod/company/departments/departments-move-people-page"
    ],
    "pageObjects": []
  },
  {
    "file": "earnings-and-deductions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/earnings-and-deductions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks x in the header on the earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back in the header on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks view list of all earnings on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks view list of all deductions on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the {string} category tab on the settings earnings and deductions add flow list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the name {string} on the settings earnings and deductions add flow list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the cancel button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the lets go button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the next button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the done button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the close button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the edit button for the {string} section on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the edit button for the {string} section on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the edit button for the {string} section on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the save button on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the save button on the settings earnings and deductions add a deduction add flow review and save page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the save button on the settings earnings and deductions edit your earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the search field on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the deductions tab on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the retirement tab on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the earnings tab on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the garnishments tab on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the earning deduction {string} on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu for earning deduction {string} on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu item {string} for {string} on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes the earning {string} on the settings earnings and deductions overview page if it exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes the deduction {string} on the settings earnings and deductions overview page if it exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the add an earning button on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the add a deduction button on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the add a retirement deduction button on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the add a garnishment button on the settings earnings and deductions overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the im done button on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the description text {string} is displayed on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add flow success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the description text {string} is displayed on the settings earnings and deductions add flow list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add flow list page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow start page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the description text {string} is displayed on the settings earnings and deductions add an earning add flow start page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow rename your earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow rename your deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow w2 page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow w2 page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow partial amount page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow job costing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow default amount page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow default percentage page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow deduction frequency page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the input amount heading text {string} is displayed on the settings earnings and deductions add a deduction add flow default amount page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the input percentage heading text {string} is displayed on the settings earnings and deductions add a deduction add flow default percentage page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow calculation method page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow earning frequency page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning name section is displayed on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning name section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction name section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the allow partial amount section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the regular rate of pay section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the regular rate of pay section is displayed on the settings earnings and deductions review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 box 14 section is displayed on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 box 14 section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction w2 box 14 section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the default percentage section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning calculation section is displayed on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning calculation section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning frequency section is displayed on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning frequency section is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning name displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction name displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning name displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction name displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the allow partial amount displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the regular rate of pay displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the regular rate of pay displays {string} on the settings earnings and deductions review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the worksheet name displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the worksheet name displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the include on w2 box 14 displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the include on w2 box 14 displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction include on w2 box 14 displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the default percentage displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 box 14 label displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 box 14 label displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction w2 box 14 label displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the how to calculate earning displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the how to calculate earning displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the include in job costing displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the include in job costing displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the when to pay earning displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the when to pay earning displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the selected eligible earnings displays {string} on the settings earnings and deductions add an earning add flow review and save page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the selected eligible earnings displays {string} on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the select eligible earnings dropdown field on the settings earnings and deductions add an earning add flow eligible earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the select eligible earnings dropdown field on the settings earnings and deductions add a deduction add flow eligible earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} field on the settings earnings and deductions earnings list page filter modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects option {string} from the settings earnings and deductions earnings list page filter modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the ok button on the settings earnings and deductions add flow success page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects option {string} from the settings earnings and deductions add an earning add flow eligible earning page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects option {string} from the settings earnings and deductions add a deduction add flow eligible earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} tag is visible on the settings earnings and deductions add an earning add flow eligible earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} tag is visible on the settings earnings and deductions add a deduction add flow eligible earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add an earning add flow eligible earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the heading text {string} is displayed on the settings earnings and deductions add a deduction add flow eligible earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sub heading text {string} is displayed on the settings earnings and deductions add an earning add flow rename your earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the sub heading text {string} is displayed on the settings earnings and deductions add a deduction add flow rename your deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the radio button {string} is selected on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the radio button {string} is not selected on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the checkbox {string} is checked on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the checkbox {string} is not checked on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 checkbox is unchecked on the settings earnings and deductions add an earning add flow w2 page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the w2 checkbox is unchecked on the settings earnings and deductions add a deduction add flow w2 page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the job costing checkbox is unchecked on the settings earnings and deductions add an earning add flow calculation method page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the job costing checkbox is checked on the settings earnings and deductions add an earning add flow calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the w2 checkbox on the settings earnings and deductions add an earning add flow w2 page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the w2 checkbox on the settings earnings and deductions add a deduction add flow w2 page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the {string} radio button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the text from the enter a name field on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the text {string} in the enter a name field on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the text {string} in the enter a name field on the settings earnings and deductions add a deduction add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears the text from the worksheet name field on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the text {string} in the worksheet name field on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the revert to original name button on the settings earnings and deductions add an earning add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the revert to original name button on the settings earnings and deductions add a deduction add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the text {string} in the enter name or label field on the settings earnings and deductions w2 add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the text {string} in the enter name or label field on the settings deductions w2 add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the default percentage field on the settings default percentage add flow page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unchecks the include in job costing checkbox on the settings earnings and deductions add an earning add flow calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the {string} checkbox on the settings earnings and deductions add an earning add flow earning frequency page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the name {string} is displayed on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the value {string} is displayed in the {string} field on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning name {string} is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction name {string} is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the description {string} is displayed on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the earning description {string} is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction description {string} is displayed on the settings earnings and deductions summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the why this is important heading {string} is displayed on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the why this is important description {string} is displayed on the settings earnings and deductions add flow page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{int} records are displayed in the table on the settings earnings and deductions add an earning page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "there are {string} in the table on the settings earnings and deductions add an earning page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/common/practitioner-login",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-overview-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-flow-list-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-start-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-rename-your-earning-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-common-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-w2-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-calculation-method-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-earning-frequency-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-eligible-earnings-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-review-and-save-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-an-earning-add-flow-regular-rate-of-pay-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-flow-success-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-start-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-rename-your-deduction-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-w2-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-partial-amount-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-job-costing-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-default-amount-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-default-rate-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-default-percentage-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-deduction-frequency-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-eligible-earnings-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-add-a-deduction-add-flow-review-and-save-page",
      "../../../pages/runMod/company/earningsAndDeductions/earnings-and-deductions-summary-page",
      "../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "job-costing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/job-costing-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters customer name as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters job name as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters job code as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random job code on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters job description as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates job description as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects status as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects state as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects local as {string} on job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save on the job costing job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex cancels changes on job costing job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job name message should display {string} on job costing job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job payroll message should display {string} on job costing job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the empty in-tray icon on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Add new job button on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the job costing overview page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button on the Job costing information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save button on the Job costing information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the search field on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters randomly created job code into the search field on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see that the save button is disabled on the Job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see that the save button is enabled on the Job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the save successful toast on the Job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu for job code {string} on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes job code {string} if it exists on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu for job description {string} on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu for the randomly created job code on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the {string} option in the kebab menu on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the {string} option in the kebab menu on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the state dropdown on the Job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that state dropdown is not displayed on the Job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the local dropdown validation error {string} on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the job code validation error {string} on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the job name validation warning {string} on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that column {string} is displayed on the Job overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that column {string} is not displayed on the Job overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the kebab menu item {string} on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the delete job button in the modal on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the job on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see that the job code field is disabled on the Job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the job name {string} for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the job description {string} for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the state {string} for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the local {string} for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex leaves without saving changes on the job information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes back to save changes on the job information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the required field error {string} under job name field on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the required field error {string} under customer name field on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the invalid format error {string} under customer name field on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the job status {string} for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks customer name info icon on the Job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the customer name tooltip in customer name field on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the customer name change info text under customer name field on the job costing information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks job name for the randomly created job on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that terminated jurisdiction warning icon for job name {string} is displayed on the job costing overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks terminated jurisdiction warning icon for job name {string} on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that terminated jurisdiction warning message for job name {string} is displayed on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the terminated jurisdiction info icon under Status field on the job costing information page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the terminated jurisdiction info text under Status field on the job costing information page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The error displayed under {string} field contains text {string} on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the error displayed under {string} field on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the required field error displayed under {string} field on the job costing overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the format error displayed under {string} field on the job costing overview page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/common/practitioner-login",
      "../../../pages/runMod/company/jobCosting/job-information-page",
      "../../../pages/runMod/company/jobCosting/job-costing-overview-page",
      "../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "myadp-options-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/myadp-options-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the MyADP options from the settings menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the myadp access page from settings menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Allow Access To checkbox in MyADP access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on myadp options button from myadp access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves the changes by clicking on save button in MyADP Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Saves with issues in Employees may not be able to register modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK in Save successful modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Select the options people can update or view heading on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the MyADP registration email is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Direct deposit accounts is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Personal info is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Federal tax withholding info is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the State tax withholding info is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Emergency contact is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Paperless pay statements is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Company directory in MyADP is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the New hire onboarding is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Gender self-identification is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Non-binary or X as a gender is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Pronouns is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the no toggle option button for Federal tax withholding info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks yes on popup in MyADP options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel on New hires wont be able to make changes popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies Federal tax withholding info toggle option will switch from yes to no",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies New hire onboarding toggle option will switch from yes to no",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the New hires wont be able to make changes popup is displayed on MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the myadp options page remains same",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Ok on the save successful popup on the MyADP options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects cancel button on the myadp options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on go back and save button on cancel popup on myadp options page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Leave without saving button on cancel popup on myadp Options Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the settings landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the save was successful popup is displayed on the MyADP options page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "verifies the Do you want to save your changes before you leave on cancel popup",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/company/myAdpOptions/myadp-options-page.js"
    ],
    "pageObjects": []
  },
  {
    "file": "set-my-pin-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/set-my-pin-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on x to close the Set my PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Cancel button on Set my PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on Set my PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on the We saved your PIN modal on Set PIN page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} modal is displayed on the Set PIN page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pin heading {string} will display on Set PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Learn More link on Set PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in create PIN field on Set PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random number in create PIN and retype PIN fields on Set PIN page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in retype PIN field on Set PIN page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/company/setMyPin/set-my-pin-page"
    ],
    "pageObjects": []
  },
  {
    "file": "workers-compensation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/company/workers-compensation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "table is sorted by column {string} in {string} order on the workers compensation overview page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@playwright/test",
      "@cucumber/cucumber",
      "../../../pages/common/practitioner-login",
      "../../../pages/runMod/company/workersCompensation/workers-compensation-overview-page",
      "../../../pages/runMod/company/workersCompensation/workers-compensation-add-class-code-page",
      "../../../pages/runMod/company/workersCompensation/workers-compensation-edit-class-code-page",
      "../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "docvault-folders-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/docvault/docvault-folders-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Doc Vault folder {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create folder button is displayed in Doc Vault folder page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create folder button is not displayed in Doc Vault folder page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Create Folder button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New folder modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Name field is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters folder name {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create folder button on the modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the docvault wholesale child client company",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} folder OR file is visible on page {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete {string} modal is displayed inside the Doc Vault folder page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete button on the delete modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} folder OR file is NOT visible on page {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add File button is displayed in Doc Vault folder page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add File button not is displayed in Doc Vault folder page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add File",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} Folder or File",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Kebab menu for the Folder {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Kebab menu for the File {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "File upload is successful",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Upload error modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Kebab menu option {string} is displayed in the Folder or File {string} kebab menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Kebab menu option {string} is not displayed in the Folder or File kebab menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} in Folder or File {string} kebab menu in Doc Vault",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} bread crumb navigation in Doc Vault",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} modal box is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename file modal box is displayed inside the Doc Vault folder page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename update button is displayed in the modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Rename Update Button in the modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Cancel Rename update button is displayed in the modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Cancel button in the Rename modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename Folder input text field is displayed in modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename File input text field is displayed in modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename Folder Successfull message modal is displayed on Doc Vault page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Rename File Successfull message modal is displayed on Doc Vault page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Filename {string} is displayed in the View Details modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "View Details save button is displayed in the modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save button in the View Details modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "View Details Cancel button is displayed in the modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button in the View Details modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Notes text area is displayed in the View Details modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Close button on the modal box is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Close icon of the error modal box in docvault page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} Folder or File in Move modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Move File Cancel button is displayed in modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in the Move File modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Move File Move Button is displayed in modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Move button in the Move File modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete modal Warning message is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete button is displayed in the Delete modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the delete button in the Delete modal box",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Cancel button is displayed in the Delete modal box",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in the Delete modal box",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/docvault/docvault-folders-page",
      "@cucumber/cucumber",
      "chai",
      "../../../support/helpers",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "docvault-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/docvault/docvault-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Doc Vault on RunMod landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Doc Vault landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Doc Vault page header is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search Doc Vault field is displayed on the Doc Vault landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sort Folder By Name function is displayed on the Doc Vault landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Folder {string} is displayed on the Doc Vault landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Folder {string} is not displayed on the Doc Vault landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex closes the Doc Vault page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "DocVault storage bar is at 100%",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/docvault/docvault-landing-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "job-validate-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ebjm/job-validate-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "iid {string} is selected for this scenario",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "jobs should be completed successfully",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../apis/atp/job-validation-script"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-add-fsm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/addEmployeeContractorFsm/contractor-add-fsm-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Contractor setup page is displayed in FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes add contractor FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back arrow on add contractor FSM",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/addEmployeeContractorFsm/contractor-add-fsm-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-add-fsm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/addEmployeeContractorFsm/employee-add-fsm-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Employee setup page is displayed in FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes add employee FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back arrow on add employee FSM",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/addEmployeeContractorFsm/employee-add-fsm-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-buttons-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/buttons/employee-buttons-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex will see {string} button on EE Management page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not see the {string} button on EE Management page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} button is greyed out until all sections are complete",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on edit dialog button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on save button after edit",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button in Save Successful message in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save Later button in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Cancel button in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Close button in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Rehire button in Employment info Edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks {string} button on Personal info page and is redirected to People landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Review and Complete page and is redirected to People landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can click {string} button on current page and is redirected to People landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can click {string} button on Personal info page and is redirected to People landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks {string} button on page and is redirected to Payroll Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks {string} button on EE invite page and redirected to contractor wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not see the Paperless leaf icon on Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Paperless leaf icon on Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex turns off Paperless Tax Statements",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks {string} button on page and is redirected to Payroll Home Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/buttons/employee-buttons-page",
      "../../../../pages/common/home-page",
      "../../../../pages/common/people-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "changes-not-saved-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/changes-not-saved-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/modal/changes-not-saved-modal",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "common-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/common-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters value {string} into field {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into currency field {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see {string} is the current selection for {string} drop down",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects from {string} dropdown {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select from {string} dropdown {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "link {string} should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Link text {string} should contain path {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should NOT see the {string} field",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} field with the footnote of {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the {string} message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message {string} will be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see message containing text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees validation message {string} on page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees checkbox {string} on page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message on field {string} should contain {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see validation message {string} on page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should contain options:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "search drop down {string} should contain options:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should contain options {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should contain partially matched option {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should be set to {string} option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should be set to partially matched option {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should Not be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} should NOT contain options:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} is displayed for section {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex then selects {string} from {string} dropdown",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is disabled",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is enabled",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is NOT displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should be populated with text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} does not have a selected value",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "currency field {string} should be populated with text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "masked field {string} should be populated with text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field Gender should show error {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should show error {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} should display error {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} field on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from dropdown {string} on slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on finish later button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on cancel button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on next",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects checkbox {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex toggles the checkbox {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clear checkbox {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "checkbox {string} should be checked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "checkbox {string} should be unChecked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "checkbox {string} should be enabled",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "checkbox {string} should be disabled",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects radio button {string} in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "page should display warning message {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on tool tip for field {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "tool tip visible should display message {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text field footnote containing {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text field footnote containing {string} should NOT be displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on go to next arrow",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on go to previous arrow",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on name dropdown arrow",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} with text value {string} should be disabled",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "field {string} with text value {string} should be enabled",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} field is unmasked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} field is masked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex unmaskes {string} field",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "variable {string} is set as {string} and added to the scenario context",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/employeeManagement/common-page",
      "../../../pages/runMod/employeeManagement/edit-common-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "complete-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/complete-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "I have completed all Pages",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Hire date in Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters start date {string} in Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Weekly payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes weekly payroll info page with hourly",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes payroll info page ignore disable pay schedule",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Pay schedule {string} on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Standard hours field on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Hourly rate field on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes payroll info page without pay schedule",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes payroll info page for contractor",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Pay type {string} for contractor on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Pay schedule for contractor on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Hourly pay rate {string} on payroll info page for contractor",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Hourly pay rate {string} on payroll info page for employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Owner Officer in payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can click on next button on Paid Time Off page and continues without PTO if displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex updates Email Address on employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to the PTO Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Employment info page with hire date and state {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters dob {string} in Personal info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears dob field in Personal info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Last name in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters existing SSN in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Gender in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Date of birth in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Home address {string} in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters City {string} in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters State {string} in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip {string} in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets the last name for an employee on Personal Info page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "../../../pages/runMod/employeeManagement/common-page",
      "../../../pages/runMod/employeeManagement/personal-info-page",
      "../../../pages/runMod/employeeManagement/payrollInfo/payroll-info-page",
      "../../../pages/runMod/employeeManagement/buttons/employee-buttons-page",
      "../../../pages/runMod/employeeManagement/directDeposit/direct-deposit-page",
      "../../../pages/runMod/employeeManagement/earningsAndDeductions/earnings-and-deductions-page",
      "../../../pages/runMod/employeeManagement/employmentInfo/employment-info-page",
      "../../../pages/runMod/employeeManagement/reviewAndComplete/review-and-complete-page",
      "../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-edit-summary-page",
      "../../../pages/runMod/employeeManagement/PTO/employee/employee-paid-time-off-page",
      "../../../pages/runMod/employeeManagement/PTO/employee/employee-paid-time-off-page",
      "../../../support/helpers",
      "@cucumber/cucumber",
      "../../../pages/classic/company/earnings-deductions-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/contractor-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters phone number,email and completes contractor info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on save for later on contractor info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex resumes {string} onboarding",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can complete Contractor info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next on Contractor info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see company name on Contractor Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see contractor name on Contractor Info Page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/employeeManagement/personalInfo/contractor-info-page",
      "@cucumber/cucumber",
      "../../../pages/runMod/employeeManagement/personal-info-page",
      "../../../pages/common/people-landing-page",
      "chai",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "direct-deposit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/directDeposit/direct-deposit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex unmasks Account Number for Direct deposit {string} on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Confirm Account Number on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected {string} in Account Type field on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Routing Number field on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Confirm Routing Number field on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Nick Name field Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Routing Number {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex updates Routing Number {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex updates confirms RN  {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "position {float} should have field {string} populated with text {string} on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can see position {float} will have field {string} populated with text {string} on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Account Number {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex confirms AN {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks nextbutton on Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies for account {string} with {string} error message {string} appears on Direct Deposit Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies  error message appears on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Routing Number error message on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies BankName field is polpulated with BankName {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies BankName field error message on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see amount error message {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Percentage amount error {string} will be displayed for account {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select {string} as account type at position {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds another account on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies  error message {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Giact copy is displayed on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Review the GIACT privacy policy link on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK on pop-up on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "GIACT {string} url is displayed in a new browser tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "amount field should be disabled for distribution position {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see full net deposit distribution error message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes a Direct Deposit account for account {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Direct deposit count {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks nextButton and confirms Giact unavailable on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue on the Giact unavailable message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue on the Giact unavailable message if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send To Employee link on Direct Deosit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Remind Me Later link on Direct Deosit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send To Employee link and verifies Email Reminder message contains First Name on Direct Deposit page if displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Remind Me Later link and verifies Remind Me Later message contains First Name on Direct Deposit page if displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Email Reminder message contains First Name on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Remind Me Later message contains First Name on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Email Reminder message contains Company Name on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex deletes Direct Deposit Account",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes Direct Deposit Account on edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Account Number {string} on Direct deposit page for account {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Confirm account Number {string} on Direct deposit page for account {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Confirm Account Number {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits Account Nickname on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful message on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits Bank name in position {string} to {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok on pop-up on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies disabled save button on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves and cancels step-up on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Bank name at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Routing number at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Masked Account number at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Unmasked Account number at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account Nick Name at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Distribution amount at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Distribution type at position {string} should be {string} on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account Nick Name at position {string} should be the current nickname on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Distribution amount at position {string} should be the current amount on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Distribution type at position {string} should be the current type on direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button and and cancels step-up on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button and closes step-up on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves successfully on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on scam check box on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits Deposit Distribution on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects add account button in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random nick name in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters nick name as {string} for account {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects account type as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters routing number as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters routing number confirmation as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters account number as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters account number as {string} for Direct deposit {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters account number confirmation as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters account number as {string} for Direct deposit {string} in onboarding on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters account number confirmation as {string} for Direct deposit {string} in onboarding on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects distribution as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters distribution amount as {string} in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks scam checkbox in edit mode on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Account type {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Routing number {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Account number {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Distribution {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Distribution amount {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds Account nickname for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Account type for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters and confirms Routing Number {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Distribution {string} and Amount {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Distribution as Full Net for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Nickname for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Distribution as FullNet on direct deposit account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Distribution as FullNet or Partial or Remainder for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Distribution as {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as the Deposit Distribution Amount for account {string} on the Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Nickname {string} for account {string} on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on What Is The Risk link on Direct Deposit Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes pop up by clicking on Got It on Direct Deposit Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Early Wage Access message on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Routing Number field is disabled on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "no accounts should be displayed on direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Deposit distribution has the value {string} for account {string} on the Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validation message {string} is displayed in Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Account Number field is masked on the Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Account Number field is unmasked on the Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Confirm Account Number field is masked on the Direct Deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Confirm Account Number field is unmasked on the Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Nickname with {string} in Old direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save in Old direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save successful message displayed in Old direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Account number field for Direct deposit {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Confirms account number field for Direct deposit {string} on Direct deposit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message {string} is displayed on Direct Deposit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters distribution amount as {string} for Direct deposit {string}",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/directDeposit/direct-deposit-page",
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "deductions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/earningsAndDeductions/deductions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex completes Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next on Deductions Page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/earningsAndDeductions/deductions-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "earnings-deductions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/earningsAndDeductions/earnings-deductions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to Earnings & Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in earnings Amount field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has clicked Add Deductions on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has clicked Add Retirement Deductions on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has clicked Add other deduction on Earnings Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in deductions Amount field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected deduction one as {string} on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected the deduction payment method as {string} on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can override field with {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} on the employee wizard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected the Use default amount as {string} on Earnings and deduction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for {string} from Deduction {string} on Earnings and deduction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "deduction drop down {string} should be set to {string} option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Deduction {float} Does this deduction have a goal amount field should be set to {string} in Earnings and Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see company match field displayed in deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see company match field displayed in deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} message in Earnings Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see {string} message in Earnings Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter dollar {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter percentage {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can enter rate {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see dollar is set to company default {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see percentage is set to company default {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see rate is set to company default {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex has selected {string} from {string} from Deduction {string} on Earnings and deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} from Deduction {string} on Earnings and deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down {string} from {string} in Deduction {string} on Earnings and deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicked Add Deductions on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} displayed in Amount field",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can override field with {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see \"6\" percent displayed in Percentage field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits earnings hours",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies deduction count {string} on deduction dropdown on the Earnings & Deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see the Garnishment deduction {string} in the deduction dropdown on the Earnings & Deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "earnings {float} should have field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "earnings {float} should have field {string} populated with prefix {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Account number on Deduction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Payees name field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Bank name field on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as Account type on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Routing number field on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Account number field on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the unmasked Account number field on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the unmasked Account number field on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "deduction {float} should have field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "pay method deduction {float} should have field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "deduction should have dropdown field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "deduction {float} should have field {string} populated with prefix {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement deduction {float} should have field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Other deduction {float} should have field {string} populated with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "deduction {float} should not be seen on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex populates earnings {float} field {string} with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects from {string} dropdown {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex populates deduction {float} field {string} with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks checkbox for Exclude this employee from company match on Earnings Deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex updates deduction {float} field {string} with text {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex populates earnings amount with {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex populates earnings hours with {string} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete on earning {float} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete on deduction {float} on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Edit Account Number icon on earnings and deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on edit earning Account Number icon on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Plan number field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Loan number field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Plan number field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Loan number field on Earnings & Deductions Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the masked Account number in deduction postion {float} displays as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the unmasked Account number in deduction postion {float} displays as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the masked Account number in earning postion {float} displays as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the unmasked Account number in earning postion {float} displays as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the checkbox for {string} will be checked on Earning Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the checkbox for {string} will be unchecked on Earning Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Your retirement plan has a company match message is not displayed on Earning Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Deductions is displayed on Earning Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Retirement deductions is not displayed on Earning Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Your retirement plan has a company match message will be displayed on Earnings Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Your retirement plan has a company match message will not be displayed on Earnings Deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Retirement deductions header will be displayed on earnings and deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning postion {float} is not displayed in Earnings and deduction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message {string} is displayed on Earnings and Deductions page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/earningsAndDeductions/earnings-and-deductions-page",
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "garnishment-edit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/earningsAndDeductions/garnishment-edit-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "garnishments page is displayed in edit mode",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/earningsAndDeductions/garnishments-edit-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-edit-fsm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/editFsm/contractor-edit-fsm-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Contractor edit page is displayed in FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes edit contractor FSM",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/editFsm/contractor-edit-fsm-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "edit-fsm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/editFsm/edit-fsm-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Switch people will be displayed in Employee edit FSM",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search person modal will be displayed in Employee edit FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Switch people link in Employee edit FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for created employee by last name in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} employee by last name in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects created employee in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} {string} employee in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for created contractor by last name in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} contractor by last name in Search a person modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects created contractor in Search a person modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee name will be displayed in edit FSM header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee type {string} will be displayed in edit FSM header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment type {string} will be displayed in edit FSM header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee pay type {string} will be displayed in edit FSM header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment status {string} will be displayed in edit FSM header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment status {string} will be displayed in Employeee change status page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment status {string} will be displayed in Contractor change status page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes edit employee FSM",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/editFsm/employee-edit-fsm-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "ei9-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/ei9/ei9-login-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Associate user searches for RunMod EI9 IID",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate user searches for RunMod EI9 Section 2 IID",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager",
      "@cucumber/cucumber",
      "../../../../pages/common/installation-selector-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employment-eligibility-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/ei9/employment-eligibility-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "I9 complete paper form checkbox is not displayed on the Employment Eligibility page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I9 Section 2 heading is displayed on the Employment Eligibility page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clicking on the View EI9 Section 1 Form link opens it in a new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Clicking on the View EI9 Section 2 Form link opens it in a new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I9 Completed Section 1 Form link is displayed on the Employment Eligibility page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I9 Section 2 iframe is displayed on the Employment Eligibility page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment eligibility header is displayed on the Employment Eligibility page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/ei9/employement-eligibility-page"
    ],
    "pageObjects": []
  },
  {
    "file": "people-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/ei9/people-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "SSO Product Link Tasks tile contains {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SSO Product Link Tasks sub text contains {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SSO Product Link Task is not displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the SSO Product link button on the People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "EI9 not included in the invite message is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "EI9 not included in the invite message is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Forms I9 audit report link is displayed on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Forms I9 audit report link is not displayed on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Forms I9 audit report link on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Form I-9 audit report screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Go to the I-9 website link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Forms I9 confidentiality acknowledgement message is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks to agree to the Forms I9 confidentiality acknowledgement",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks continue on the Forms I9 confidentiality acknowledgement",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message for Forms I9 confidentiality acknowledgement is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/ei9/people-landing-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-emergency-contact-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/emergencyContacts/employee-emergency-contact-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "primary emergency contact info {string} should be displayed correctly on emergency contact page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/emergencyContact/employee-emergency-contacts-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-edit-sidenav-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employee-sidenav/employee-edit-sidenav-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to the employee info page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the 1099 info page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the employment Info page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the 1099 employment Info page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the terminate employee page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the earning and deduction page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to 1099 Deduction page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the direct deposit page for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Earnings Deductions in employee edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to 1099 Deductions in employee edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to 1099 Info in employee edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Terminate Contractor in employee edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to employee info page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} menu is displayed in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} menu is not displayed in edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to {string} classic page in edit FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to {string} runmod page in edit FSM",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PTO {string} header will be displayed in employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close on Pendo guide if displayed in employee edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Employee profile screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close button in edit FSM",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-edit-sidenav-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-wizard-sidenav-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to Personal Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the navigation wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Navigation Wizard will not be displayed on the side nav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex lands on {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects Contractor info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex resumes {string} employee onboarding and jumps to Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex resumes employee onboarding and jumps to Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Review And Complete on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Direct Deposit on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Direct Deposit step is {string} on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info step is {string} on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Employment Info on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Earnings and deductions on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects I9 Employment Eligibility on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Earnings and deductions on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Deductions on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deductions on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Payroll Info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Closes the employee wizard and is redirected back to the People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Personal info and Employment info steps in incompleted status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Personal info and Employment info steps in completed status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Personal Info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Contractor Info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Payroll Info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Employment Info on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can select Form I-9 on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "all pages in the left hand navigation have been successfully completed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Tasks on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Tasks menu is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Tasks menu is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll info page does not show as completed on the left hand navigation in onboarding wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigation menu {string} is displayed in onboarding wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "navigation menu {string} is not displayed in onboarding wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select Tax Info on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Paid Time Off on employee wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Tasks on employee wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employment Info page will be displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "../../../../pages/runMod/employeeManagement/employmentInfo/employment-info-page",
      "../../../../pages/runMod/employeeManagement/personalInfo/employee-info-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-eligibiliy-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employeeEligibilityOvertime/employee-eligibiliy-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Employee eligibility for overtime page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} header is displayed on the employee eligibility for overtime page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} message is displayed on the employee eligibility for overtime page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is displayed on the employee eligibility for overtime page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} link on the employee eligibility for overtime page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "WHD Fact Sheet page with title {string} is opened in a new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "salaried employees section contains the following columns on the employee eligibility for overtime page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "hourly employees section contains the following columns on the employee eligibility for overtime page:",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} in the salaried employees section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} in the hourly employees section",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is not displayed on the employee eligibility for overtime page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} on the first employee elibible for overtime option in the hourly employees section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks submit button on the employee eligibility for overtime Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on you updated employee overtime elibigibility page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close button in edit FSM and is redicted to eligibility for overtime page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employee-eligibility-overtime/employee-eligibility-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employees-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employees-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Edit for employee {string} on runmod employee dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit for employee {string} on employee dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add an employee on the employee dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on add contractor on employee dashboard page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/employeeManagement/setUpNewEmployee/employees-dashboard-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-loa-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employeeStatus/employee-loa-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Leave Of Absence Calender End Date on change status Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Leave Of Absence Calender Start Date on change status Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Confirm absence on change status page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Confirm return on change status page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets Hire date on Change Status page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies LOA message is displayed on change status page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see the copy {string} in the LOA confirmation dialog for a {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the the copy {string} in the LOA confirmation dialog for an {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the text {string} in the Help and support message box on change status page for {string}",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employeeStatus/employee-loa-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-rehire-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employeeStatus/employee-rehire-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex will see Hire date is mandatory in Employee change status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Length of service is read only in Employee change status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Length of service is read only in 1099 change status page in edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a future start date in Rehire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Rehire button on Rehire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on Rehire message page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Hire Date on change status page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employeeStatus/employee-rehire-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-status-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employeeStatus/employee-status-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex updates Hire date in Employee status page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets Hire date on Employee status page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Status pill in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Termination tile in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Leave of absence tile in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Rehire tile in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Hire date is mandatory in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Length of service is read only in Employee status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Termination tile in 1099 status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Leave of absence tile in 1099 status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Hire date is mandatory in 1099 status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Length of service is read only in 1099 status page in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Status pill in 1099 status page in edit mode",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employeeStatus/employee-status-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-termination-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employeeStatus/employee-termination-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Terminate button on Terminate dialog message on edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks successful Terminate button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Terminate button on Terminate challenge dialog",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close button in Terminate Employee modal on Employee Change page with no wait",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date on employee change Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date input on employee change Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Last Day Worked on employee change Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Type on employee change Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Description on employee change Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Terminate button on employee change page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Cancel Terminate button on employee change page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Terminate button on terminate employee change status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies terminate message is displayed on employee change page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on terminate employee modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see success message on the Terminate page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on Do you also want to delete employees access to Run Yes field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on Do you also want to delete employees access to Run No field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, terminate button on Employee change page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employeeStatus/employee-termination-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employment-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/employmentInfo/employment-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Leave Of Absence Calender End Date on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Leave Of Absence Calender Start Date on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Last Day Worked on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Type {string} on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Employment Status on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for Employment Status field on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Description {string} on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Phone Number on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email Address {string} on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Work Email Address on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Work Email Address on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the updated Work email address displayed on employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work email address displayed does not match Practitioner email address on employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "statutory employee tooltip should display {string} on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "statutory employee tooltip should display link button {string} on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company paid pension tooltip should display message {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over Company Paid Pension tooltip on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Statutory Employee ToolTip on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Statutory employee learn more link on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to Employment Info page in Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to Employee info page in Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on OK button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Work phone number in Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Hire date in Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes hire date and phone on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes hire date on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects from {string} dropdown on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects from {string} dropdown and selects {string} on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for Company paid pension field on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for Statutory employee field on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects from Statutory employee dropdown on EmploymentInfo Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see First Name on Payroll Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see First Name on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see company name on Payroll Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see company name on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see contractor name on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see employee name on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info fields are populated after resuming contractor",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info fields are populated after resuming employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Leave of Absence date on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Termination type field on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Termination description field on Employment info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects contractor Termination date",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on rehire button on employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies rehire pop-up message on employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button on employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful and clicks on OK on employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful message on employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button on rehire pop-up on employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on terminate button on employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies terminate message is displayed on employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on cancel button on employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Retirement Services Compliance on employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters work address {string} on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters city {string} on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip Code {string} on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Work Location State {string} on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects State {string} on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets Hire date on Employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see EE01 Job Category heading on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see EE01 Job Category heading on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} in {string} on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} in Job Category {string} on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Hire date field is populated on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects Job category option \"Administrative Support Workers\" on Employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job category start date defaults to Employee Hire Date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job category start date should be empty",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex removes job category",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job category delete icon when hovered has a uniform background",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Job category end date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Job category end date defaults to Employee Termination Date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Job category end date is still populated on Employment Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates the Employee Termination Date",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets Work Email Address on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The SUI NA state {string} is not displayed in the State drop down on the Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a future hire date in employment info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Statutory employee is set to {string} on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company paid pension is set to {string} on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee status is set on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee termination type is displayed on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee termination description is displayed on Employment Info Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Field {string} should show error {string} on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No for Workers comp info on Employment Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes for Workers comp info on Employment Info Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/employmentInfo/employment-info-page",
      "../../../../support/helpers",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "add-new-contractor-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/add-new-contractor-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/people-landing-page"
    ],
    "pageObjects": []
  },
  {
    "file": "add-new-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/add-new-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on add new employee tile on People Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Invite button on the Enhanced Onboarding Invite Intro Screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click the back button on enhanced onboarding basic info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random TIN number in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Confirm TIN in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Confirm TIN in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip {string} in Zip code field in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random Last name in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a Hire date in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a future Hire date in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a past Hire date in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random Email in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters already used email address in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} Email in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters TIN {string} in Tax Identification number field in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters TIN {string} in Confirm Tax Identification number field in Invite your new hire page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last name {string} in basic info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Hire date {string} in basic info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email {string} in basic info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the Add New Employee modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First name should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Last name should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hire date should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company name should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "TIN should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "TIN should be masked and display {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm TIN should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm TIN should be masked and display {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Zip code should be {string} on Enhanced Onboarding Basic Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Basic Invite your new hire page will be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite new hire Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I9 warning banner is not displayed on Basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "I9 warning banner is displayed on Basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hire date field with the footnote of {string} should be displayed in Basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Company Name field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Tax Identification Number field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Confirm Tax Identification Number field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Hire date field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Zip code field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Email field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for First name field on invite basic info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite inline validation message {string} is displayed for Last name field on invite basic info page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../support/helpers",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-prefill-page",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/people-landing-page",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/employee-add-fsm-page"
    ],
    "pageObjects": []
  },
  {
    "file": "add-new-task-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/add-new-task-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Enhanced Onboarding Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Enhanced Onboarding Edit Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task Type field {string} on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects task type {string} on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task Type on Add Tasks Modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Task Type should not be selected on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task title field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters title {string} on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates task with random title on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random title on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random task description on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates title with a new random title on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task title on Add Tasks Modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task name will be displayed in Add a new task Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task title on Add Tasks Modal should be empty",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task description on Add Tasks Modal should be empty",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task description field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds a file {string} on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click removes existing file on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tidy up and remove all company template tasks for the client via database",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes an existing file on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "File upload field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Link URL field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters link {string} on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Due date field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits due date on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Helper text {string} for {string} is displayed on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Due date on Add Tasks Modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Acknowledgement switch field on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks acknowledgment of completion switch on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Acknowledgement switch on Add Tasks Modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save Task button on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save Task on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save Task with Link on Add Tasks Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save Task to show errors on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error {string} will be displayed in the Enhanced Onboarding Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error {string} will not be displayed in the Enhanced Onboarding Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Cancel button on Add Tasks Modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on cancel button in the modal task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Acknowledgement switch should be enabled on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Acknowledgement switch should be disabled on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "We were not able to save you data message will be displayed in Task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Upload file error message {string} will be displayed in Task modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on the file name on Add Tasks Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The file should download in a new tab",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../support/helpers",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/add-new-task-page"
    ],
    "pageObjects": []
  },
  {
    "file": "add-onboarding-tasks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/add-onboarding-tasks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Standard Tasks tile will be displayed on add more onboarding tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on expand standard tasks button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Standard Tasks tile contains {string} task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Standard Tasks tile contains {string} task is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} description is displayed for {string} standard task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add new Task on add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click edit on the task with title {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click edit on the newly added task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task saved toast alert is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Added Task toast alert is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task {string} with due date {string} is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New add task with title {string} is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task {string} with acknowledgment of {string} is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task with acknowledgment of {string} is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task {string} with acknowledgment of {string} is NOT displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the delete task in Edit task modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on checkbox {string} on the Enhanced Onboarding add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on checkbox of added task on the Enhanced Onboarding add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the Enhanced Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Selected checkbox {string} is checked on the Enhanced Onboarding add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Selected task checkbox is checked on the Enhanced Onboarding add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send Invite button on the Enhanced Onboarding add Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Task Presets {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company Task Presets {string} is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "You can also add your own tasks text is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FSM Modal title {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite Header is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company task {string} with acknowledgment of {string} is NOT displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} handbook message is displayed on invite new hire page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} handbook link is displayed on invite new hire page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task {string} with due date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task with updated title with due date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task with due date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New task with due date is NOT displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Added task with due date of todays date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Added task with due date of hire date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Added task with no due date is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task showing updated task title is displayed in Edit task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Added task showing task title is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} is displayed on Onboarding Tasks Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Standard Tasks tile will not contain {string} task",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/add-onboarding-tasks-page",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/add-new-task-page"
    ],
    "pageObjects": []
  },
  {
    "file": "eob-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/eob-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "invite-confirmation-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/invite-confirmation-step.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Go to Employment info button is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Finish later button is displayed on Enhanced Onboarding Invite Confirmation Screen",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/invite-confirmation-page"
    ],
    "pageObjects": []
  },
  {
    "file": "invite-modal-close-warn.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/invite-modal-close-warn.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "modal dialogue Want to cancel is displayed on enhanced onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal dialogue Want to cancel is NOT displayed on enhanced onboarding add onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Yes, cancel button is displayed on Want to cancel modal task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No, go back button is displayed on Want to cancel modal task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No, go back button on Want to cancel modal task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, cancel button on Want to cancel modal task",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/invite-modal-close-warn-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "task-modal-change-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/task-modal-change-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "modal dialogue Leave without saving is displayed on enhanced onboarding add onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal dialogue Leave without saving is NOT displayed on enhanced onboarding add onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Yes, leave button is displayed on Leave without saving modal task",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No, go back button is displayed on Leave without saving modal task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No, go back button on Leave without saving modal task",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, leave button on Leave without saving modal task",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/task-modal-change-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "task-modal-delete-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/task-modal-delete-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "modal dialog Delete task is displayed on enhanced onboarding edit onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal dialog Delete task is not displayed on enhanced onboarding edit onboarding tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "delete file description is displayed on Delete task modal dialog",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Yes, delete button is displayed on Delete task modal dialog",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No, cancel button is displayed on Delete task modal dialog",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No, cancel button on Delete task modal dialog",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, delete button on Delete task modal dialog",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/task-modal-delete-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tasks-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/enhancedOnboarding/tasks-step.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Task with title {string} is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New company task will be displayed in Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New company task will display task description on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} with description {string} is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} with status {string} is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company task with status {string} is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} with due date {string} is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} with today's due date is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company task with due date set to today is displayed on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task {string} displays the hire date as its due date on Tasks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on task with title {string} on Tasks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on task with company task on Tasks page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task title on task modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task title will display company task name on Task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task description will display company task description on Task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task description on task modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task status on task modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task due date on task modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task due date on task modal should be today's date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task acknowledgment on task modal should be {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task media box on task modal should have title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Task media box on task modal should have url {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on media box on task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal disclaimer with title {string} is displayed on task modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal disclaimer should have text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The link should open in a new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The file should open in a new tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} assigned Tasks will be displayed on Tasks page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../../pages/runMod/employeeManagement/enhancedOnboarding/tasks-page"
    ],
    "pageObjects": []
  },
  {
    "file": "post-a-job-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/jobPosting/post-a-job-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies the Post a Job page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Go to ZipRecruiter button",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/jobPosting/post-a-job-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "modal-pop-up-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/modal-pop-up-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on pop up modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on edit dialog pop up modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button OK on Something you should be aware of modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button OK on Something you should be aware of modal if displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "pop up modal with title {string} should show message {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal pop up that contains {string} in the title should show message {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal pop up that contains {string} in the title should show message header {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} message on dialog and clicks on {string} on pop-up",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks Ok button and verifies {string} on modal dialog",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button OK on save Successful modal popup in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal header {string} is displayed on modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Changes saved modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal header {string} is displayed on {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal with header {string} is displayed on {string} page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Something aware of modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button on Something aware of alert modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on Just letting you know modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on Save not successful modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on Tax amendment modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on Save successful modal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/modal/system-message-modal",
      "../../../pages/runMod/modal/something-aware-modal",
      "../../../pages/runMod/modal/just-letting-you-know",
      "../../../pages/runMod/modal/edit-mode-generic-modal",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "navigate-to-any-employee-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/navigate-to-any-employee-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigated to {string} page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects {string} page in Add Employee Wizard",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/payrollInfo/payroll-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Pay Type field on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Salary Rate field Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected {string} on the Pay schedule dropdown field in Payroll Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Weekly salary field in Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has entered {string} in Hourly Rate field Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next on Payroll info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits hourly rate one on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters hourly rate one on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates hourly rate as {string} on payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the updated hourly rate one on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters hourly rate as {string} on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters standard hours per pay period as {string} on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects annual salary pay rate on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters annual salary as {string} on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves successfully on payroll Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "And Alex clicks edit dialog button on Payroll Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Searches occupation description {string} on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks checkbox to Add a message on employees pay stub on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Check stub message input on payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Check stub message place holder text should contain {string} on payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "run and done warning message {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Home page from payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SalaryBenchmarks banner is visible on payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks salarybenchmarks link on payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks Save button on payroll Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save wasnt successful on payroll Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Eligible for overtime label will be displayed in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA classification option Non-exempt should have label {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA classification option Exempt should have label {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes for Eligible for overtime on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No for Eligible for overtime on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Eligible for overtime Yes option is selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Eligible for overtime No option is selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Eligible for overtime Yes option is NOT selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Eligible for overtime No option is NOT selected on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Exempt for How is this employee classified under FLSA on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Non-exempt for How is this employee classified under FLSA on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA Exempt field is selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA Non-exempt field is selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FLSA Exempt field is NOT selected on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see reclassified as {string} message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see Department field in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will not see Percent field in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Department field in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Department field is displayed on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Percent field in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects dropdown option {string} from Department {string} in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the Department dropdown in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in % {string} field in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects dropdown option {string} from Department in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} validation message in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "drop down Department {string} should be set to {string} option in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should be selected in Department field in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} % field should be set to {string} in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Corporate Officer EE Relationship set to {string} option in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects dropdown option {string} from Allow timesheet imports field in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters value {string} into {string} field on Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in Basis of pay field on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in Seasonal employee field on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in cash indicator field on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in owner officer indicator field on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Searches worked in county {string} on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex should not be able to change page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters job title {string} on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Searches class code {string} on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button on payroll info page save successful message popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Basis of pay tooltip",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "basis of pay tooltip should contain text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "basis of pay tooltip should display link button {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over Standard Hours per pay period tooltip",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "standard hours tooltip should display message {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add Pay Rate button on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Standard hours per pay period field should display the value {string} on Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects Eligible for overtime as Yes option in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects Eligible for overtime as No option in Payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Searches geographic description {string} on Payroll Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters unit number {string} on Payroll Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from the {string} dropdown in Payroll info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll drop down field {string} should Not be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alert message {string} displayed on payroll Info page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/payrollInfo/payroll-info-page",
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "../../../../apis/atp/ATP-runner",
      "../../../../pages/runMod/employeeManagement/common-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/payrollInfo/payroll-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "people-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/peopelLandingPage/people-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Onboarding grid will display Resend invite link under MyADP column for invited new hire in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Onboarding grid will display Send invite link under MyADP column for manual new hire in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Onboarding grid will display Resend invite link under MyADP column for manual new hire in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Onboarding grid will display Not registered under MyADP column for invited new hire in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Onboarding grid will display Not registered under MyADP column for manual new hire in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Resend invitation modal will be displayed in People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email address will be the same email address entered when inviting the new hire",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Send button in Resend invitation modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in Resend invitation modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close icon in Resend invitation modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Resend invite link for invited new hire on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Invite sent to success modal is displayed on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Original invite email will be displayed in Invite sent header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on Invite sent modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Email to {string} in Resend invitation modal on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Updated email {string} will be displayed in Invite sent header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email validation message {string} will be displayed in Invite sent header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Email using an existing email address in Resend invitation modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Email in Resend invitation modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Email field with onboarded employee email address in Resend invitation modal on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Updated email will be displayed in Invite sent header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Send invite link for invited new hire on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters existing email address in the Send Invite Modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters new email address in the Send Invite Modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters hire date in the Send Invite Modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Send button in Send Invite Modal on People Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex views the error message {string} in the Send Invite Modal on People Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button on MyADP invite modal in People Landing Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/common/people-landing-page",
      "../../../../support/helpers",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "plp-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/peopelLandingPage/plp-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "personal-info-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/personalInfo/personal-info-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "personal-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/personalInfo/personal-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex entered {string} in {string} field on Personal Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email Address is empty on Personal Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected {string} from Contractor type field on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex entered {string} in {string} field on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex entered {string} from {string} field on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters first name as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters phone number as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Apt Suite or floor as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Searches Address {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters last name as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Social Security Number on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Gender as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Date Of Birth on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Date Of Birth that is greater than 1979 on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Date Of Birth field on Employee Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters City as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip Code {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Zip as {string} on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex was redirected to {string} page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to {string} page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to Personal info page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Personal info page is displayed in edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex will be redirected to Personal info page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to Contractor info page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex will be redirected to Contractor info page in Add Employee Wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First Name will have {string} displayed on employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Last Name will have {string} displayed on employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company name will have {string} displayed on employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters SSN as 000-00-0000 in Personal info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex re-enters SSN as {string} in Personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see SSN required field validation error on Personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see SSN Validation error on Personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see SSN validation error on Personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see TIN Validation error on Personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the updated Email Address displayed on employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the updated Social Security Number {string} displayed on Personal info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see the updated Tax identification number {string} displayed on Contractor info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Social security number field is not read only",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Tax identification number field is not read only",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Employee name on Personal Info Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits Social security number on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Tax identification number on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks Social security number on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates the Social security number with all zeros on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits email address on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits address line one with {string} on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits address line one on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits first name on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits last name on employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the redirect to tax page message {string} on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edits email address on contractor info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Social security number with {string} on employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Tax identification number with {string} on employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes for Is Employee Hispanic or Latino on Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful and clicks on OK on personal info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "date of birth field converted from iso to runmod format should show {string} on employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "date of birth field should show {string} on employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Gender field should show {string} on employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Address fields should show {string} on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Social security number to a random number on employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates Tax identification number to a random number on 1099 info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit on SSN field in Employee info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit on TIN field in Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Updated Email is displayed on Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Home address field will be set to {string} in Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "City field will be set to {string} in Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "State field will be set to {string} in Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Zip Code field will be set to {string} in Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message {string} is displayed on Employee Info page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/personalInfo/employee-info-page",
      "../../../../pages/runMod/employeeManagement/personal-info-page",
      "../../../../pages/runMod/employeeManagement/personalInfo/contractor-info-page",
      "../../../../pages/runMod/employeeManagement/employmentInfo/employment-info-page",
      "../../../../pages/runMod/employeeManagement/personalInfo/employee-info-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "paid-time-off-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/PTO/company/paid-time-off-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../../../pages/runMod/employeeManagement/PTO/company/paid-time-off-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-paid-time-off-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/PTO/employee/employee-paid-time-off-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to Paid Time Off page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee paid time off page is displayed for edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Assign plan button on employee PTO home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects plan {string} and click Next button on employee PTO plans page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects plan {string} on employee PTO plans page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on employee PTO plans page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on Paid Time Off screen in Employee Wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save for Later button on Paid Time Off screen in Employee Wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Confirm and add button on employee Paid Time Off page in Employee Wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel on employee Paid Time Off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the checkbox on the Continue without a PTO plan message on the employee PTO plans page OneUX",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue without a PTO Plan on the employee PTO plans page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} plan edit summary page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "company default vacation hours {string} and balance as {string} shown in paid time off tracking section",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Accrual type shown as {string} in How your employee earns PTO hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Maximum PTO balance {string} shown in How your employee earns PTO hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Maximum PTO balance shown as Unlimited in How your employee earns PTO hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PTO rate {string} and Maximum PTO {string} shown in How your employee earns PTO hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PTO rate {string} shown in How your employee earns PTO hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "inline message should show {string} on employee plan edit summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plan name {string} should show Method as {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plan name {string} should show PTO rate as {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plan name {string} should show Balance as {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plan name {string} should show days Balance as {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Plan name {string} should show hours only balance as {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Unlimited sick plan is added with plan name {string} on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Unlimited sick plan with plan name {string} should not be displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "for Unlimited sick plan name {string} the Method column should display value {string} on employee PTO Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on PTO dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} message popUp is displayed on PTO dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "message popup header {string} is displayed on PTO dashboard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to Save the pto plan added on PTO dashboard page with {string} message popUp shown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete button against the pto plan on employee PTO home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, end this plan button on delete popUp on employee PTO home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete button against pto plan and click No, keep this plan button on delete popUp on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} plan should not be displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} plan should be displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on edit link in section with label {string} on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay frequency dropdown should display {string} on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} pay frequency from dropdown on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Average hours worked per week input field on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Paid time off hours per year input field on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amount of PTO earned per hour worked calculated as {string} on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amount of PTO earned per pay period worked calculated as {string} on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to maximum number of unused hours balance cap input field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears value in maximum number of unused hours balance cap input field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to maximum number of hours input field and click Done button on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Done button on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Revert to default hyper link against PTO rate on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Revert to default hyper link against Maximum PTO balance on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Revert to default hyper link against Maximum PTO on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Revert to default hyper link against Date type on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Revert to default hyper link is displayed against Date type on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Revert to default hyper link against Unused hours on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Revert to default hyper link is displayed against Unused hours on employee plan edit summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects enter rate manually radio button on edit employee earns PTO page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects use calculator radio button on edit employee earns PTO page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see enter rate manually radio button is selected on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see use calculator button is selected on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amount of PTO earned per hour worked displays as {string} on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Amount of PTO earned per hour worked input field on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Amount of PTO earned per pay period worked input field on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amount of Paid time off hours per year calculated as {string} on pto rate edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} tile on employee pto plan reset page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from {string} date {string} from {string} employee pto plan reset page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Done button employee pto plan reset page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Done button while editing employee pto plan",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} for {string} in When the PTO plan resets each year section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} is updated as {string} in When the PTO plan resets each year section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} for {string} with in When the PTO plan resets each year section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see employee hire date for {string} with in When the PTO plan resets each year section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see {string} for {string} in How the plan handles unused hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Carry over a maximum of {string} hours for {string} in How the plan handles unused hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Carry over a maximum of {string} for {string} in How the plan handles unused hours section on employee plan edit summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects unlimited hours check box on employee pto unused hours reset page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects unlimited hours check box on employee pto unused hours reset page OneUX",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in to Maximum number of hours to carry over input field on employee pto unused hours reset page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears {string} in Maximum number of hours to carry over input field on employee pto unused hours reset page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see unlimited hours check box is not selected on employee pto unused hours reset page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Done button disabled on employee pto unused hours reset page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should show {string} on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should show in days is {string} on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should show in hours is {string} on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should show {string} only if it is less than eight hours on employee plan edit summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} calculated in days is {string} on employee time tracking hours edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} calculated in hours is {string} on employee time tracking hours edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} hours calculated when less than eight hours is {string} on employee time tracking hours edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on left arrow on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see message {string} contained in the inline message on pto rate edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "delete message popup header {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "opt out delete message popup header {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Unlimited sick plan delete message popup header {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "opt out Unlimited sick plan delete message popup header {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "delete message popup text {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "opt out delete message popup text {string} is displayed on employee PTO home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The opt out checkbox message text {string} is displayed on employee PTO home page OneUX",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Review state rules link in the delete message on employee PTO Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Amount of PTO earned field is read only",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The employee PTO {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The employee PTO {string} field retrieved from the table should have null value",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on employee PTO plans FSM",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Paid time off page is displayed in Onboarding wizard",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../../apis/atp/ATP-runner",
      "../../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-paid-time-off-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-edit-summary-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-plan-rate-edit-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-plan-reset-edit-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-plan-unused-hours-edit-page",
      "../../../../../pages/runMod/employeeManagement/PTO/employee/employee-pto-plan-time-tracking-edit-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-data-in-review-and-complete-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/reviewAndComplete/employee-data-in-review-and-complete-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex unmasks Social security number on review and complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should have field {string} showing {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee name on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee birth date on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee ssn on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee ssn showing {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee pay type {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee pay rate {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee earnings {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see employee deductions {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Pay Type",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Hourly pay rate",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Basis of pay",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Pay schedule",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Employment type",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Paid in cash",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Seasonal employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Check stub message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for field Owner officer",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Complete page should show value {string} for Check stub message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Direct Deposit field values on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employee Employment Info field values on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info Hire date field value on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info Employment Status field value is set to {string} on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info Company paid pension field value is set to {string} on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Employment Info Statutory employee field value is set to {string} on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Contractor Employment Info field values on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies date of birth greater than hire date on Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see FLSA Classification {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Overtime eligibility should be {string} on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee pay type {string} will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee pay rate {string} will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee name will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee birth date will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee ssn will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee earnings {string} will be set on the Review and Complete page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee deductions {string} will be set on the Review and Complete page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/reviewAndComplete/review-and-complete-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "navigate-to-review-and_complete-from-any-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/reviewAndComplete/navigate-to-review-and_complete-from-any-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex can navigate to review and complete page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to review and complete page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "review-and-complete-earnings-deductions-section-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/reviewAndComplete/review-and-complete-earnings-deductions-section-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex will see fields for Earnings and Deductions in Review and Complete page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks done on Review and Complete Page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/reviewAndComplete/review-and-complete-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "review-complete-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/reviewAndComplete/review-complete-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "security-verification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/security-verification-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex cancels security verification",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies error message on dialog and clicks on Ok on pop-up",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is presented step up security verification popup and clicks cancel button on it",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel on Verification modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is presented step up V2 security verification popup and clicks close button on it",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the OTP field in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the previous OTP into the OTP field in StepUp version 1",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex takes note of the current OTP in the OTP field in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Choose Another Option in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send Me A Text in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Get New Code button in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Confirm button in StepUp V1 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for StepUp version 1 modal to be displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes through the texting channel and completes StepUp",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes through the email channel and completes StepUp",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "StepUp modal is no longer visible",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "StepUp modal is visible",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/modal/security-verification-modal",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "add-contractor-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/add-contractor-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex hovers over {string} and selects {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on individual Contractor on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on company Contractor on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No, i will do the onboarding on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, let them self onboard on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on next button on add Contractor page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes company contractor invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes contractor invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores employee contractor details for certification tests",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/add-contractor-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/ee-invite-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "add-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/add-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in {string} field on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters SSN as {string} in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex then selects {string} for Employee self onboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters TIN as {string} in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex will see validation message {string} on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Send Invite on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Last name in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random SSN in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters confirm SSN in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters employee Hire date in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Date of birth {string} in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Mobile number {string} in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Email address in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Email address with plus symbol in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters details for and employee who is over 50 in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters company contractors details in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random Company contractor name in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters random TIN in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters confirm TIN in Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters first name as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters last name as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters social security number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters confirm social security number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters hire date as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters DOB as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters mobile number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters email as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex then selects {string} I will do the onboarding of the employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee option {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex then selects {string} for Individual Contractor self onboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex then selects {string} for Company Contractor self onboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks navigation continue button on employee onboarding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} page from Employees main menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected {string} option on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicked {string} button on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon after sending invite on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex can see Invite Sent success message on Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks Send Invite and validation message {string} is displayed on Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see field validation message {string} is displayed on Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} button will be disabled on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks Next button on Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is redirected to Employment info page in Employee Wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes, let them self onboard on add Employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No, i will do the onboarding on on add Employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Employee name and completes form on add Employee page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on add Employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the First name field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Last name field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Hire date field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Company name field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the TIN field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Confirm TIN field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Zip code field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Email address field will be displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Send Invite Button enabled on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out everything myself image displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out everything myself header displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out everything myself info text displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out everything myself link displayed on simplified employee invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "success message header displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "success message text displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "next steps header displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "next steps text displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go to employment info button displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Finish later button displayed on Invite Sent Confirmation message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex redirected to People landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "successfully added to your team header displayed on Congrats page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "successfully added to your team text displayed on Congrats page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fill out congrats text displayed on Congrats page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fill out congrats text not displayed on Congrats page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "high five image displayed on Congrats page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets Email address on Personal Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets employee Hire date from Employee EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex gets employee Zip code from Employee EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out info myself header is displayed on Enhanced Onboarding Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out info myself description is displayed on Enhanced Onboarding Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out info myself link is displayed on Enhanced Onboarding Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out info myself has description text of {string} is displayed on Enhanced Onboarding Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fill out info myself does not have description text of {string} displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks the TIN field on the Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unmasks the Confirm TIN field on the Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The TIN field is masked on the Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Confirm TIN field is masked on the Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The TIN field is unmasked on the Employee Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Confirm TIN field is unmasked on the Employee Invite page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employee-menu/employee-menu-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-prefill-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-invite-buttons-page",
      "../../../../pages/runMod/employeeManagement//setUpNewEmployee/setup-new-employee-page",
      "../../../../pages/common/add-employee-page",
      "../../../../pages/common/people-landing-page",
      "../../../../support/gmail/GmailApiManager",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-invite-run-task-created-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/employee-invite-run-task-created-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex can see QH task {string} in Run",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/common/home-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-invite-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/employee-invite-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in {string} field on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters first name as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes employee invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters last name as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters social security number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters confirm social security number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters hire date as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters DOB as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters mobile number as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters email as {string} in Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} page from Employees main menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex has selected {string} option on Employee Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Next button will be Enabled on EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex creates an employee prefill record with personal information",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex creates an individual contractor prefill record with personal information",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex creates a company contractor prefill record with company information",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the following fields will be disabled on EE Invite page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the following fields will be disabled on EE Invite page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Invite Sent success message on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Send Invite button is enabled on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Send Invite button will be disabled on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Next button will be disabled on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Next button will be Enabled on EE Invite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see Send Invite button enabled on Simplified invite page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../../pages/runMod/employee-menu/employee-menu-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-prefill-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-invite-buttons-page",
      "../../../../pages/runMod/employeeManagement//setUpNewEmployee/setup-new-employee-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "onboarding-confirm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/onboarding-confirm-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies contractor name on confirmation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Invite Sent success message on EE Invite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add garnishments on onboarding complete confirmation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see Im done button on onboarding complete confirmation page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/onboarding-confirm-page",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/employee-prefill-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "resend-invite-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/setUpNewEmployee/resend-invite-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../../pages/runMod/employeeManagement/setUpNewEmployee/resend-invite-page",
      "../../../../pages/runMod/employeeManagement/personalInfo/employee-info-page",
      "@cucumber/cucumber",
      "../../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "historical-jurisdcition-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/taxInfo/historical-jurisdcition-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex saves on historial jurisdiction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex cancels on historial jurisdiction page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/employeeManagement/taxInfo/historial-jurisdiction-page"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-documents-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/taxInfo/tax-documents-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is redirected to the tax documents page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the {string} tax document on the tax documents page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the document download button on the tax documents page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the document download button on the tax documents page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the return button on the tax documents page",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/taxInfo/tax-documents-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-info-edit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/taxInfo/tax-info-edit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex opens Historical Jurisdiction from tax info edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks to edit {string} on the employee tax overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters total number of allowances as {string} on tax info edit page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks to edit Local Services tax info on the employee tax overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the add jurisdictions message {string} on the tax overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the return button on the tax overview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see Pay by Pay Workers comp info section is displayed in tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches on occupation description {string} on State tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A state is not setup error message is displayed under the field {string} on the State tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters total number of Claim dependents as {string} on Federal tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "tax exempt checkbox {string} should be checked",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "tax exempt checkbox {string} should be unChecked",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../../pages/runMod/employeeManagement/taxInfo/tax-info-edit-mode-page",
      "../../../../pages/runMod/employeeManagement/taxInfo/tax-overview-edit-mode-page",
      "../../../../pages/runMod/employeeManagement/taxInfo/tax-info-state-edit-mode-page"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/taxInfo/tax-info-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to Tax Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Tax Info page with withholding and filling status",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Employment Info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "locals {string} should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the {string} field on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the {string} field on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a state local called {string} is displayed on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters State Income Tax withholding amount as {string} on state tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears State Income Tax withholding amount on state tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears Worked In Allocation Percentage on local tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters federal additional withholding amount as {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters local additional withholding amount as {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters local additional withholding amount as {string} for city {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters local additional withholding percentage as {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters local additional withholding percentage as {string} for city {string} on tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The local additional withholding percent validation message {string} is seen for {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Additional withholding amount field should show {string} on tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see any recommended locals",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Income tax {string} dropdown tooltip is displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Income tax {string} input tooltip is displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "All the state income tax tooltips are displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Income tax {string} dropdown tooltip should display message {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see tax help icon {string} on Tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the state not set up at company level validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the state not set up at company level validation message on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "i enter date as {string} on the department health insurance eligibility date on the tax info page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the department health insurance eligibility date field should show {string} on the tax info page:",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the Marion local jurisdiction not set up at company level validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the king twp local {string} validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the king twp local validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the percentage time worked in jurisdiction field on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the percentage time worked in jurisdiction field on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the lived in W4 tax fields on the tax info page for Kentucky",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the worked in W4 tax fields on the tax info page for Hawaii",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the worked in W4 tax fields on the tax info page for Iowa",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the worked in W4 tax fields on the tax info page for Idaho",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the worked in W4 tax fields on the tax info page for Illinois",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds local {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds local {string} for state {string} on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds local {string} for Oregon state on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches and adds local {string} for {string} on local tax modal page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the pennsylvania warning message {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the standard hours warning message for {string} on the tax info edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} warning message is displayed on the Tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the effective date warning message {string} on the tax info edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the pennsylvania lived in validation message {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the pennsylvania local recommended validation message {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees the pennsylvania worked in validation message {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the pennsylvania worked in or lived in validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex cannot see the pennsylvania lived in validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the pennsylvania local additional withholding percentage validation message on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the pennsylvania local jurisdictions warning message on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} local tax for the state of {string} on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} button on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} in the {string} add local tax search field on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} local service tax on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The pennsylvania local services tax section is displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The pennsylvania local services tax section is not displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} local service tax warning message {string} is displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} local service tax warning message is not displayed on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} with code {string} local service tax is added to the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The local service tax button is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can no longer see the Pennsylvania add local button on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the local tax is added as a lived in local",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the local tax is added as a worked in local",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the local tax residency dropdown is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the PSD code {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the local additional withholding amount {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The local additional withholding amount of {string} is seen for city {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the local additional withholding type {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The local additional withholding type {string} is seen for city {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the local additional withholding type",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see the local additional withholding amount",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "a recommended LST local called {string} is displayed on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects the recommended LST local on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects {string} recommended local on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects the {string} recommended local on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the {string} recommended local on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the recommended local on the tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex amends the amount of the worked in percentage on the tax info page to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see validation message {string} will be displayed on the Tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees {string} locals added on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Additional witholding tax amount should show {string} on federal tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "local {string} should NOT be available on tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "local {string} should be available on tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Effective date for the change of state field",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "recommended local {string} drop down Exempt from withholding should be set to {string} option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Yes on Do you want to add tax state with a fee modal on the Employee Tax info Setup Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Tax Info page and unchecks recommended local jurisdictions",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex will see {string} field in Local tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} local with code {string} is displayed in the locals list in Tax Info page OneUx",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A state is not setup error message is displayed under the field {string} on the tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} livedIn state should be selected in {string} field in Tax Info page OneUx",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} workedIn state should be selected in {string} field in Tax Info page OneUx",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters State Additional withholding amount as {string} on state tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears State Additional withholding amount on state tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Connected locals message will be displayed in Local tax page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on Connected locals message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee wizard Tax info page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see local PSD code {string} on the Tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Enter amount field on state tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in dropdown field for {string} Federal tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in dropdown field for New Mexico Withholding status step 1c",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in dropdown field for Withholding status step 1c in Federal tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "warning message {string} is not displayed on the Tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks button {string} on Paperless statement modal",
        "async": true
      }
    ],
    "imports": [
      "../../../../pages/runMod/employeeManagement/employee-sidenav/employee-wizard-sidenav-page",
      "../../../../pages/runMod/employeeManagement/taxInfo/tax-info-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/taxInfo/tax-login-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "w-2-pop-up-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/employeeManagement/w-2-pop-up-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks {string} button on W-2 modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} button is displayed on W-2 modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on W-2 modal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/modal/w-2-pop-up",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-garnishment-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/garnishments/payroll-garnishment-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is on the Garnishment page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add reminder on home page button on Garnishment page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks send email reminder button on Garnishment page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks got it button on Garnishment page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Garnishment modal header {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "add garnishment task modal contains text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "send email reminder modal contains text {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK thanks button in add a reminder on homepage garnishment modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK thanks button in send email reminder garnishment modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Print button is displayed on Garnishment page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Garnishment upsell modal header {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks I will do it later button in garnishment upsell modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks chat with us button in garnishment upsell modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks set up GPS button in garnishment upsell modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button in set up GPS garnishment modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "set up GPS modal contains text {string}",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/garnishments/payroll-garnishment-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrassist-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrAssist/hrassist-landing-page-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/hrAssist/hrassist-landing-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "wfn-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrAssist/wfn-landing-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/hrAssist/wfn-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-company-property-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-company-property-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex clicks on Company property hr menu link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Assign Property button is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Assign Property button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button in company property page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on Cancel button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on Save button in add new pop up",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validates Edit company property page is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/hrlite/hrlite-company-property-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-differentbundles-roles-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-differentbundles-roles-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate all Sections in Employee or contractor maintenance mode",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/hrlite/hrlite-emergencycontact-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-emergencycontact-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-emergencycontact-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Emergency Contact menu in the employee maintenance mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Emergency Contacts page title on Emergency Contacts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add contact  button {string} on Emergency Contacts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves Primary contact details by clicking upon save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add secondary contact button on Emergency Contacts page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies set primary contact toggle in secondary contact section",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves Secondary contact details by clicking upon save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Secondary name to get into the secondary contact details to edit",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex set secondary contact as primary contact",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves Doctor contact details by clicking upon save button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes Primary contact on Emergency Contacts page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes Doctor contact on Emergency Contacts page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex logs out from Run application",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/hrlite/hrlite-emergencycontact-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-job-info-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-job-info-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate add new job button is displayed on Job info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add new job button on Job info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the Employment class value from drop down {string} on Job info screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the work location value from drop down {string} on Job info screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the FLSA type value from drop down {string} on Job info screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the Assigned shift from drop down {string} on Job info screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on delete button on job info page {string} and {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes all jobs on job info page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/hrlite/hrlite-job-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-manage-performance-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-manage-performance-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Performance Management menu on LHS nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Start a review button",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/hrlite/hrlite-manage-performance-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-skills-and-training-education-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-education-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex navigate to human resource grid on Employee maintainence page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on HR menu {string} on Employee maintainence page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to HR page {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate education window is displayed on Skill and Training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate add education button is displayed on Skill and Training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add button {string} on Hr lite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be navigated to Add page {string} on Hr lite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter educational level {string} on Education screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on save button on Hr lite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on existing record on Hr lite page {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on delete button {string} {string} on skills and training page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-education-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-skills-and-training-license-and-certification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-license-and-certification-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate licenses and certificates window is displayed on Skill and Training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter license certification type {string} on certification screen",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-license-and-certification-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hrlite-skills-and-training-skill-and-training-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-skill-and-training-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate skills and training window is displayed on Skill and Training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate add skills and training button is displayed on Skill and Training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add skills and training button on Skill and Training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be navigated to Add skills and training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter skill level {string} on Skill and training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter proficiency level {string} on Skill and training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate that popup is displayed {string} on Hr lite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on existing skills and training record on SKill and Training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate that delete button is displayed {string} on Hr lite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on delete button on Skil and training page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate that delete popup is displayed on Hr lite page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on drawer to see existing skills records {string} on Skill and Training page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on cancel button on Hr lite page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be navigated to skill type list page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on save customized added skill value on customize page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate customize skill set is saved on customize page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on delete customized added skill value on customize page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate customized skill is deleted successfully from customize page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigate to Add Skill and training page on Skills and Training page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/runMod/hrlite/hrlite-skills-and-training/hrlite-skills-and-training-skill-and-training-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-add policy-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-add policy-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-add policy-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-benefitsandleave-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-benefitsandleave-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-benefitsandleave-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-compliance-updates-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-compliance-updates-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex performs the switch to child window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The HR411 Container is not displayed on compliance updates page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-compliance-updates-page",
      "@cucumber/cucumber",
      "../../../pages/runMod/hrmod/hrmod-performancemanagement-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-complianceandguidance-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-complianceandguidance-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-complianceandguidance-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-createhandbook-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-createhandbook-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-createhandbook-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-formsanddocuments-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-formsanddocuments-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-formsanddocuments-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-handbook editor-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-handbook editor-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-handbook editor-page",
      "@cucumber/cucumber",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-handbook-publish-flow-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-handbook-publish-flow-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-handbook-publish-flow-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-handbook-settings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-handbook-settings-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/hrmod/hrmod-handbook-settings-page",
      "@cucumber/cucumber",
      "@playwright/test"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-handbook-versions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-handbook-versions-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-handbook-versions-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hireandonboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hireandonboard-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-hireandonboard-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hradmin-clientinformation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hradmin-clientinformation-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/hrmod/hrmod-hradmin-clientinformation-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hradmin-documentsmanagement-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hradmin-documentsmanagement-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/hrmod/hrmod-hradmin-documentsmanagement-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hradmin-faststarts-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hradmin-faststarts-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/hrmod/hrmod-hradmin-faststarts-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hradmin-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hradmin-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the Dashboard menu from the LeftNav on the Home Page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/hrmod/hrmod-hradmin-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-hrlanding-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-hrlanding-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The HR411 Container is not displayed on HR landing page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-hrlanding-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-jobdescriptions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-jobdescriptions-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-jobdescriptions-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-newhirepaperwork-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-newhirepaperwork-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-newhirepaperwork-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-performancemanagement-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-performancemanagement-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-performancemanagement-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-terminateandrehire-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-terminateandrehire-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-terminateandrehire-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hrmod-view acknowledgments-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/hrmod/hrmod-view acknowledgments-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/hrmod/hrmod-view acknowledgments-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hr-hire-onboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/hr-hire-onboard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Post a job tile on Hiring and onboarding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Background checks tile on Hiring and onboarding page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Background checks tile is displayed on Hiring and onboarding page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Background checks page is opened in new tab",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/hr-hire-onboard-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hr-learning-missingemails-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/hr-learning-missingemails-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Manage Employee Access button ",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/hr-learning-missingemails-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "hr-learning-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/hr-learning-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Learning dashboard is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tracking section loaded on Learning dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Course Library link on Learning dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course categories loaded in Course Library page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Search for {string} course on Course Library page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Open {string} course from search results on Course Library page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course details page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on preview certificate in Course Details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Certificate preview window is opened on Course Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the Certificate preview window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on preview course in Course Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches the preview course",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Preview course window is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the preview course window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Enroll People button on Course Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Select all employees from the list",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Click on Enroll button on Enrollment Process",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Learning Management System",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Course Library page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee navigates to Learning from myadp Dashboard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee click on the start button of the assigned course",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course launch window is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course content is Displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee close the launched course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Enrollments on Course Details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex search for {string} employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex mark the course as complete for employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on course completion certificate of employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course completion certificate of employee is Displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex close the course completion certificate of employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unenroll {string} course from  an employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select all employees for course unenrollment",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unenroll {string} course from all employees",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the report csv {string} is appended for LMS tests",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee searches for {string} course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee self enrolls {string} course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee starts the self enrolled course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee opens the self enrolled course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "employee unenrolls from the self enrolled course",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the course is unenrolled successfully",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex searches for {string} course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex self enrolls {string} course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex starts the self enrolled course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens the self enrolled course",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course launch window is opened as Alex",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launch the assigned course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex close the launched course",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unenrolls from the self enrolled course as Alex",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the course is unenrolled successfully as Alex",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course categories are loaded for Alex",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Course categories loaded for Employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on the start button of the assigned course",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/hr-learning-page",
      "@cucumber/cucumber",
      "../../../support/csv-processor"
    ],
    "pageObjects": []
  },
  {
    "file": "human-resources-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/human-resources-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the Human Resources landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Human Resources Header is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Hire and Onboarding Tile is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Terminate and Rehire Tile is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Benefits and Leave container is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Compliance and Guidance container is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Weekly Tip container is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Webinars and Podcast container is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the HR reports container is displayed on the Human Resources page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Hire and onboard tile on HR Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Learning tile is displayed on HR Landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Learning tile is not displayed on HR Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Learning tile on HR Landing page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/human-resources-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "postajob-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/postajob-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "ZR landing page is displayed on Post a Job page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Post Jobs Now button on ZR landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go to CareerPlug button is displayed on Post a Job page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go to CareerPlug button is not displayed on Post a Job page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go to ZipRecruiter button is not displayed on Post a Job page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} Tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Post a job Home page shortcut",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Learn more link on Post a job Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ZipRecruiter Home page shortcut",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/hr-post-a-job-page",
      "../../../pages/common/home-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "salarybenchmarks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/human-resources/salarybenchmarks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Salarybenchmarks widget is loaded",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Salary benchmarks widget is not loaded",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add a job title link on EE payroll info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Job Info from left menu from EE maintenance",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks salarybenchmarks link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Learn more link on salarybenchmarks page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes salarybenchmarks page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/human-resources/hr-salarybenchmarks",
      "../../../pages/runMod/employeeManagement/employee-sidenav/employee-edit-sidenav-page",
      "@cucumber/cucumber",
      "../../../pages/runMod/employeeManagement/payrollInfo/payroll-info-page"
    ],
    "pageObjects": []
  },
  {
    "file": "gyb-tile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/gyb-tile-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Time banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Retirement banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance INSIORWCONLY banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance INSIORMULTI banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Retirement {string} state banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Retirement state banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Retirement conversion banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on R&D tax credit banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on HRO banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Retirement S2K banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance WC state mandate banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Hr in-trial banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on HR lead banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance BOR banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time CA banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time trial banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time in-trial banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time post-trial banner in GYB tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on run can do everything banner",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance INSIORMULTIWC banner",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Clover POS banner",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/gybtile-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "hr-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/hr-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on HR trial banner in Hr Landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/hr-landing-page-ipm",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "insurance-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/insurance-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance BOP banner in Insurance Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance Attune banner in Insurance Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance HB banner in Insurance Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance INSIORMULTIBI banner in Insurance Landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/insurance-landing-page-ipm",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ipm-modal-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/ipm-modal-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Get pricing button on HR lead modal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/ipmmodal-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ipm-rs-todo-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/ipm-rs-todo-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/ipm/ipm-rs-todo-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ipm-signout-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/ipm-signout-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on RS state banner on signout page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance WCONLY banner on signout page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time banner on signout page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on HR banner on signout page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on HRO banner on signout page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/ipm-signout-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "leftnav-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/leftnav-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/ipm/leftnav-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "manual-checks-ipm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/manual-checks-ipm-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/ipm/manual-checks-page-ipm",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "max-onboarding-ipm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/max-onboarding-ipm-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance banner in Max Onboarding Tax Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance banner in Max Onboarding Done Landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/max-onboarding-ipm-page",
      "../../../pages/common/installation-selector-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "paid-time-off-ipm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/paid-time-off-ipm-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Time Keepingplus banner in PTO plan page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/paid-time-off-ipm-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-employee-summary-page-ipm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/payroll-employee-summary-page-ipm-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on IPM Time banner in Payroll or Employee summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on IPM RS S2K banner in Payroll or Employee summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on IPM Time CA banner in Payroll or Employee summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on IPM Insurance WC state banner in Payroll or Employee summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on IPM Work Market banner in Payroll or Employee summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Clover POS banner in Payroll or Employee summary page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/payroll-employee-summary-page-ipm",
      "../../../pages/runMod/ipm/ipmmodal-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/tax-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on R&D tax credit banner in tax landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/tax-landingpage-ipm",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "time-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/time-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Time Keepingplus banner in Time Landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/time-landing-page-ipm",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "workers-comp-reports-ipm-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/ipm/workers-comp-reports-ipm-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Insurance banner in workers comp reports package page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/ipm/workers-comp-reports-ipm-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "exclusive-benefits-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/marketplaceIntegrations/exclusive-benefits-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/common/home-page",
      "../../../pages/runMod/marketplace/exclusive-benefits-slider-page"
    ],
    "pageObjects": []
  },
  {
    "file": "marketplace-embeddable-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/marketplaceIntegrations/marketplace-embeddable-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks the cross button on FSM to close the page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/marketplace/marketplace-embeddable-ng",
      "../../../pages/runMod/marketplace/marketplace-embeddable-slider"
    ],
    "pageObjects": []
  },
  {
    "file": "subscriptions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/marketplaceIntegrations/subscriptions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on {string} under {string} in Dashboard Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user clicks Dashboard LHN menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Dashboard landing page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user searches {string} and clicks on the menu",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user clicks left nav menu icon",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The subscriptions page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user navigates to Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user navigates to Home Page from features",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user clicks Settings LHN menu",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Subscription rows are not displayed in Subscriptions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} link is shown for each {string} subscription in Subscriptions page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/common/home-page",
      "../../../pages/runMod/dashboard/dashboard-subscriptions-page",
      "../../../pages/runMod/dashboard/dashboard-landing-page",
      "../../../pages/common/company-settings-page",
      "../../../pages/common/run-left-nav-page"
    ],
    "pageObjects": []
  },
  {
    "file": "add-report-to-service-request-popup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/messageCenter/add-report-to-service-request-popup-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "An Associate user Verfies the List of Service request available",
        "async": true
      },
      {
        "type": "When",
        "pattern": "An Associate user click on Next button in select a service request to attach document popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "An Associate user adds message to text field as {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "An Associate user click on Submit button in select a service request to attach document popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "An Associate user clicks on Close after report added succesfully",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the service request icon",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies ivr pin setup popup displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter first pin {string} to setup ivr pin",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter second pin {string} to setup ivr pin",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Enter pin numbers",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on save pin on ivr setup popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies security verification popup displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select email security option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies security verification popup to enter code is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alext Enter code and Click confirm button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies pin created successfully messages displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click done on pin setup successfull popup",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/messageCenter/add-report-to-service-request-popup"
    ],
    "pageObjects": []
  },
  {
    "file": "mmb-home-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/mmb/mmb-home-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks switch region {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks switch Region {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select the division {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click regional refresh button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex waits for all branch statuses to completed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to clients page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects particular branch in division",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies status to be completed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies potential no start item",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks potential no start item",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex verifies and clicks Client menu item {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex verifies and clicks MMB menu item {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select letter {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button to see the response",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify letter title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify letters title {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex close letter title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies and clicks Letters menu item {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies letters submenu item",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks letters submenu item",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies and clicks Reports menu item {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select Reports {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify Reports title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex close Reports title {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reports button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks move to mmb button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies move to mmb popup is displayed and clicks OK button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Move To MMB Export button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Regional Reports page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex schedule the Reports {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies Confirm Export Notification and clicks Yes button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies FTP Upload popup and clicks OK button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify reports schedule successful popup displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} report status completed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Select Filters Notification displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects isAllSelected",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects particular branch",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify Regional Reports title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex inputs From and To Date and clicks OK button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex inputs daysOnTLB and clicks OK button",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/common/base-page",
      "@cucumber/cucumber",
      "../../../pages/runMod/mmb/homePage",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "authorizations-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/authorizations-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/authorizations-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "calendar-quarter-deadlines-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/calendar-quarter-deadlines-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/calendar-quarter-deadlines-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "calendar-sales-tax-calendar-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/calendar-sales-tax-calendar-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/calendar-sales-tax-calendar-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "check-printing-bundle-status-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/check-printing-bundle-status-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/check-printing-bundle-status-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "check-printing-logo-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/check-printing-logo-step.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/check-printing-logo-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "check-printing-signature-step.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/check-printing-signature-step.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/check-printing-signature-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "contractorstarategy-optinoptout-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/contractorstarategy-optinoptout-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/contractorstarategy-optinoptout-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "credit-card-email-history-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/credit-card-email-history-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Email Type as a {string} on Credit Card Email History Page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/operationsHub/credit-card-email-history-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "credit-card-transaction-history-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/credit-card-transaction-history-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/credit-card-transaction-history-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "datamaintenance-bank-aba-lists-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/datamaintenance-bank-aba-lists-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/datamaintenance-bank-aba-lists-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "datamaintennace-business-referrals-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/datamaintennace-business-referrals-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/datamaintenance-business-referrals-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "mass-quarter-close-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/mass-quarter-close-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/ops-hub-mass-quarter-close-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "mass-w2-print-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/mass-w2-print-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/ops-hub-w2-print-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payrun-status-and-resend-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/payrun-status-and-resend-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/payrun-status-and-resend-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "quarter-file-overrides-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/quarter-file-overrides-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/quarter-file-overrides-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "retransmit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/retransmit-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/retransmit-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "status-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/status-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/status-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "statutory-garnishments-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/statutory-garnishments-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/statutory-garnishments-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "statutory-system-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/statutory-system-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/statutory-system-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "statutory-taxes-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/statutory-taxes-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/operationsHub/statutory-taxes-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "transmission-balancing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/transmission-balancing-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/transmission-balancing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "transmission-client-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/transmission-client-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} into the From Date field on the Transmissions - Client page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the To Date field on the Transmissions - Client page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Check Date field on the Transmissions - Client page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/transmission-client-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "transmission-retransmit-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/transmission-retransmit-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Associate selects IID for retransmission",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate searches for IID for retransmission",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate clicks Retransmit button",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/transmission-retransmit-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "transmission-status-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/operationsHub/transmission-status-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/operationsHub/transmission-status-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "order-entry-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/orderEntry/order-entry-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/classic/orderEntry/order-entry-page",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-calculation-method-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-calculation-method-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Calculate net pay option on PCC calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Calculate gross pay option on PCC calculation method page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Enter pay info manually option on PCC calculation method page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is enabled on PCC calculation method page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is disabled on PCC calculation method page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-calculation-method-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-check-date-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-check-date-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup on PCC Check Date page if exists",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is enabled on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is disabled on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Pay Period Start Date of {string} for Custom Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Pay Period Start Date as {int} days ago for Custom Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Pay Period End Date as {int} days later for Custom Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Pay Period End Date of {string} for Custom Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Check Date of {string} on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} check date on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears pay period start date on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears pay period end date on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears check date on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Next Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the back date check message on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Prior Quarter check date message on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Custom Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Previous Pay Period on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The validation error displayed under custom start date field contains text {string} on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The validation error displayed under custom end date field contains text {string} on PCC Check Date page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The validation error displayed under check date field contains text {string} on PCC Check Date page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-check-date-page",
      "../../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-deductions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-deductions-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next and does not wait for loader on PCC Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} percentage for {string} deduction on PCC deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} deduction of {string} dollars on PCC deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} deduction rate as {string} on PCC deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes {string} deduction on PCC Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add new deduction option on PCC deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects new deduction as {string} on PCC add new deduction modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add button on PCC add new deduction modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button on PCC add new deduction modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add Deduction tooltip contains text {string} on PCC deductions page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The validation error displayed under {string} {string} field contains text {string} on PCC deductions page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-deductions-page",
      "../../../pages/runMod/paycheck-calculator/pcc-deductions-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-earnings-net-to-gross-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-earnings-net-to-gross-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is enabled on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is disabled on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters net pay amount of {string} dollars on PCC net to gross earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects earning as {string} on PCC net to gross earnings page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-earnings-net-to-gross-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-earnings-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-earnings-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex is on PCC add new earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add earnings option on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Show more earnings option on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} earning rate as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} earning of {string} dollars on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} earning hours as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks chevron for {string} earning on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning Department as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning Worked In State as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning Worked In State as blank on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning Worked In Local as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning Job as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects new earning as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add button on PCC add new earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button on PCC add new earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks X on PCC add new earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters on row {string} an earning amount of {string} dollars on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters on row {string} hours {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters on row {string} a rate of {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on row {string} Department as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on row {string} Worked in state as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on row {string} Worked in local as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects on row {string} Job as {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in message popup on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked in state tooltip for {string} earning contains text {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked in local tooltip for {string} earning contains text {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked in state tooltip for row {string} contains text {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked in local tooltip for row {string} contains text {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Add Earning tooltip contains text {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} earning week {string} for earning sequence {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks add week button for {string} earning for earning sequence {string} on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes {string} earning on PCC earnings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes {string} new earning on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} earning has a rate of {string} dollars on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} earning is not present in Add Earnings dropdown on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} earning is present in Add Earnings dropdown on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total earnings amount {string} is displayed on PCC earnings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total earnings hours {string} is displayed on PCC earnings page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-earnings-page",
      "../../../pages/runMod/paycheck-calculator/pcc-earnings-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-final-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-final-details-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Record paycheck button on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel check button on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel changes button on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see Record paycheck button is enabled on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see Record paycheck button is disabled on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Total net pay amount of {string} dollars on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} Weeks worked on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Check number {string} on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects include Garnishments option as {string} on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Garnishment question text on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the include Garnishment Yes text on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the include Garnishment No text on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total amount for {string} section is {string} on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Weeks worked tooltip contains text {string} on PCC final details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks chevron for {string} section on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "amount for tax sequence {string} tax name {string} is {string} on PCC final details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation error displayed under checknumber field contains text {string} on PCC final details page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-final-details-page",
      "../../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-launch-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-launch-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex launches ng Calculate Paycheck from home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches Calculate Paycheck from home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that home page is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/common/home-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-modal-messages-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-modal-messages-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when selecting a different calculation method",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when selecting a different calculation method",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when selecting a different check date option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when selecting a different check date option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when selecting a different person after entering data in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when selecting a different person after entering data in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when the worked in state or local is changed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when the worked in state or local is changed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon in PCC Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup on closing PCC",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in message popup on closing PCC",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button in message popup in PCC",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in message popup in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when the pay period start date is greater than the end date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when the pay period start date is greater than the end date",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when the taxes or deductions are greater than the pay",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when the taxes or deductions are greater than the pay",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the spinner is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message title {string} is displayed when standard hours are not present",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when standard hours are not present",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when ER paid employee share of PFML is not present",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning hours required message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message header {string} is displayed in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message text {string} is displayed in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message containing text {string} is displayed in PCC",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button in message popup in PCC",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit earnings button in message popup in PCC",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed when the pay period start date is greater than the employee termination date",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/paycheck-calculator/pcc-modal-messages-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-review-and-record-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-review-and-record-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel paycheck button on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Record with next payroll button on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Record check number modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in Check Number Modal on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Record with next payroll button in Check Number Modal on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects include Garnishments option as {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Garnishment question text on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Garnishment question YES text on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the Garnishment question NO text on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the include Garnishment Yes text on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see the include Garnishment No text on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total amount for {string} section is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total Net Pay amount is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks chevron for {string} section on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies amount for earning sequence {string} earning name {string} is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies amount for deduction sequence {string} deduction name {string} is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies amount for tax sequence {string} tax name {string} is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies amount for employer tax is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies amount for employer deduction is {string} on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning name {string} is displayed on PCC Review and record page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning name {string} is not displayed on PCC Review and record page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-review-and-record-page",
      "../../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-sidenav-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-sidenav-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Calculation method step from PCC side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Earnings step from PCC side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Check date step from PCC side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Who its for step from PCC side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Close button on PCC side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK to confirm exiting PCC",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/paycheck-calculator/pcc-sidenav-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-summary-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Record another check button on PCC summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Done button on PCC summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit check button on PCC summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total amount for {string} section is {string} on PCC summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Total Net Pay amount is {string} on PCC summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Check number is displayed on PCC summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks pending item link on PCC summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks chevron for {string} section on PCC summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "amount for tax sequence {string} tax name {string} is {string} on PCC summary page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-summary-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-taxes-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-taxes-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex is on PCC tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on the PCC tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back button on the PCC tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} jurisdiction {string} tax amount of {string} dollars on PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} jurisdiction {string} withholding amount of {string} dollars on PCC tax withholding page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes amend taxes option on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No amend taxes option on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes taxes withholding option on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No taxes withholding option on the PCC taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} for weeks worked",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} for pay periods",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the tax name {string} is displayed on the PCC taxes page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the tax name {string} is not displayed on the PCC taxes page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} jurisdiction {string} withholding amount of {string} dollars on PCC tax withholding page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-taxes-page",
      "../../../pages/runMod/paycheck-calculator/pcc-tax-withholding-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pcc-who-its-for-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/paycheck-calculator/pcc-who-its-for-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks next button on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Search icon for who its for on PCC Who its for page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is enabled on PCC Who its for page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see next button is disabled on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Who its for field on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee as {string} on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex changes employee as {string} on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects contractor as {string} on PCC Who its for page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects reason as {string} on PCC Who its for page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/paycheck-calculator/pcc-who-its-for-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-dashboard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll-dashboard/payroll-dashboard-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Jurisdictions page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Jurisdiction dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the {string} state {string} tax type from the Jurisdiction table",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the vermont CCC-ER state from the Jurisdiction table",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex update oregon SIT EIN number and check digit number in dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores the employee's last name for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verifies Confirm popup message in dashboard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reenter the oregon SIT and confirm",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click ok button in the success pop up",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validated the oregon SIT EIN number in Jurisdiction page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens a {string} user IID as Associate",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects tax profile in the Taxes page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the oregon state edit from the tax info",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter random SIT number and update oregon SIT and check digit number in state tax info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validated the oregon SIT state tax info in Taxes page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The State tax info page is displayed",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/payroll-dashboard/payroll-dashboard-page",
      "../../../pages/common/installation-selector-page",
      "chai",
      "../../../pages/classic/user-security-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-landing-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll-landing-page/payroll-landing-page-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Calculate Checks tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Run Payroll tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects One-time Payment tile on the Payments landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Run Payroll tile on the Payroll landing page for an Embedded Payroll client",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Run off-cycle Payroll tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Check and Payment Options tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects More payroll options tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Modal box displayed on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Modal box for more options displayed on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Import timesheets tile on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks General Ledger Transactions on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks General Ledger tile on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Check Printing Options on the Payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} tile is displayed on the Payments landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "messages header is displayed on Payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "to-do notifications header is displayed on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on to-do notifications header on Payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "notifications slide panel is displayed on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on slide panel notification alert on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to company settings page by clicking on settings button on Payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Settings icon is displayed on payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pending item link is displayed on payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks pending items link on Payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Void payments tile on the Payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll due date is displayed in the upcoming payroll tile on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll run date and time is displayed in the payroll history tile on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Info Icon is displayed next to the upcoming payroll header on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the message {string} is displayed after clicking on Info Icon next to the upcoming payroll header on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alert icon for upcoming payroll is displayed on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning icon for upcoming payroll is displayed on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due badge is displayed in things to do section on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll due today badge is displayed in things to do section on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due badge is not displayed in things to do section on the payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate clicks on Change IID button on the payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Success page is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll-landing-page/payroll-landing-page",
      "../../../pages/runMod/payroll/payroll-modal-messages-page",
      "../../../pages/common/payroll-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-pending-items-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll-pending-items/payroll-pending-items-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Pending Items page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll pending items FSM with title {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes payroll pending items FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pending items with {string} frequency is not displayed on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pending items with {string} frequency is displayed on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Table header with {string} frequency and {string} frequency description is displayed on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete icon for employee code {string} for pending item type {string} on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks info icon for employee code {string} for pending item type {string} on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button on delete payroll pending items popup on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete button on delete payroll pending items popup on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks view pending items button on pending item no longer available popup on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The message title {string} is displayed in the popup modal on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The message text {string} is displayed in the popup modal on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Refund in progress message is displayed on payroll pending items page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks pending item link for employee code {string} for pending item type {string} on payroll pending items page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No pending items message is displayed on payroll pending items page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll-pending-items/payroll-pending-items-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "pending-item-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll-pending-items/pending-item-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Pending item details page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete button is displayed on pending item details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete button is not displayed on pending item details page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks back arrow on pending item details FSM",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on pending item details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pending item details FSM with title {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Refund in progress banner message is displayed on pending item details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Refund in progress banner title is displayed on pending item details page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll-pending-items/pending-item-details-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-success-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll-success/payroll-success-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies that runmod payroll success page is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll-success/payroll-success-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "check-and-payment-options-modal-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/check-and-payment-options-modal-steps.js",
    "stepDefinitions": [],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/check-and-payment-options-modal-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-one-time-payment-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/contractor-one-time-payment-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the One-Time Payment page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects the Contractor Employee checkbox on the One-Time Payment page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Continue to payment button on the One-Time Payment page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the next button on the One-Time Payment page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/contractor-one-time-payment-page",
      "../../../pages/common/home-page",
      "../../../pages/common/payroll-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "contractor-pde-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/contractor-pde-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the contractors PDE page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex is on contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} earnings of {string} dollars for contractor {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the following data on the contractor PDE",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for contractor with reference name {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to one-time-overrides for contractor string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds an additional check for contractor {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} additional check for contractor {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds an additional row for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} additional rows for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks previous button on the contractors PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Yes to make the salary change permanent for a contractor",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks No to keep the salary change a one time change for a contractor",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "rate salary change warning message {string} for contractor {string} is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to one-time-overrides page for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that column {string} is displayed on the Contractor Pde Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that dropdown {string} does not have the option {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on finish later button on the contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that Preview Payroll button is disabled on the contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on non existent job error icon in dropdown {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the non existent job error message containing text {string} is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on jobcosting salary mismatch warning icon in column {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see jobcosting salary mismatch warning icon in column {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the jobcosting salary mismatch warning message for contractor {string} with {string} salary on Contractor Pde Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on jobcosting missing amount warning icon in column {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the jobcosting missing amount warning message for contractor {string} on Contractor Pde Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on inactive job warning icon in dropdown {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The inactive job warning message for contractor {string} is displayed on the Contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Contractor pde page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex jumps off to contractor info for created contractor on pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes an additional row {string} for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes an additional row {string} if exists for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm delete row action on the Contractor Pde Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm finish later action on the Contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Overtime calculations banner is not displayed on the Contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Address tooltip contains text {string} on the Contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects stop direct deposits from payroll overrides menu on the contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects enable direct deposits from payroll overrides menu on the contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects stop cash payment from payroll overrides menu on the contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects enable cash payments from payroll overrides menu on the contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects scheduled earnings and deductions from payroll overrides menu on the contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "scheduled earnings and deductions modal is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes scheduled earnings and deductions modal on contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on customize payroll worksheet icon on the contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "customize payroll worksheet modal is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes customize payroll worksheet modal on contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due banner is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due banner help link is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} payroll due today by {string} PM {string} banner is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the offcycle payroll past due today by {string} PM {string} banner is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Offcycle payroll past due banner help link is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel in payroll address modal on contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes payroll address modal on contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on edit payroll address icon on contractor PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on cancel button on the contractor PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "additional check option is not available for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ellipsis for contractor {string} on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "high amount warning message {string} for contractor {string} is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on warning icon in column {string} for contractor {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "terminated contractor warning message for contractor {string} is displayed on the contractor pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "zero-rate warning message {string} for contractor {string} is displayed on the contractor pde page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/contractor-pde-page",
      "../../../support/referencename-handler",
      "../../../pages/runMod/payroll/payroll-modal-page",
      "../../../pages/runMod/payroll/payroll-tooltips",
      "@cucumber/cucumber",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "edit-check-date-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/edit-check-date-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters Check Date as {int} days ago on edit payroll dates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Check Date as {int} days later on edit payroll dates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on the edit payroll dates page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Cancel button on the edit payroll dates page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../support/helpers",
      "../../../apis/atp/ATP-runner",
      "../../../pages/runMod/payroll/edit-payroll-dates-page"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-payment-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/employee-payment-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies that the one-time override deduction {string} has a rate of {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the earning {string} has an amount of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the earning {string} has rate of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the earning {string} has hours of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the earning {string} has department of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the taxes {string} has an amount of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the taxes {string} has rate of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the taxes {string} has hours of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employee deduction {string} has an amount of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employee deduction {string} has rate of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employee deduction {string} has hours of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employer deduction {string} has an amount of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employer deduction {string} has rate of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the employer deduction {string} has hours of {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the total taxes amount is {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the total earnings amount is {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the total employee deductions amount is {string} on employee payment details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the total employer deductions amount is {string} on employee payment details page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/employee-payment-details-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "employee-pde-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/employee-pde-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex is on employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks skip imports on Payroll in progress popup if it is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex ignores the Late payroll popup if it is displayed by clicking X button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses the continue with regular payroll option on late payroll popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses the continue with regular payroll option on late payroll popup if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses the continue with regular payroll option on early or late payroll popup if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} earnings of {string} dollars for employee {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the following data on the employee PDE",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for employee with first name as {string} and last name as {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for employee with reference name {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as {string} for employee with first name as {string} and last name as {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} as {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to one-time-overrides page for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds an additional check for employee {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} additional check for employee {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds an additional row for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "additional check option is not available for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ellipsis for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex adds {string} additional rows for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that employeePde page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee pde page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes an additional row for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes an additional row {string} for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deletes an additional row {string} if exists for employee {string} on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on cancel button on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm delete row action on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm finish later action on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm cancel action on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button in the PA local validation message on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex handles employee pde page popup to continue processing payroll",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete address button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete it button to confirm address deletion",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked-in state header tooltip containing text {string} is displayed on employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worked-in local header tooltip containing text {string} is displayed on employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} cell tool tip for employee {string} on check {string} for row {string} is {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex jumps off to employee info for employee with firstname {string} and lastname {string} on pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex jumps off to employee info for created employee on pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes late payroll modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes late payroll modal if displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Yes to make the salary change permanent for an employee",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks No to keep the salary change a one time change for an employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that column {string} is displayed on the Employee Pde Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that column {string} is not displayed on the Employee Pde Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that dropdown {string} does not have the option {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that dropdown {string} has the value {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on inactive job warning icon in dropdown {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the inactive job warning message for employee {string} on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on non existent job error icon in dropdown {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the non existent job error message containing text {string} is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on jobcosting salary mismatch warning icon in column {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see jobcosting salary mismatch warning icon in column {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the jobcosting salary mismatch warning message for employee {string} with {string} salary on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on jobcosting missing amount warning icon in column {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the jobcosting missing amount warning message for employee {string} on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that {string} earnings of {string} for employee {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that {string} earnings of {string} for employee {string} on row {string} and on check {string} is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sorts employees by Last name on employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sorts employees by First name on employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the employees are sorted by First name using last created employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the employees are sorted by Last name using last created employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that {float} employees are displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex does not see salary change info icon in column {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Overtime calculations banner is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Overtime calculations banner is not displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll overrides button on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll overrides button if accessible on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Embedded payroll pending item banner is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on review pending payroll items link on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Address tooltip contains text {string} on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects stop direct deposits from payroll overrides menu on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects enable direct deposits from payroll overrides menu on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects stop cash payment from payroll overrides menu on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects enable cash payments from payroll overrides menu on the employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects scheduled earnings and deductions from payroll overrides menu on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "scheduled earnings and deductions modal is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes scheduled earnings and deductions modal on employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on customize payroll worksheet icon on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "customize payroll worksheet modal is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes customize payroll worksheet modal on employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due banner is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll past due banner help link is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error icon is displayed on late payroll modal on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the {string} payroll due today by {string} PM {string} banner is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on warning icon in column {string} for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the missing rate warning message is displayed for employee {string} on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the warning icon in column {string} is not displayed for employee {string} on row {string} and on check {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the missing rate warning message is not displayed for employee {string} on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the offcycle payroll past due today by {string} PM {string} banner is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Offcycle payroll past due banner help link is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Employee bonus comisssion modal dialog is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The are you sure you want to delete this row from the grid modal is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Just letting you know info modal popup is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the company name field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the address line 1 field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the city field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} in the state dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in the zip code field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters first name {string} in the first name field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters last name {string} into the last name field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the phone number field",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save address button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel in payroll address modal on employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes payroll address modal on employee PDE page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Create an off-cycle payroll button in employee bonus popup on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex unlocks locked payroll if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses to verify via email in the Step Up modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Confirm button in the Step Up modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the one-time override address saved message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the reverting back to the original shipping address message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the one-time override address delete message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the message text includes {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Step Up modal is displayed and has the following title {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Step Up modal body should include {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the one-time override address {string} is displayed in the Employee Pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "rate salary change warning message {string} for employee {string} is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "high hours warning message {string} for employee {string} is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "zero-rate warning message {string} for employee {string} is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "high amount warning message {string} for employee {string} is displayed on the employee pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes high hours warning box on the employee pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "terminated employee warning message for employee {string} is displayed on the employee pde page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/employee-pde-page",
      "../../../pages/runMod/payroll/payroll-modal-page",
      "../../../pages/runMod/payroll/late-payroll-modal-page",
      "../../../pages/runMod/payroll/payroll-tooltips",
      "../../../pages/runMod/payroll/payroll-modal-messages-page",
      "../../../support/referencename-handler",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "garnishment-slider-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/garnishment-slider-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the garnishment slider is displayed on Payroll Success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the garnishment slider marketing panel is displayed on Payroll Success page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the garnishment To Do slider is displayed on Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "header {string} should display on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} should display on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the employee name {string} is displayed on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the employee name {string} is displayed for employee with payment check on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the garnishment amount {string} is displayed on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the garnishment description {string} is displayed on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the payee name {string} is displayed on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the text {string} is displayed at the bottom of the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "header {string} should display on the payroll garnishment slider marketing panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "second row text {string} should display on the payroll garnishment slider marketing panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "third row text {string} should display on the payroll garnishment slider marketing panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "fourth row text {string} should display on the payroll garnishment slider marketing panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button on chat window on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button to confirm close on chat window on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "success text {string} should display on the payroll garnishment slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The garnishment email {string} field retrieved from the table should have value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} is contained in the garnishment email",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "text {string} should display on the payroll garnishment slider GPS Success panel",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/garnishment-slider-page",
      "../../../apis/atp/ATP-runner",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "launch-pde-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/launch-pde-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex launches Regular Payment from Payments landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches ng offcycle payrun",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that home page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches ng regular payrun from home page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/common/people-landing-page",
      "../../../pages/common/home-page",
      "../../../pages/common/payroll-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "off-cycle-bonus-and-forgot-to-pay-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/off-cycle-bonus-and-forgot-to-pay-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is on Who to pay page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close button on Who to pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the text {string} is displayed on Who to pay page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on Deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks previous button in Forgot to pay wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button in forgot to pay wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button in pay a bonus wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks go back button in the leave without saving popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks leave button in the leave without saving popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex deselects {string} Employee checkbox",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on Payment method page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on Pay frequency selection page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on Bonus type selection page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} payment method",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} on deductions page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks continue on confirm dates popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} pay frequency",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation error displayed under pay frequency field contains text {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Leave without saving modal header {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation error displayed contains text {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} on bonus type page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks previous button in Pay a bonus wizard",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} step from Pay a bonus wizard side nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} step from forgot to pay wizard side nav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "modal message {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "offcycle in progress modal message displayed contains text {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button in changing the selection warning modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in changing the selection warning modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} edit button on forgot to pay wizard review page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} edit button on pay a bonus wizard review page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "offcycle in progress modal header {string} is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/off-cycle-bonus-and-forgot-to-pay-page",
      "../../../pages/runMod/payroll/off-cycle-landing-page",
      "../../../pages/runMod/payroll/off-cycle-setup-payroll-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "off-cycle-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/off-cycle-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "The Offcycle Payroll landing page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches full offcycle payrun",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches full offcycle payrun from home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches offcycle landing page from home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches full offcycle payrun from payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches offcycle payrun from payroll landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on forgot to pay someone button from offcycle landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Pay a bonus button from offcycle landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects {string} Employee checkbox",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects {string} payment type",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects Bonus earning Bonus type",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects {string} deduction option on the Pay a bonus page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex launches offcycle landing page from payroll landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Selects {string} Pay frequency type",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex lands on the Review your selections Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on Start Payroll button to launch forgot to pay employee offcycle payrun",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Start Payroll button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex lands on the Select Payroll Options Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Selects the {string} checkbox option on the Pay a bonus page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the deduction option {string} is checked on the Select Payroll Options Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the next button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on select people button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the save button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "offcycle payroll tooltip contains text {string} on offcycle landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "bonus payroll tooltip contains text {string} on offcycle landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "forgot to pay payroll tooltip contains text {string} on offcycle landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} contains text {string} on offcycle landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} contains header {string} on offcycle landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "An Error message {string} is displayed in the Pay frequency section in the Off-cycle Pay a Bonus Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/off-cycle-landing-page",
      "../../../pages/common/payroll-landing-page",
      "../../../pages/common/home-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "off-cycle-setup-payroll-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/off-cycle-setup-payroll-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks enter payroll button on the setup payroll page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects all deductions and clicks enter payroll button on the setup payroll page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the following deductions and clicks enter payroll button on the setup payroll page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/off-cycle-setup-payroll-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "one-time-overrides-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/one-time-overrides-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the option {string} for the tax {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the value {string} for the tax {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the value {string} for the earning {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the option {string} for the deduction {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the value {string} for the deduction {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the following data on the one-time-overrides page for employee {string} on row {string} and on check {string} and saves the changes",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the following data on the one-time-overrides page for contractor {string} on row {string} and on check {string} and saves the changes",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save on the one-time-override page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel on the one-time-override page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override tax on row {string} has the option {string} selected",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override tax on row {string} has the value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override tax {string} is not displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override tax {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override earning {string} has the value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the one-time-override deduction {string} has the value {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Stop section contains text {string} on one time override page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex hovers over warning icon in the {string} field on one time override page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation message for tax {string} for minimum allowed value {string} to maximum allowed value {string} is displayed on one time override page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation message for deduction {string} for minimum allowed value {string} to maximum allowed value {string} is displayed on one time override page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the validation message for earning {string} for employee {string} maximum allowed value {string} is displayed on one time override page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks reset button in the validation message on one time override page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/employee-pde-page",
      "../../../pages/runMod/payroll/contractor-pde-page",
      "../../../pages/runMod/payroll/one-time-overrides-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-stub-message-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/pay-stub-message-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters message {string} on the Pay Stub message page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the save button on the Pay Stub message page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the message {string} is displayed on the Pay Stub message page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/pay-stub-message-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payfrequency-selection-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payfrequency-selection-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for pay frequency selection page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters GTS payroll with weekly payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters GTS payroll with {string} payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with bi-weekly payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with monthly payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with semi-monthly payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with quarterly payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters payroll with annual payfrequency",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects payroll with weekly payfrequency only",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects payroll with monthly payfrequency only",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Enter Payrun Button only",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the Cancel Payrun button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on run payroll button in payroll page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payfrequency-selection-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-calculate-checks-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-calculate-checks-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies the Calculate Checks page has loaded",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes Calculate Checks page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/payroll-calculate-checks-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-data-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-data-setup-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Sort employees {string} by {string} and store with reference name {string}",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/common/installation-selector-page",
      "../../../support/referencename-handler",
      "../../../apis/atp/ATP-runner",
      "fs",
      "path",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-inspector-balloon-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-inspector-balloon-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll inspector balloon message contains {string} on the pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks view manual check button on paid twice balloon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks continue button on paid twice balloon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks don't change button on min wage balloon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks save button on min wage balloon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters rate as {string} on min wage balloon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks View Employee Paid Time Off button on pto negative balance payroll inspector balloon",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-inspector-balloon-message-page",
      "../../../support/referencename-handler",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-inspector-banner-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-inspector-banner-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to the next issue on the payroll inspector banner on the pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the previous issue on the payroll inspector banner on the pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll inspector banner text contains contains {string} on the pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning icon is displayed on the payroll inspector banner message on the pde page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Issue number is {string} for current payroll inspector banner message on the pde page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the issues only checkbox on the payroll inspector banner on the pde page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-inspector-banner-page",
      "../../../support/referencename-handler",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-inspector-popup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-inspector-popup-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "{string} issues are displayed on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First issue text is displayed as {string} on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Second issue text is displayed as {string} on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Third issue text is displayed as {string} on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Issue text {string} is displayed on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Issue text contains {string} on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "1 more issue residual text is displayed on payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} more issues residual text is displayed on payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Ignore issues button is displayed on the payroll inspector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Go back and fix button is displayed on the payroll inspector popup",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-inspector-popup",
      "../../../support/referencename-handler",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-modal-message-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-modal-message-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks ok button on the payroll popup modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button on the payroll popup modal if exists",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel button on the payroll popup modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the message text {string} is displayed on the payroll popup modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The message content {string} is displayed in the payroll popup modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the partial message text {string} is displayed on the payroll popup modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok button on the tax filing not setup for the check date modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok on the deductions not taken automatically for additional checks message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for Early Payroll modal and clicks to continue with regular payroll",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning message header {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning message text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Warning message containing text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on apply button in the hours and salary modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects pay both radio button in the hours and salary modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects pay only salary radio button in the hours and salary modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects pay only hours radio button in the hours and salary modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hours and salary modal header {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Cannot add row message containing text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "missing rates of pay for calculating overtime message header {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "missing rates of pay for calculating overtime message text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Enter hourly rates button in the missing rates of pay for calculating overtime modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Continue with payroll button in the missing rates of pay for calculating overtime modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on got it lets go button in the create reports package modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on download payroll reports package in view payroll reports package modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validation error message header {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validation error message text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validation error message containing text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button in the validation error modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "autogen deductions modal containing text {string} is displayed in pde",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button on autogen deductions modal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-modal-messages-page",
      "../../../pages/runMod/modal/early-payroll-modal.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-options-overflow-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-options-overflow-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies the More Payroll Options Overflow is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/payroll/payroll-options-overflow-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-preview-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-preview-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex closes the report to navigate back to payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the payroll preview report to navigate back to payroll preview page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-preview-reports-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-process-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-process-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/payroll/process-payroll"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payroll-summary-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks done button on the payroll summary page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks done button on the payroll summary page for non-retail client",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex confirms that the payroll summary page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to {string} report from the payroll summary page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Success header is displayed on the payroll summary page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payroll-summary-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "payrun-errors-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/payrun-errors-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the Payrun Errors page to load",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees generic error message when payroll is blocked",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects back button on Payrun Errors screen",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/payrun-errors",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "pde-employee-hotkey-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/pde-employee-hotkey-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex presses {string} hot key on the employee PDE page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/employee-pde-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "preview-payroll-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/preview-payroll-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex waits for the preview payroll page to load",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the payroll preview report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the liability report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the gl company preview report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the gl employee preview report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the payrments check report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex views the payments deposits report from the payroll preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex declines the approve payroll action by clicking No button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the commit process to complete",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the employee {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Pay stub message button on the Preview Payroll page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The paystub modal dialog is displayed on the Preview Payroll page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that location marker is successfully displayed for the employee {string} on preview payroll page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that location marker is not displayed for the employee {string} on preview payroll page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button to confirm finish later action on the preview payroll page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sem Reduction popup is displayed on the payroll preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Address tooltip contains text {string} on preview payroll page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/preview-payroll-page",
      "../../../pages/runMod/payroll/payroll-tooltips",
      "../../../pages/runMod/payroll/payroll-modal-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ssn-slider-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/payroll/ssn-slider-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the banner for Incorrect SSNs is displayed on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should display in the SSN banner on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the banner for Incorrect SSNs is not displayed on the employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the SSN slider is displayed on the Employee PDE page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "header {string} should display on the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "employee {string} should display on the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the success banner is displayed in the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should display in the SSN slider success banner",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should display in the SSN on file box on the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} should display in the new SSN field on the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the SSN warning dialog is displayed on the SSN slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the SSN warning dialog text {string} is displayed on the SSN slider",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/payroll/ssn-slider-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "terminate-contractor-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/personal-information/terminate-contractor-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Hire Date on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on rehire button on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful and clicks on OK on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful message on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button on rehire pop-up on Terminate Contractor Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on terminate button on Terminate Contractor Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/personal-information/terminate-contractor-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "terminate-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/personal-information/terminate-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects Hire Date on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination date on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Last Day Worked on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Type on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Employment Status on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Termination Description on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on rehire button on Terminate Employee Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies rehire pop-up message on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button on Terminate Employee Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful and clicks on OK on Terminate Employee Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save Successful message on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ok button on rehire pop-up on Terminate Employee Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on terminate button on Terminate Employee Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks cancel and verifies Terminate Employee dialog on Terminate Employee Page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/personal-information/terminate-employee-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "home-red-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/red/home-red-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex deletes Direct Deposit account",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Clicks on Add Contact button in Company details page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies Add new contact page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters new additional contact details and Click on save",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex Verifies new contact is saved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edit Additional Contact details",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex changes the contact details and saved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex delete the contact",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verify Additional Contact contact is deleted",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edit the W2Delivery address",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Edit W2Delivery address page is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edit the W2Contact information Firstname and save",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex edit the job {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex delete the job {string}",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/red/home-red-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "aegis_reports_steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/aegis_reports_steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Owner role on Send Securely modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on Send Securely modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review and Submit text on Send Securely modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email on Send Securely modal is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks send Securely button on send email modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close email sent modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks download dropdown on Payroll details report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next button on Send Securely email modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Send Securely on modal Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks email Send Securely close modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Send Securely on view report page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/aegis_reports_page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "billing-invoice-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/billing-invoice-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../../pages/runMod/reports-page/billing-invoice-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "build-your-own-reppackage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/build-your-own-reppackage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on build you own under the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build your own package text is displayed under the build your own page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build your own package heading select text is displayed under the build your own page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build your own package report selected zero text is displayed under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll reports to expand under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects tax with holding checkbox under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on company reports to expand under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects deduction summary checkbox under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on employee reports to expand under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select employee summary checkbox under the build your own page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build your own package report selected three text is displayed under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on expand all button under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on collapse all button under the build your own page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click select time period button under the build your own create page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select time period text is displayed under the build your own create page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter package name to create report package on report package creation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on create report package under build your own create package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Pay Stubs checkbox under Employee Reports on the Build Your Own Report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex expands Federal Tax Reports and Forms on the Build Your Own Report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects 940 Tax Return under Federal Tax reports on the Build Your Own Report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects 941 Tax Return under Federal Tax reports on the Build Your Own Report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Select a Time Period dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Last Year from Time Period dropdown on the Select Time Period page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Skip on the Save The Report Package Later to use again modal on the Build Your Own Report Package Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PDF radio button is displayed on report package creation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "PDF radio button is set to {string} on report package creation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Excel radio button is displayed on report package creation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Excel radio button on report package creation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Excel radio button is set to {string} on report package creation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alert {string} is displayed on report package creation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on download my report package under report package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Recent {string} generated my report package is displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on got it button on two package popup post report package generation on the report package page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/reports-page/buildyourown-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "earning-record-report-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/earning-record-report-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Earnings Record report viewer is displayed under report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "earnings record Edit Filter page is displayed under the report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee title is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate download button under earnings record report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate {string} {string} under earnings record report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate let me choose button is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select text is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select popup is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee seacrh is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate selected employee is displayed under earnings record report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validate Employee label {string} is displayed with selected employee value as {string}",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "favorite-report-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/favorite-report-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on my favorite tile on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "My Favorites tile is empty on the Reports home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears favourite tile if populated on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Favorite icon of Payroll Details report on the popular reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Payroll report package is displayed on the popular reports tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Favourite Icon of the Payroll Report Package on the popular reports tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Single Reports tile on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Custom Reports on the single reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the custom report under my favorite on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Details report is listed under Single Reports in My Favorites tile on the Reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Reports Package is listed under Packages in My Favorites tile on the Reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report is listed under Custom reports in My Favorites tile on the Reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on favorite icon of Payroll Summary report on the popular reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the show more and show less feature on the my favorite tile",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on run home logo on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Favourite Icon of the Custom Report Package under Custom Reports",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes Payroll Details report from My Favorites tile list",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes Payroll Reports Package from My Favorites tile list",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes Custom Report from My Favorites tile list",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/single-reports-page",
      "../../../pages/runMod/reports-page/myfavorites-page",
      "../../../pages/runMod/reports-page/popular-reports-page",
      "../../../pages/runMod/search/search-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "fiscal-single-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/fiscal-single-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Fiscal single reports banner is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Payroll Details Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Payroll Summary Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Earnings Record Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Payroll Liability Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Earnings by Department Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Garnishment Service Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Deduction Summary Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Retirement Contibution Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Partial Missed Deduction Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Payment check Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Payment Direct Deposit Report is displayed on Single Reports Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Fiscal tag next to Workers Comp Report is displayed on Single Reports Page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/fiscal-single-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "fiscal-year-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/fiscal-year-reports-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/fiscal-year-reports-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "generated-reppackage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/generated-reppackage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex click on generated report package on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generated Report packages body displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the all the reports names under generated packages displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on download PDF button in the Generated Reports Package modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies downloaded document",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close on the generated report package modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies show more and show less feature for Generated report package on the reports home landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/generated-reppackage-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "ng-pages-reports-search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/ng-pages-reports-search-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex click on view report close button to close the report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Earning Record in Reports in the search results on hr landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Earning Record Reports page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Settings Left Menu icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks employee in the employee page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/ng-pages-reports-search-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "pay-stub-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/pay-stub-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate pay stub edit filter page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Below drop downs headings under pay stub edit page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate download button under pay stub report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Option {string} is displayed under download button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate {string} label is displayed with selected value as {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pay stubs report viewer is displayed on report viewer page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-details-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/payroll-details-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Details Reports page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Details report viewer is displayed under report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "payroll details Edit Filter page is displayed under the report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee title is displayed under payroll details report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate download button under payroll details report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate let me choose button is displayed under payroll details report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select text is displayed under payroll details report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select popup is displayed under payroll details report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee seacrh is displayed under payroll details report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate selected employee is displayed under payroll details report viewer edit page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/payroll-details-page",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-liability-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/payroll-liability-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Liability Reports page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Liability report viewer is displayed under report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll liability Edit Filter page is displayed under the report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee title is displayed under payroll liability report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate download button under payroll liability report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate {string} {string} under payroll liability report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate let me choose button is displayed under payroll liability report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select text is displayed under payroll liability report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select popup is displayed under payroll liability report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select employee seacrh is displayed under payroll liability report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate selected employee is displayed under payroll liability report viewer edit page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/payroll-liability-page",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-report-package-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/payroll-report-package-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validate selected reports text under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate payroll detail tile is displayed under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate payroll liability tile is displayed under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate payroll summary tile is displayed under setup payroll package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on create payroll report package under setup payroll package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on im done on setup payroll package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate that the status of Report Package is active under report package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate add or remove reports displayed under report package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate reports included text displayed under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on add or remove reports under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on company reports under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on deduction summary report under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on run for next payroll forward under setup payroll package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on update payroll report package under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate update package text under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate package summary sub text under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate report package availability on reports home under setup payroll package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on go back edit under setup payroll package",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Service user seeing the delete option under reports package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Report Package tile on the reports package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate delete popup is displayed under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Confirm from delete popup on the reports package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate confirm popup text is displayed under report package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate confirm popup subtext is displayed under report package landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on delete button under report package landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate setup payroll report package under report package landing page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/payroll-report-package-page"
    ],
    "pageObjects": []
  },
  {
    "file": "payroll-summary-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/payroll-summary-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Summary Reports page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Summary report viewer is displayed under report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Edit filter is displayed on report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Summary Edit Filter page is displayed under the report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate below drop down headers under edit filter page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select employee label is displayed on report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Download dropdown button is displayed on report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate {string} {string} under payroll summary report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Let me choose button is displayed on report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex validate select text is displayed under payroll summary report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select employee popup is displayed on report viewer edit page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select employee search is displayed on select employee popup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} label is displayed on report viewer page in payroll summary report",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} details are displayed on report viewer page in payroll details report",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} details are displayed on report viewer page in earnings record report",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee selected is displayed on report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee label is displayed on report viewer page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee label is displayed on report viewer page in payroll summary report",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee label is displayed on report viewer page in earnings record report",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on download as Excel - New button on report view page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/reports-page/payroll-summary-page",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "popular-reports-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/popular-reports-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on popular reports on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Details report is displayed on the popular reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The report {string} is displayed under the Single Reports in Popular Reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Reports Package is displayed under Packages in the Popular Reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Single Reports section is displayed in the Popular Reports tile on the Reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Packages section is displayed in the Popular Reports tile on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} section is displayed on the Popular Reports Tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The report {string} is displayed under the Packages in Popular Reports tile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Show all Reports button is displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Show all Reports on the reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Payroll report package from popular on reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Pre Selected reports tile is displayed on Payroll report package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X to close the Payroll Reports package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation Modal Title is displayed on Workers Compensation Audit package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X to close the Workers Compensation Audit package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Quarterly Reports package from Popular Reports on reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies popup text is displayed on quarterly report package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Modal Title is displayed on Quarterly Reports package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Got It on the Quarterly Reports popup on Quarterly Reports package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X to close the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yearly Reports package from popular on reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Got It on the Year-End Reports popup on Year-End Reports package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Year-End Reports Modal Title is displayed on Year-End Reports package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X to close the Year-End Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Got It and Lets Go button on the Year-End Reports popup on Year-End Reports package page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/popular-reports-page",
      "../../../pages/runMod/reports-page/payroll-report-package-page",
      "../../../pages/runMod/reports-page/workercomp-auditpackage-page",
      "../../../pages/runMod/reports-page/quarterly-reportpackage-page",
      "../../../pages/runMod/reports-page/yearend-reportpackage-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "quarterly-reppackage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/quarterly-reppackage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Quarterly reports under the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Package heading select text is displayed under the Quarterly Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Package report selected text is displayed under the Quarterly Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects tax with holding checkbox under the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on company reports to expand under the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects deduction summary checkbox under the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on expand all button under the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on collapse all button under the Quarterly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks select time period button under the Quarterly Reports Package create page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select time period text is displayed under the Quarterly Reports Package create page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter package name to create Quarterly Reports package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on create report package under Quarterly Reports create package page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/quarterly-reportpackage-page",
      "../../../pages/runMod/reports-page/buildyourown-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "reports-home-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/reports-home-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex Opens Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on client with MCA login",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Single Reports tile is displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Report Package tile is displayed on the Reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report tile is displayed on the Reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report tile should not displayed on the Reports home landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Custom Report tile on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "My favorite tile is displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Popular reports tile is displayed on the reports home landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generated Report package tile is displayed on the reports home landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/reportsbase-page",
      "../../../pages/runMod/reports-page/single-reports-page",
      "../../../pages/runMod/reports-page/popular-reports-page",
      "../../../pages/runMod/reports-page/generated-reppackage-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "reports-hometile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/reports-hometile-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/reports-page/reports-home-tile",
      "../../../pages/runMod/reports-page/report-editfilter-page"
    ],
    "pageObjects": []
  },
  {
    "file": "reports-package-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/reports-package-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Report Packages Title is displayed on Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "What would you like to do Header is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build Your Own Report Package subheader is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build Your Own Package tile is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build Your Own Package Tile label is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build Your Own Package Tile subtext is displayed on the Reports Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Build Your Own Package Tile Icon is displayed on the Reports Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation Audit Tile is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation Audit Tile label is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation Audit Tile subtext is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers Compensation Audit Tile Icon is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quartley Reports Tile is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Tile label is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Tile subtext is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarterly Reports Tile Icon is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Manage your scheduled payroll report package text is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Settings Icon is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Report Packages header is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Report Packages subtext is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Report Packages Tool Tip icon is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Setup Payroll Package button is displayed on the Report Packages page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/report-package-landing-page",
      "../../../pages/runMod/reports-page/payroll-report-package-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "reports-search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/reports-search-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Payroll Summary in Reports is displayed in search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Payroll Summary in Reports in the search results on RunMod homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Details in Reports is displayed in search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Payroll Details in Reports in the search results on RunMod homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll Liability in Reports is displayed in search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Payroll Liability in Reports in the search results on RunMod homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Billing Invoices in Reports is displayed in search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selected Billing Invoices in Reports in the search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the accept button on the Opening in New Browser Tab modal message on the Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create Report Packages in Reports is displayed in search results on RunMod homepage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selected Create Report Packages in Reports in the results on RunMod hompage",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/search-page",
      "../../../pages/runMod/reports-page/reportsbase-page"
    ],
    "pageObjects": []
  },
  {
    "file": "run-report-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/run-report-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex is on W-2s and 1099s report page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/reports-page/run-report-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "single-report-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/single-report-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on search on Single Page reports and enters {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in the search results on the Single Reports landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Single Reports page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax forms information label is displayed on the Single Report page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Tax Forms link on the single reports landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Forms page is displayed from Single Reports",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the Single Reports page landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Custom Report Tile is Displayed on the Single Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Expand All on the Single Reports page landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Misc section on the Single Reports page landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on W-2 Preview in the Misc section on the Single Reports page landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The report {string} is displayed under the Single Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} under the Single Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed under report viewer page in single reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on W-2 and 1099s in the Taxes reports section on the Single Reports page landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex expands the {string} section on the Single Reports page landing page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/single-reports-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-report-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/tax-report-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Tax reports tab in taxes page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax reports page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Q4 button in Tax reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Done button in Tax reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Q4 Tax reports displayed in Tax reports page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is on Q4 Tax reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Download icon for W2 document in Tax reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Document types pop-up window is displayed on Tax reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} format from document types pop-up window on Tax reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Go button in document types pop-up window on W-2s and 1099s report page on Tax reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Download icon for 1099 document in Tax reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner text {string} is displayed for 1099 client for 2023 year in Tax reports page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/reports-page/tax-report-page",
      "../../../pages/runMod/reports-page/run-report-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "worker-comp-reppackage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/worker-comp-reppackage-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Worker Comp report Package under the Report Packages page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worker Comp report Package heading select text is displayed under the Workers Compensation page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worker Comp report Package report selected seven text is displayed under the Workers Compensation page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on payroll reports to expand under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects tax with holding checkbox under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on company reports to expand under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects deduction summary checkbox under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Worker Comp report package selected nine text is displayed under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on expand all button under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on collapse all button under the Worker Comp report Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks select time period button under the Worker Comp report Package create page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select time period text is displayed under the Worker Comp report Package create page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter package name to create Worker Comp report package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on create report package under Worker Comp report Package create package page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/workercomp-auditpackage-page",
      "../../../pages/runMod/reports-page/buildyourown-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "yearly-reppackage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/reports-steps/yearly-reppackage-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Yearly Reports Tile is displayed on the Report Packages page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yearly Reports under the Report Packages page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Got It on the Yearly Reports popup on Yearly Reports package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Yearly Reports Modal Title is displayed on Yearly Reports package page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Yearly Reports Package report selected text is displayed under the Yearly Reports page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects tax with holding checkbox under the Yearly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on company reports to expand under the Yearly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects deduction summary checkbox under the Yearly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on expand all button under the Yearly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on collapse all button under the Yearly Reports Package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks select time period button under the Yearly Reports Package create page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Select time period text is displayed under the Yearly Reports Package create page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enter package name to create Yearly Reports package",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on create report package under Yearly Reports create package page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Got It on the wholesale Yearly Reports popup on Yearly Reports package page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/reports-page/yearend-reportpackage-page",
      "../../../pages/runMod/reports-page/buildyourown-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "rs-home-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/retirement/rs-home-page-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/retirement/rs-home-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "certification-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/runcertification/certification-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "The report csv {string} is appended for {string} Sl No {string} brand",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "The report csv {string} is appended with brand",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "The scheduled brand to run payroll is selected",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/runcertification/certification-page",
      "../../../support/csv-processor",
      "../../../support/gmail/GmailApiManager",
      "../../../pages/runMod/operationsHub/payrun-status-and-resend-page",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "docvault-Landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/runcertification/docvault-Landing-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/runcertification/docvault-page"
    ],
    "pageObjects": []
  },
  {
    "file": "advanced-search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/advanced-search-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in advanced search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Show all results for search term link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is navigated to ALL tab on advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to view, select, and apply category filters under ALL tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to reset all applied category filters under ALL tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to view, select, and apply category filters under Help and Support tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to reset all applied category filters under Help and Support tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex opens help panel by clicking on first help article for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to ALL tab on advanced search page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to help and support tab on advanced search page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to quick links tab on advanced search page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to HR content tab on advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be navigated to help articles related to {string} in advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex applies {string} filter under ALL tab on advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex sees full screen modal styling on advanced search page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in advanced search with random delays between keystrokes",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tab {string} is viewed by default on advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in search bar on advanced search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search suggestion {string} should be in displayed in search results on advanced search page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on suggestion in search results on advanced search page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/advanced-search-page"
    ],
    "pageObjects": []
  },
  {
    "file": "Embedded-payroll-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/Embedded-payroll-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Help and Support icon on Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Help & Support from result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help & Support window is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/Embedded-Billingsgate-page.js"
    ],
    "pageObjects": []
  },
  {
    "file": "faq-integration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/faq-integration-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "FAQ results is displayed in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ section is NOT displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Title with highlighted {string} is displayed in FAQ results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex expands FAQ item {string} in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ item {string} should be expanded in H&S",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Hide FAQ link in advance search H&S tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Show FAQ section should be displayed in advance search Help & support tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Show FAQ link should be displayed in advance search Help & support tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ section is hidden in advance search Help & support tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ section should be shown in advance search Help & support tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Show FAQ link in advance search H&S tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hide FAQ link should be displayed in advance search Help & support tab",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Show more link in expanded FAQ item {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "List of articles are displayed in help and support panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Title with {string} is displayed in doc list if a list of articles is displayed in help and support panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Either a specific document or a list of articles is displayed in help and support panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A specific document is displayed in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on back in help panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates FAQ results using TAB and RETURN keys in {string} search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates FAQ results using UP and DOWN and RETURN keys in {string} search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Show more link in expanded FAQ item using RETURN key",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help and Support section is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Help articles is displayed in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Feedback icons are displayed as active on item {string} in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Both feedback icons should be inactive on item {string} in H&S",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} feedback icon on item {string} in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} feedback icon should be circled on item {string} in H&S",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ {string} hyper link is displayed in FAQ section on {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "FAQ {string} hyper link is NOT displayed in FAQ section on {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on FAQ {string} hyper link in FAQ section on {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A generic landing page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A generic external page is displayed",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/faq-integration-page",
      "../../../pages/runMod/search/help-panel-page"
    ],
    "pageObjects": []
  },
  {
    "file": "help-panel-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/help-panel-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex should be able to see all expected elements in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in help panel search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see help articles related to {string} in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see expected message for no results in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on show more button in help panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to an article by clicking on a related link in help panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to a previous article by clicking on back in help panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to an article by clicking on a result in help panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to an article by clicking on an external link in help panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on a result in the help panel if a list of articles is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search suggestion {string} in displayed in search results in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on suggestion in search results in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on a hyper link for {string} in help and support panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message is displayed for unentitled user in help and support panel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No error message is displayed for unentitled user in help and support panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on first help and support article for {string} - Omnibar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Hyper link for {string} is displayed in help and support panel",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/help-panel-page"
    ],
    "pageObjects": []
  },
  {
    "file": "hr-integration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/hr-integration-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex should be able to see {string} related to {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex should be able to click and download {string} related to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to access {string} related to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to access non-download poster related to {string} in help panel",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in HR uber search bar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search suggestion {string} is displayed in search results on HR uber search bar",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on suggestion in search results in HR uber search bar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed on HR uber search bar",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on first search result in HR uber search bar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in Recent Search in HR uber search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears search history in HR uber search bar",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/hr-integration-page"
    ],
    "pageObjects": []
  },
  {
    "file": "is-integration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/is-integration-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex should be able to see {string} results related to {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on result type {string} info for {string} on Omnibar search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on result type {string} info for {string} on advanced search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on result type {string} info for {string} on Header search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to click on result for {string} and navigate to {string} page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/is-integration-page"
    ],
    "pageObjects": []
  },
  {
    "file": "keyboard-navigation-support-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/keyboard-navigation-support-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is able to navigate results using {string} key",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to navigate to specific page using {string} key",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to navigate results using a combination of {string} keys",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/search/keyboard-navigation-support-page"
    ],
    "pageObjects": []
  },
  {
    "file": "login-search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/login-search-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/common/practitioner-login",
      "../../../pages/common/associate-login",
      "../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "non-search-journey-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/non-search-journey-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex navigates to {string} landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to open help panel by clicking on help button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to {string} setup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to open help panel by clicking on help icon",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects guided onboarding option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects company contractor option",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to {string} tab",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to open help panel with relevant content via tool tip for Withholding status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to open help panel with relevant content via tool tip for Statutory employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to open help panel with relevant content via tool tip for Basis of pay",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to close help panel and switch back to {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to close help panel and switch back to edit wizard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to {string} subpage",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to {string} tab in setup flow",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects {string} as state where the employee lives",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex closes modal and navigates to landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to delete abandoned new hire setup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "State filter field defaults to {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex changes state filter to {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in HR contextual search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Relevant {string} results are displayed with expected styling",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is able to click on icon and download HR content",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/non-search-journey-page",
      "../../../pages/runMod/search/hr-integration-page"
    ],
    "pageObjects": []
  },
  {
    "file": "search-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/search-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Journey page search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in NG search in NG Header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see federal tax form {string} in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see tax form {string} in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able click {string} and navigate to quarter selection page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to Company landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to find any search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Run Payroll",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens the Off Cycle Payroll page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Off Cycle Payroll tile should be displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to navigate to Run Payroll",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Tax page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to first employee {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Employee info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to 1099 info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to access Employee pages",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to access Contractor pages",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to find any employee",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to find any contractor",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to home page from quarter selection page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to first contractor {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the contractor action links for {string} {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the employee action links for {string} {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the employee action links for HR Admin for {string} {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to search for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to contractor page and verify contractor {string} {string} {string} but not able to see action links",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to employee page and verify employee {string} {string} {string} but not able to see action links",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to search for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify help center action link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to the help center via help center action link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to see help center action link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the help support article for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify info message on contractor page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify info message on employee page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Employee directory page for no employees",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify top suggestions when click on omnibar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify entitlement check for {string} and Alex should not be able to access any GL page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify run payroll navigation for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify synonym result for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not see the visit help center link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "ADP Marketplace menu should not be displayed in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Learning Management menu should not be displayed in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify help support search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to search result {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to {string} page when clicks on {string} - header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate back to {string} page window when clicks on {string} - header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to {string} page when clicks on {string} - sideNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to {string} page when clicks on {string} - topNav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to Company landing page - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see the Frequent Actions in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks the Run Classic Header Search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks the Run Classic Header Search in help popup window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks run classic header search spy glass with search term",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks run classic header search spy glass without search term",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks the page content",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in NG Header search and wait for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see {string} in the search results - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see {string} in the search result - NG Header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to see anything",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see \"Need Help?Visit Help Center\" link at bottom",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not be able to see any site-content results - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to {string} page in a child window when clicks on {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex opens Help and support popup window by navigating to first help article",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex opens Help and support popup window by navigating to first help article for {string} - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex opens Help and support popup window by navigating to first help article for {string} - Omnibar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex opens Help and support popup window by navigating to first help article for {string} - Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in classic header search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in classic header search in help popup window",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate back to the help center on parent page via help center action link",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify info message on no employee or 1099s found when clicks on {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the employee action links for {string} {string} - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to verify the contractor action links for {string} {string} - Classic",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects {string} IID",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects {string} IID for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex closes employee edit window and navigates to home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigates to advanced search page by clicking on show all results link",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in omnibar search with random delays between keystrokes",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in header search with random delays between keystrokes",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in omnibar search with random delays between words",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in header search with random delays between words",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to see relevant results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters IID in installation selector",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters IID {string} in installation selector",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to content page with menuID {string} from search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in header search with random delays between words and wait for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Destination page with content {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Destination page with title {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent item with menuId {string} at {string} place is displayed in search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in omnibar search with random delays between words and wait for Help & support",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent items with menuIds {string} are displayed in order in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent item with menuId {string} is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent item with menuId {string} is NOT displayed in search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in NG search Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in search and wait for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to Employee {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed as scrolling text in omnibar",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Smart action {string} link for {string} {string} is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Smart action {string} profile link for {string} {string} is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee smart action {string} link is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to {string} status page with content {string} for {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Default employee smart action link for {string} is displayed in search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on default employee smart action link for {string} in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to top Recent Search page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Recent Search is displayed in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in Recent Search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search suggestion {string} should be in displayed in search results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on suggestion in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in OMNI or NG header search bar",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} smart action link for {string} {string} in search results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} smart action profile link for {string} {string} in search results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on employee smart action link in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} profile page for {string} at {string} step is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "NO Smart action {string} profile link for {string} {string} is displayed in search result",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee selector popup is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee selector popup is NOT displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} filter is displayed in the Employee selector popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} in the Employee selector popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex removes {string} filter in the Employee selector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in the Employee selector popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Additional employee smart action {string} {string} link is displayed in search result",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on additional employee smart action {string} {string} link in search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} change status page for {string} with {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "No employee or contractor in the results of Employee selector popup",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on search bar",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on search bar in NG Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clear search bar in NG Header",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Smart action Employee or Contarctor earnings {string} link is displayed in search results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Employee or Contarctor earnings {string} smart action link from search results",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Smart action Employee Tax Info {string} link is displayed in search results",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Employee Tax Info {string} smart action link from search results",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../pages/runMod/search/search-page",
      "../../../pages/common/installation-selector-page"
    ],
    "pageObjects": []
  },
  {
    "file": "login-shortcuts-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/shortcuts/login-shortcuts-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex is logged in as a Owner Shortcuts",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../../pages/common/practitioner-login",
      "../../../../support/credentials-manager"
    ],
    "pageObjects": []
  },
  {
    "file": "shortcuts-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/search/shortcuts/shortcuts-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex's shortcuts are default",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex's TopNav shortcuts are default",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Shortcut Search",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} shortcut",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should be able to navigate to People landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Shortcuts should be in Edit mode",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Doc Vault",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "5 or less suggestions with header-Suggestions and Search bar are displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Delete icon is NOT displayed for {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save button is displayed in Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add Shortcut",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not get any suggestions",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should get 5 or less suggestions",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} suggestion",
        "async": true
      },
      {
        "type": "When",
        "pattern": "{string} is displayed in Edit mode in shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Review Tax Documents as 4th shortcut",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex deletes all shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Save button is disabled in Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save with one shortcut",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex verifies Next Payroll as the only Shortcut",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Shortcuts Header and Edit button with pencil icon",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Employee Shortcut from Top Nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Edit Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should verify 4 icons with dashed borders and x mark in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Doc Vault in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should verify 5 or less suggestions with header-Replace \"{string}\" and Search bar",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete Add Employee in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies there are 3 shortcuts in Top Nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel in Top Nav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Add shortcut appears",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add Shortcut in Top Nav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should not get any suggestions in Top Nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex verifies Next Payroll as 5th shortcut in Top Nav",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete Review Tax Documents in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks delete {string} in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel in Top Nav to Remove HR411",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} as {string} th shortcut in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex deletes all shortcuts in Top Nav",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies Save is disabled In Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex leaves Shortcuts floating pane",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex verifies Next Payroll as the only Shortcut in Top Nav Shortcuts",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Any Shortcut in edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent item with menuId {string} at {string} place is displayed in shortcut search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SiteContent items with menuIds {string} are displayed in order in shortcut search",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} shortcuts are displayed in Top Nav Shortcuts edit mode",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is Not displayed in Shortcuts",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is displayed in Shortcuts",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "@cucumber/cucumber",
      "../../../../pages/runMod/search/shortcuts/shortcuts-page"
    ],
    "pageObjects": []
  },
  {
    "file": "serviceTech-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/serviceTech/serviceTech-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/serviceTech/serviceTech-page"
    ],
    "pageObjects": []
  },
  {
    "file": "address-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/address-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex updates company legal name and Save",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Edit",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies address overview page is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigate to Address details for company legal",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-address-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "dataexchange_events-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/dataexchange_events-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex verifies things to do title and clicks on view all notification",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "notification slider is displayed on home page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-dataexchange_events-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "futaexempt-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/futaexempt-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects FUTA tax type in federal jurisdiction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on select year dropdown in Tax Exempt",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex able to see seven years",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-futa_exempt-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "jurisdiction-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/jurisdiction-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex click on {string} sit ein",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates SIT EIN",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reenter the SIT EIN and Confirm",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK on pop-up",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on {string} sui ein",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates SUI EIN",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reenter the SUI EIN and Confirm",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects localservices from juris dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on {string} LST ein",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates LST EIN",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex reenter the LST EIN and Confirm",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} sit ein is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex save ein and verifies Confirm EIN popup is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} sui ein is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} LST ein is opened",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates StateWise SIT and SUI EIN",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks ok on Tax Amendments slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on {string} ubi ein",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex updates ubi EIN",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies {string} ubi ein is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex save ubi ein",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-jurisdiction-page",
      "../../../pages/runMod/tax/tax-er-category-update-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-1099-forms-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-1099-forms-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Create Image button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Form stock type dropdown field is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create PDF To Print button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to CSV button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to CSV in IRS IRIS template button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to TXT in IRS FIRE template button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Close button is enabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects non payroll year from Year dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous payroll year is selected in Year dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Forms Alignment dropdown field is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Form stock type dropdown field is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create PDF To Print button is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to CSV button is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to CSV in IRS IRIS template button is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to TXT in IRS FIRE template button is disabled in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Close button in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Home page is displayed upon clicking Close button in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects a value which has employee data {string} from Forms stock type dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create Image button to load the employee data grid in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee data grid is displayed for the selected value from Forms stock type dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects a value which has no employee data {string} from Forms stock type dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee data grid is not displayed for the selected value from Forms stock type dropdown in 1099 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} message is displayed for previous payroll year in 1099 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create PDF To Print button in 1099 Forms page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/tax/tax-w2-forms-page",
      "../../../pages/runMod/tax/tax-1099-forms-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-ein-registration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-ein-registration-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Service fee popup is Displayed in Id Registration Application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Application exists popup is Displayed in Id Registration Application",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Adding your state autostate slider is displayed on the Tax info setup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Business Address Zip code is displayed as {string} in Id Registration Application",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-ein-registration-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-enhanced-contractor-setup-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-enhanced-contractor-setup-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-enhanced-contractor-setup-page.js",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-Events-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-Events-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-home-page",
      "../../../pages/runMod/tax/tax-events-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-ffab-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-ffab-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-home-page",
      "../../../pages/runMod/tax/tax-ffab-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-landingpage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-landingpage-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Tax Forms Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Forms subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Reports Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Reports subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Notices Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Notices subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Amendments Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Amendments subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Profile Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Profile subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Id Registration Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Id Registration subtext {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Year End Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax W2 Tile {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax W2 Status {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Quarter title {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Quarter payroll heading {string} is displayed in Tax landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Banner {string} is displayed in Tax Returns page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks View Current Qtr returns in Tax landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks close icon in Tax Returns page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarter Gross Wages {string} is displayed in Tax Landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Quarter withheld label {string} is displayed in Tax Landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Close button is displayed in Tax Profile Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Current Quarter title is displayed in Tax Returns page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous Quarter title is displayed in Tax Returns page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "View title {string} is displayed in Tax Returns page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Edit button is displayed in Tax Returns page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "View title {string} is displayed in Tax Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Edit button is displayed in Tax Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Current Quarter title is displayed in Tax Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous Quarter title is displayed in Tax Reports page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The Tax Landing Page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Tax Id Registration Tile is Not displayed in Tax landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Local Tax - Newark Edit button in Tax profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} Ein value is displayed as {string} on Tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Validate {string} {string} tax Ein value is displayed as {string} on Tax info page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} row should not be present on Tax info page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-home-page",
      "../../../pages/runMod/tax/tax-profile-page",
      "../../../pages/runMod/tax/tax-returns-reports",
      "../../../pages/runMod/tax/tax-landing-page",
      "../../../pages/runMod/tax/tax-notices-page",
      "../../../pages/runMod/tax/tax-breakdown-page",
      "../../../pages/runMod/tax/tax-amendments-page",
      "chai",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-paperless-1099-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-paperless-1099-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/tax/tax-paperless-1099-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-profile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-profile-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex changes Business Tax ID Number to {int} in Tax profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button in Tax profile page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/tax/tax-profile-page"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-sit-sui-autostate-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-sit-sui-autostate-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Modal for state successfully being set up by autostate for Company Tax info is displayed on Employee setup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal for adding tax state with fee is displayed on Employee Tax setup page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "A quick question regarding Withholding or State Identification Number modal is displayed on the Employee Tax setup page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Yes on the modal regarding Withholding or State Identification Number modal on the Employee Tax setup page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Deposit Frequency {string} on the Adding your State Slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves the changes on the Adding your State Slider",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The {string} state tax profile is displayed on the Tax Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} state on the Tax Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SUI tax rate is displayed on the {string} Tax Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex, if the Modal appears, clicks Already Submitted TPA button on the Power of Attorney form modal on the Tax Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No on paying State Disability Tax on the Autostate Slider",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No on paying Family Leave Tax on the Autostate Slider",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../apis/atp/ATP-runner",
      "fs",
      "path",
      "../../../pages/common/associate-login",
      "../../../pages/runMod/tax/tax-sit-sui-autostate-page",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "tax-w2-forms-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/tax-w2-forms-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Taxes icon from left navigation bar of Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create Image button is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Form stock type dropdown field is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create PDF To Print button is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to Excel in CSV button is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to txt in IRS format button is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Close button is enabled in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects non payroll year from Year dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous payroll year is selected in Year dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Forms Alignment dropdown field is disabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Form stock type dropdown field is disabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Create PDF To Print button is disabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to Excel in CSV button is disabled in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Export to txt in IRS format button is disabled in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects a value which has employee data {string} from Forms stock type dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create Image button to load the employee data grid in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee data grid is displayed for the selected value from Forms stock type dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects a value which has no employee data {string} from Forms stock type dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee data grid is not displayed for the selected value from Forms stock type dropdown in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} message is displayed for previous payroll year in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Close button in W2 Forms page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Home page is displayed upon clicking Close button in W2 Forms page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Create PDF To Print button in W2 Forms page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/tax/tax-w2-forms-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "vermont-ccc-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/vermont-ccc-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex clicks New Jurisdiction",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "selects VT state and clicks on next button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies VT CCC field in add jurisdiction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies VT CCC_ER field in add jurisdiction page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks cancel button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex selects Yes in exempt field and clicks on save button",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-vermont-ccc-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "workerscompensation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/tax/workerscompensation-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex Searches and selects Workers compensation",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Add",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex navigate to Workers Compensation Classification page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Workers compensation info page is opened",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex enters character",
        "async": true
      },
      {
        "type": "When",
        "pattern": "selects and delete the class code",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "class {string} is not displayed on workers comp info page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/tax/tax-workerscompensation-page",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "adp-tk-tkp-ng-time-tracking-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/adp-tk-tkp-ng-time-tracking-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Time tracking heading is displayed on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "capture type field is displayed and capture type should be Click to capture start work or end work for hourly employee on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the Time zone field is displayed on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time field should be no for Salary Non-exempt employee on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time field should be no for Salary exempt employee on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validates which manager supervises the employee time field should be NA on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Is this employee a manager who supervises time for other employees field should be No on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "capture type field is displayed and capture type should be Enter total hours worked on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time field is displayed and Time field should be yes for hourly Contractor on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "capture type field is displayed and capture type should be Click to capture start work or end work for hourly contractor on the Time tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time field is displayed and Time field should be no for amount Contractor on the Time tracking page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex select {string} from the drop down {string} on the Time Tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "stop time tracking warning modal with title {string} is displayed on the Time Tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "stop time tracking warning modal with description {string} is displayed on the Time Tracking page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "validates Is Meal Waived field is displayed on time tracking page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/adp-tk-tkp-ng-time-tracking-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "adptk-bbqtimecard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/adptk-bbqtimecard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the leftnav button on the BBQ Time card page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Added the Monday time pair for one employee on BBQ Time card page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click on the Review and complete in wizard",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/adptk-bbqtimecard-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "adptk-reviewtimecard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/adptk-reviewtimecard-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex clicks on the Continue Entering Payroll Info Button on the Timecard header popup message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the Update Timecard Data Button on the Timecard header popup message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Time card header popup message on the Review timecard Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex click the company contractor in payroll page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex is on Review Time Card page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks and validate the direct deposit page info",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks the pennsylvania state in tax info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on finish later button on the employee PDE page for adtk client",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/adptk-reviewtimecard-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "adptlm-viewtimecard-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/adptlm-viewtimecard-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks the startpayroll",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the employee on people page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex toggles Timecard in Time Tracking page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button in Time Tracking page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex dismisses warning modal if visible in Time Tracking page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../../pages/runMod/time/adptlm-viewtimecard-pages"
    ],
    "pageObjects": []
  },
  {
    "file": "dealer-services-import-timesheet-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/dealer-services-import-timesheet-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the payfrequency from dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears Popup and deletes previous import for new timesheet import",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Delete Previous Import if any existing records present",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Choose File for Import timesheet",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the import pay data Button on the paydataimport page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/dealer-services-import-timesheet-page",
      "../../../pages/runMod/time/dealer-review-time-page",
      "@cucumber/cucumber",
      "../../../support/credentials-manager",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "dealerservices-importtimesheet-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/dealerservices-importtimesheet-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects the payfrequency from dropdown",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clears popup for new timesheet import",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on DeletePreviousImport if any existing records present",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the Choose File for Import timesheet",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the importpaydataButton on the paydataimport page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/dealerservices-importtimesheet-page",
      "../../../pages/runMod/time/dealer-reviewtime-page",
      "@cucumber/cucumber",
      "../../../support/credentials-manager",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "Enableadptkfeature-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/Enableadptkfeature-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on ADP Timekeeping on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigate to the home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex closes the X button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ADP Timekeepingplus on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Disables the ADP Timekeeping on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex Disables the ADP Timekeepingplus on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on ADP Time& Attendance on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex disables ADP Time& Attendance on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time Sheet Import feature on Features Overview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex disables Time Sheet Import feature on Features Overview page",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/Enableadptkfeature-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "gts-download-template-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/gts-download-template-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the gotoimport button on the uploadFile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the cancel button on the downloadtemplate page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the download instruction link on the download template page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Employee code Report Header on the download template page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Employee ID template on the downlaod template page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Clock ID Template  on the download template page is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/gts-download-template-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "gts-importtimesheet-uploadfile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/gts-importtimesheet-uploadfile-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks the upload File for the Import timesheet",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the skipimport button on the uploadFile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the cancel button on the uploadFile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Download Template button on the uploadFile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies that the Add another ImportTimesheet Title Header on the upload page is displayed",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/gts-importtimesheet-uploadfile-page",
      "@cucumber/cucumber",
      "chai",
      "child_process",
      "path",
      "fs",
      "../../../support/credentials-manager",
      "../../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "gts-reviewtime-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/gts-reviewtime-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on the importoptionsButton on the reviewtime page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the combineimporteddatawithpayrolldata button on the reviewtime page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex clicks on the FinishLaterButton on the reviewtime page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex chooses the continueworkingButton on the discardimporteddata pop up message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex chooses the removeimporteddataButton on the discardimporteddata pop up message",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the discardimporteddata Button on the review timecard page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Cancel Button on the review timecard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex chooses the continueworkingButton from the cancel popup message",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex chooses the Leave without Saving option from the cancel popup message",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/gts-reviewtime-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "Time-important-notification-for-adptk-adptkplus-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/Time-important-notification-for-adptk-adptkplus-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for adptkp enable",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for adptk enable",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex opens an IID as Associate user for Time sheet import feature enable",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time keeping is ready in Top things to do is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Approve your setup in Top things to do",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time keeping is ready in Notifications tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review Time Settings button in Notifications tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time keepingplus is ready in Top things to do is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time keepingplus is ready in Notifications tab is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Helpline number in Notifications tab is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on back button beside Notifications",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on X button beside Notifications tab",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/Time-important-notification-for-adptk-adptkplus-page",
      "@cucumber/cucumber",
      "chai",
      "fs",
      "path",
      "path",
      "path"
    ],
    "pageObjects": []
  },
  {
    "file": "time-landing-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/time-landing-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex verifies the Time header is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Settings Icon is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Time Management Dashboard is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Team Schedule container is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Timecards container is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Location Tracking container is displayed on the Time page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Time Reports container is displayed on the Time page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Time Management Dashboard",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Time Management Page Header is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Team schedule menu from the Time Landing Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex closes the Manage Schedule page by clicking on the X button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Timecard menu from the Time Landing page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Location Tracking menu from the Time Landing page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Location Tracking Header is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Time reports menu from the Time Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex verifies the Time reports header from the Reports Landing Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex closes the Timecards page by clicking on the back arrow button",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Time Landing Page is open in a new Tab",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/time/time-landing-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "wholesale-adptk-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/time/wholesale-adptk-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "verifies the Employee Timecard for heading is displayed in Timecard page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "closes the reports by clicking on X button",
        "async": true
      }
    ],
    "imports": [
      "../../../pages/runMod/time/wholesale-adptk-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "user-registration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/user-registration/user-registration-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex validated that the new user registration is complete",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex completes user registration for newly provisioned {string} client via atp script",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../../pages/runMod/userRegistration/user-registration-page"
    ],
    "pageObjects": []
  },
  {
    "file": "w2-tracker-available-online-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/year-end-tasks/w2-tracker-available-online-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex should see the banner text for available online in home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the View Now button in home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on View Now button in home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the Year-end tracker page upon clicking View Now button",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is on Year-end tracker page with available online status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the title for available online on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Learn More link on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reprint pop-up window is displayed on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in reprint pop-up window on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex is on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Manage Employee Access tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Manage Employee Access page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Affordable Care Act tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Affordable Care Act page is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on W-3 tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "W-3 pop-up window is displayed on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Got it button is displayed in W-3 pop-up window on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in W-3 pop-up window on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on 1096 tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "1096 pop-up window is displayed on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Got it button is displayed in 1096 pop-up window on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in 1096 pop-up window on Year-end tracker page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/year-end-tasks/w2-tracker-available-online-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "w2-tracker-on-truck-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/year-end-tasks/w2-tracker-on-truck-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Alex is on Year-end tracker page with on the Truck status",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the banner text for On The Truck in home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see the title for On The Truck on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Go Paperless tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "People page is displayed upon clicking Go Paperless tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Track Progress tab on Year-end tracker page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Track Delivery page is displayed upon clicking Track Progress tab on Year-end tracker page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/year-end-tasks/w2-tracker-on-truck-page",
      "../../../pages/runMod/year-end-tasks/w2-tracker-available-online-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "w2tracker-taxdaypage-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/year-end-tasks/w2tracker-taxdaypage-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Lets go button should be visible in Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner text should be visible in Tax Day Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on lets go button in Home page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is on W2tracker tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Learn More button in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in reprint popup on tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on generate year end report package tile in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in year end report package popup on tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on navigate back button in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on add your accountant tile in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on run powered by ADP logo on the top left corner of the page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on View delivery details tile in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Manage employee access tile in tax day page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Report health coverage information tile in tax day page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/year-end-tasks/w2tracker-taxday-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "yetracker-get-ready-page-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/runMod/year-end-tasks/yetracker-get-ready-page-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is on Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Act now button should be visible in Home Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner text should be visible in Home Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on act now button in Home page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex is on {string} page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Number of days left until year end is displayed in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Learn More button in year end page to opt Go paperless",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Sign Up button in Paperless Status window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on close button in Paperless Status window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on send Nudge button in year end page to turn off paperless",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on turn off link in paperless status windows to turn off paperless",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on turn off link in paperless status windows",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters feedback in Turn Off Paperless Tax window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on submit button in Turn Off Paperless Tax window",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Ok button in Turn Off Paperless Tax Statements",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Learn more link is displayed under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll details report subtask is displayed under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Run a regular payroll subtask is displayed under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Run an off-cycle payroll subtask is displayed under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Calculate manual checks subtask is displayed under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Payroll details report subtask under Pay year-end bonuses in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Payroll details report screen is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Year end page is displayed after closing Payroll details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Payroll Details screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to regular payroll subtask under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Start payroll screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Start payroll screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Home button",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on off-cycle payroll subtask under Pay year-end bonuses task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Off-cycle payroll screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Calculate manual checks subtask under Pay year-end in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Calculate manual checks screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the manual checks screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Ok button in manual checks screen",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Year end page is displayed after closing Calculate manual check screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Generate Employee PTO subtask is displayed under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Paid time off subtask is displayed under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review employee PTO subtask is displayed under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Generate Employee PTO page under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Employee Paid Time Off screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Employee Paid Time Off screen",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Year end page is displayed after closing Generate Employee PTO screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Paid time off settings page under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Company settings screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Company Settings screen",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Year end page is displayed after closing Employee PTO screen",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to Review PTO page under Reconcile paid time off balances task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Review PTO screen is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Learn more link is displayed under Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Run a regular payroll subtask is displayed under Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Run an off-cycle payroll subtask is displayed under Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to regular payroll subtask under Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to off-cycle payroll subtask under Record fringe benefits task in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Settings icon in Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Paid Time off in Settings page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Plan name in paid time off page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Edit icon in Edit PTO Plan page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Hire Date to reset PTO Plan in Edit PTO plan page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Next button in Edit PTO plan page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Done button in Edit PTO plan page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button in Edit PTO plan page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the close button on the Company Settings page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Paid Time Off task is not displayed in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Calendar to reset PTO Plan in Edit PTO plan page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Paid Time Off task is displayed in year end page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on search box in Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters keyword {string} in search box in Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Search result {string} is displayed in Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Mark task complete button is displayed as disabled for completed task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Mark task complete button is displayed as enabled for needs review task in year end page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Track Delivery icon is displayed in Home page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Track Delivery icon in Home page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Track Delivery page is displayed upon clicking Track Delivery icon in Home page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../../pages/runMod/year-end-tasks/yetracker-get-ready-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "add-users-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/add-users-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex checks {string} checkbox on Wholesale Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks Reports checkbox on Wholesale Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters First name on add users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last name on add users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email on add users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see email address {string} displayed on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for question Is the person setup as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} for question Do you want to set them up as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes for question Is the person setup as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No for question Is the person setup as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects No for question Do you want to set them up as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes employee for question Do you want to set them up as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Yes contractor for question Do you want to set them up as an employee or contractor on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters First name as {string} on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last name as {string} on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Email as {string} on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects Role as {string} on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects employee as {string} from dropdown Select the person you want to add as a user on Add Users",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects created employee from dropdown Select the person you want to add as a user on Add Users",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK button on the pop-up message on Add Users Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Finish Now button on the pop-up message on Add Users Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button with label Cancel on Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Last name is {string} in Add User page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First name is {string} in Add User page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message containing text {string} is shown in modal on Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Green tick for success is visible in success modal on Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Message containing text {string} is displayed in modal on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in first name field on add users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores audit fields for resetting security questions as associate in Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Reset Security Questions as Associate on Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Resend Registration Email button is not visible on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Resend Registration email on Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in last name field on add users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in email field on add users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reset Security Questions button is enabled in Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Reset Security Questions button is disabled in Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "The following user data is saved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "User data is serialised into a CSV file",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Provisioned IID is serialised into JSON and saved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Provisioned IID is deserialised from JSON",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Signup URL is in the email contents",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sentence {string} is in the email contents",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves the timestamp for comparison",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Another email will have been sent",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes to the retrieved URL to register the new account",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the consent toggle to yes in Fraud modal on Add User page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks I Consent in the Fraud modal on Add User page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks I Dont Consent in the Fraud modal on Add User page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Defend yourself against fraud modal is visible to user on Add User page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in information modal on Add User page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue button in information modal on Add User page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Text from element with multiple nodes will be displayed",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/add-users-page",
      "../../support/helpers",
      "@cucumber/cucumber",
      "chai",
      "fs"
    ],
    "pageObjects": []
  },
  {
    "file": "amplifinity-maritz-referral-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/amplifinity-maritz-referral-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Title text is visible on Referrals and Rewards modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Body text is visible on Referrals and Rewards modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Footer text is visible on Referrals and Rewards modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button on Referrals and Rewards modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex switches to newly opened page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amplifinity Refer A Friend page is visible",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/amplifinity-maritz-referral-modal.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-add-users-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/associate-add-users-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters a duplicate associate ID into the associate id textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SMS ID Field is enabled in Associate Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "SMS ID Field is disabled in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into Existing SMS Id textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK button in warning modal on Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate hovers over {string} Mega Menu and clicks on {string} option",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a first name into the first name textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a last name into the last name textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the {string} dropdown and selects {string} in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the supervisor email address textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets the region to ADP in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the email address textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an email into the email address textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a cdk email into the email address textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets {string} into the supervisor name textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Associate ID textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an associate ID into the Associate ID textbox in Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Resend Email on Associate Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex saves the URL for comparison",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "The recently retrieved URL does not match the previous URL",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/associate-add-users-page",
      "../../support/helpers",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "associate-user-security-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/associate-user-security-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex deletes the new associate account in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in search textbox in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the first and last name from user creation in search textbox in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Search button in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Name link of user in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on user row {string} in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reset Payroll Password button in Associate User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} user is visible in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Clear button in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on created user row in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Remove User button in Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK button in Information Modal on Associate User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Role in Filter dropdown in Associate User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Next page shows different users on Associate User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Removed user is no longer visible in Associate User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Users are not visible in Associate User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Users are grouped by {string} role in Associate User Security page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/associate-user-security-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "blocked-installation-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/blocked-installation-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alert text is {string} on Installation Selector page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate user searches for blocked IID in Installation selector",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/installation-selector-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "change-my-password-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/change-my-password-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Already Used Password error is visible in Change My Password page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New password missing error message is visible in Change My Password page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm password missing error message is visible in Change My Password page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "New and Confirm password missing error message is visible in Change My Password page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Current, New and Confirm password missing error message is visible in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their userid as a new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their current password as a new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a {int} character long password as a new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters nothing as their current password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters nothing into confirm password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} as a new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in Confirm Password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their current password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new password in Change My Password page with character {string} {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex confirms their new password in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new password in Change My Password page with their last name {string} in {string} case",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save in Change My Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Ok in Change My Password page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/change-your-password-page",
      "../../pages/security/change-my-password-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "change-your-password-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/change-your-password-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters the temporary password into the Current Password field in Change Your Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the New Password field in Change Your Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the Confirm New Password field in Change Your Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Submit button in Change Your Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new password into the New Password field in Change Your Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the new password into the Confirm New Password field in Change Your Password page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/change-your-password-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "company-group-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/company-group-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex is displayed Company Group Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on Company Group Info page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} link on Company Group Setup page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/company-group-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "confirm-identity-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/confirm-identity-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Confirm Identity modal is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Confirm Identity modal is not displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their password in password textbox in Confirm Identity modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Confirm button in Confirm Identity modal",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/confirm-identity-modal",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "consolidate-full-screen-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/consolidate-full-screen-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Close button in Consolidate User Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button in Consolidate User Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} in {string} textbox in Consolidate User Modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters Last four digits of SSN in SSN textbox in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} status is set for the {string} credentials in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error message {string} is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} step is {string} in the left hand nav bar in Consoldate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Name of Consolidating Employee Practitioner is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Address {string} is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Phone number of Consolidating Employee Practitioner is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Email of Consolidating Employee Practitioner is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "UserID of Consolidating Employee Practitioner is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Title {string} is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Header {string} is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Edit SSN button is visible in Consolidate User Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Body {string} is visible in Consolidate User Modal",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../support/helpers",
      "../../pages/security/consolidate-full-screen-modal",
      "../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "create-security-questions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/create-security-questions-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/security/create-security-questions-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "forgot-user-id-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/forgot-user-id-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters a mobile number into the communication channel selector in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an email into the communication channel selector in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their first name in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their last name in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their email in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex chooses Mobile number as their verification channel in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their phone number in Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button in Forgot User Id page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Name of user is displayed on Forgot User Id page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex retrieves their User Id from Forgot User Id page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/forgot-user-id-page",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "maintenance-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/maintenance-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex can see Maintenance page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/maintenance-page.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "mca-multi-company-access-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/mca-multi-company-access-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "MCA Security Admin is set to {string} for user {string} in Multi-Company Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Other MCA IID is no longer visible on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Remove Company button on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects the other MCA IID from the list of IIDs on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Access checkbox for the other MCA IID in Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button in warning modal on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects created Consolidated User from User dropdown on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects User from User dropdown on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from Security Admin dropdown on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from User dropdown on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new IID to add to the MCA group",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex checks the Access checkbox for second MCA company on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button with label Save on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on button with label Cancel on Multi-Company Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on OK button on the pop-up message on Multi-Company Access page",
        "async": true
      }
    ],
    "imports": [
      "chai",
      "../../pages/security/mca-multi-company-access-page",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "my-security-profile-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/my-security-profile-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex sets {string} as their international country code in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks cancel communication channel verification if displayed on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Email field should be old work email in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Start button in Security Verification modal on My Security Profile page if displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random phone number into the Work Phone field in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "My Security Profile page is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "User is returned to My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Mobile channel tooltip is green tick with verified context on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Email channel tooltip is warning sign with verification context on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Last name field in My Security Profile page should be name {string} change",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "First name field in My Security Profile page should be name {string} change",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Verification modal disappears and returns the user to My Security Profile",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Mobile channel tooltip is warning sign with verification context on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Email channel tooltip is green tick with verification context on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Personal Mobile consent has been switched to consenting in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Personal Mobile consent is unconsenting in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Mobile consent has been switched to consenting in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Modal for warning about changing names of users is visible on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Phone field should be new mobile phone in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Email field should be new work email in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Work Mobile field should be new work mobile in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Personal Mobile field should be new personal mobile in My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Personal Email field in My Security Profile page should be new personal email",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new first name into the first name field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the personal mobile verification modal on My Security Profile page to appear",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex turns off consent for the Work Mobile channel in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the phone field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an invalid OTP in the OTP field in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a smaller OTP than is required in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel button in the warning modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Continue button in the warning modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new last name into the last name field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the work email field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a work email address that conflicts with another users email into work email in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a work email address that that is unverified into work email in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a personal email address that conflicts with another users email into personal email in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the personal email field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a work mobile number that conflicts with another users mobile number into work mobile on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an invalid work mobile number into the work mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a personal mobile number that conflicts with another users mobile number into personal mobile on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Save button in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters an invalid personal mobile number into the personal mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the personal mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Verify button in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next Step button in Stepup modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next Step button in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the work email verification modal on My Security Profile page to appear",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the work mobile verification modal on My Security Profile page to appear",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel in the verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the work mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Get New Code in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Done in verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK in security verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Fix Issues Now button in error modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Start button in Security Verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Security Verification modal is visible on My Security Profile page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "UserId is the same as the one used to log in on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks My Security Profile page in associate user icon on Associate Page Header",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random mobile into the Personal Mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random mobile into the Work Mobile field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random mobile into the Mobile Phone field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random personal email into the Personal Email field in My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel to dismiss the Security Verification modal on My Security Profile page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Cancel to revert the changes on My Security Profile page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/my-security-profile-page.js",
      "../../pages/common/company-settings-page.js",
      "@cucumber/cucumber",
      "chai",
      "../../support/helpers.js"
    ],
    "pageObjects": []
  },
  {
    "file": "ng-add-users-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/ng-add-users-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex enters {string} in filter list on dropdown in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on dropdown {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Selected employee has name {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner title {string} is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner sub text is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Radio button {string} is not visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Radio button {string} is disabled in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Banner button {string} is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} is set as {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Learn More link in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex can see {string} in help and support popup",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Error {string} under {string} field is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} radio button in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {string} from {string} dropdown in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters newly generated {string} in Name dropdown in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets {string} as {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "A random email is generated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "A random first name is generated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "A random last name is generated",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets text in {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Title {string} is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Header {string} is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Inductive Text is visible under {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Sub title {string} is visible in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks X button in NG Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Radio button is default to {string} in NG Add Users page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on question icon on top right in NG Add Users page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/ng-add-users-page",
      "chai",
      "../../support/helpers"
    ],
    "pageObjects": []
  },
  {
    "file": "ng-run-access-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/ng-run-access-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex navigates to the last page in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alert banner text is expected banner text in RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on {string} button in RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Next Page button in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Previous Page button in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous page button is enabled in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Next page button is enabled in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Previous page button is disabled in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Next page button is disabled in pagination controls on RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects {int} rows in Show rows dropdown in RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add User button in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Page header is {string} in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Page title is {string} in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Page subtitle is expected in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Practitioner initials are expected initials in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Practitioner role is {string} role in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Practitioner registration status is expected status in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Practitioner email is expected email in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Practitioner phone number is expected phone number in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Amount of users shown is {int} in RUN Access page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Users are displayed in RUN Access page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "User list API is listened to",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "chai",
      "../../pages/security/ng-run-access-page"
    ],
    "pageObjects": []
  },
  {
    "file": "pre-oneux-aim-security-questions-and-answers-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/pre-oneux-aim-security-questions-and-answers-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex sets their security questions in Pre-OneUX AIM Security Questions and Answers page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/pre-oneux-aim-security-questions-and-answers-page"
    ],
    "pageObjects": []
  },
  {
    "file": "reset-password-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/reset-password-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks Security Questions Flow button in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Answer a security question in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex answers their security questions in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex answers their security questions with invalid answers in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets the identification email in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets their new password in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex confirms their new password in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button in Reset Password page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the verification OTP in AIM Forgot StepUp modal",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks a verification channel to receive the OTP in Reset Password page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/reset-password-page",
      "../../pages/security/change-your-password-page"
    ],
    "pageObjects": []
  },
  {
    "file": "security-emails-page.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-emails-page.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on {string} alert button in Security Emails page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} alert is disabled in Security Emails page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} alert is enabled in Security Emails page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Save button in Security Emails page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/security-emails-page.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "security-login-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-login-steps.js",
    "stepDefinitions": [
      {
        "type": "Given",
        "pattern": "Associate directs themselves to the login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate clicks Login button in Associate Login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate sets {string} as User ID in Associate Login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate sets {string} as Password in Associate Login page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "AIM OLP is displayed",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Sign Up on LexisNexis OLP page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex directs themselves to the LexisNexis OLP page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Associate navigates to the associate login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate clicks on Forgot User Id or Password button on Associate Login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs in to RUN with credentials",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in as an Associate User for {string} on client {string} for security testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in as an Associate User for {string} security testing",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "URL contains brand guid {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets their user ID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Get Started button on the login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Log In Now on registration page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Username is prefilled on the login page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Username field should be blank on the login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Need Help Signing In button on login page",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex navigates to {string} {string} {string}",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex navigates to unbranded {string} {string}",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to the login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex navigates to US Bank OLP page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Forgot User Id or Password on Associate Login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Sign in as a different user button on the login page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Sign in Again button on the sign out page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs in to runmod using invalid credentials",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs in to US Bank using invalid credentials",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex toggles Remember my User ID",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex logs in to the {string} child company",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs into Practitioner URL with associate credentials",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs into Associate URL with Dealer Associate credentials",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in as Associate {string} for security testing",
        "async": true
      },
      {
        "type": "Given",
        "pattern": "Alex logs in to the Dealer Associate account with the new credentials",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Associate navigates to CEH Deeplink URL",
        "async": true
      }
    ],
    "imports": [
      "../../pages/common/practitioner-login",
      "../../pages/common/associate-login",
      "../../support/credentials-manager",
      "@cucumber/cucumber",
      "chai",
      "../../pages/common/home-page",
      "../../pages/ac/wholesaleRunMod/wholesaleRunMod-profile-information-page"
    ],
    "pageObjects": []
  },
  {
    "file": "security-provisioning-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-provisioning-steps.js",
    "stepDefinitions": [],
    "imports": [
      "../../pages/common/practitioner-login",
      "../../apis/atp/ATP-runner.js",
      "../../pages/common/home-page",
      "../../support/iid-manager",
      "../../pages/security/change-your-password-page",
      "../../support/helpers",
      "fs",
      "path",
      "../../pages/common/associate-login",
      "@cucumber/cucumber",
      "../../pages/security/my-security-profile-page.js"
    ],
    "pageObjects": []
  },
  {
    "file": "security-questions-and-answers-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-questions-and-answers-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex selects question {string} for security question {string} in Security Questions and Answers page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets the answer to security question {string} as {string} in Security Questions and Answers page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex sets their password into the password textbox in Security Questions and Answers page",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/security-questions-and-answers-page"
    ],
    "pageObjects": []
  },
  {
    "file": "security-questions-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-questions-steps.js",
    "stepDefinitions": [],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/runMod/runcertification/certification-page"
    ],
    "pageObjects": []
  },
  {
    "file": "security-sql-employee-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-sql-employee-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Contact identity records for child installation are pulled from Contacts table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "USER_IID for child installation matches parent installation",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "USER_PROFILEID matches all synchronized installations",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Shipping contact records are pulled from Contacts table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Test automation data matches shipping contact records",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Contact record is pulled from Contacts table",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Contact record {string} matches contact record {string}",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Test automation data matches contacts records",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Contacts user indicator is set to true when the user is registered in AIM",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Contact phone is set to the provided phone number from AIM registration",
        "async": true
      }
    ],
    "imports": [
      "./security-sql-statement-helper.js",
      "./security-sql-utilities.js",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "security-sql-ifarm.steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-sql-ifarm.steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "ProfileID of current practitioner is retrieved",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Practitioner is deleted from installation",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Unregistered practitioner is deleted from installation",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Timestamp of audit event is greater than captured timestamp",
        "async": true
      }
    ],
    "imports": [
      "../../apis/atp/ATP-runner.js",
      "./security-sql-statement-helper.js",
      "./security-sql-utilities.js",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "security-sql-messaging-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-sql-messaging-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex gets the timestamp of the most recent {string} registration email from Database",
        "async": true
      },
      {
        "type": "When",
        "pattern": "User will have been sent a new {string} email",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex takes note of the new {string} email contents",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores audit fields for adding a new user in Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Audit DataMart will have been populated from test events",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "DataExchange Message Log will have {string} handler in Database",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex retrieves the temporary password from {string} email in Database",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/add-users-page.js",
      "./security-sql-statement-helper.js",
      "./security-sql-utilities.js",
      "./security-sql-statement-helper.js",
      "chai",
      "@cucumber/cucumber"
    ],
    "pageObjects": []
  },
  {
    "file": "security-sql-statement-helper.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-sql-statement-helper.js",
    "stepDefinitions": [],
    "imports": [],
    "pageObjects": []
  },
  {
    "file": "security-sql-utilities.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/security-sql-utilities.js",
    "stepDefinitions": [],
    "imports": [
      "../../apis/atp/ATP-runner"
    ],
    "pageObjects": []
  },
  {
    "file": "self-service-user-registration-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/self-service-user-registration-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex fills in default Birth Month and Day in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} on {string} AIM Modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Standard User Registration flow is visible in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes to the non-proofing flow process by removing the proofing flow query from the URL",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Proofing flow is visible in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their identity information in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their identity information in User Registration page for Digital purchase",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Registration page title is {string} in User Registration page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Account creation message is {string} in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the first name field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the last name field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a UserId for role {string} in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a custom UserId into the UserId field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a UserId into the UserId field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a UserId into the UserId field in User Registration page for digital purchase",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a UserId for a Wholesale client in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the password field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the confirm password field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores audit fields for registering a new user in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks {string} button in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a random mobile into the personal mobile field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters {string} into the personal mobile field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks No for personal mobile contact consent in User Registration Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Yes for personal mobile contact consent in User Registration Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters their OTP into the OTP textbox in User Registration Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex goes through OTP prompt if displayed in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters a new associate id into the User Id field in User Registration page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex enters the name of the new user in User Registration page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/self-service-user-registration-page",
      "@cucumber/cucumber",
      "chai",
      "../../support/helpers",
      "../../pages/security/add-users-page"
    ],
    "pageObjects": []
  },
  {
    "file": "something-isnt-right-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/something-isnt-right-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "{string} is visible on Something isn't right modal",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} bullet point is visible on Something isn't right modal",
        "async": true
      }
    ],
    "imports": [
      "@cucumber/cucumber",
      "../../pages/security/something-isnt-right-modal",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "user-security-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/user-security-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "Alex clicks on Edit Security Email for user {string} in User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Page {string} is displayed",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "{string} consoldated reminder is visible on Add Users page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "User {string} should have role as {string} on User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "User {string} should have registered status as {string} on User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created user should have role as {string} on User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created user should have Is employee value as {string} on User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created user should have registered status as {string} on User Security page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "created user should have Multi-Company Access status as {string} on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the Name link of another existing User {string} on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex selects row of added Consolidated Employee on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Add User button on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Remove User button on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Reset Payroll Password button on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on No button on the pop-up message on User Security Page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Yes button on the pop-up message on User Security Page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "user will not be listed in User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on the row of User {string} in User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks OK on the information modal on User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex stores audit fields for deleting a user in User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Name link {string} in User Security page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on name of new user in User Security page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/user-security-page",
      "../../pages/security/add-users-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "w2-preview-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/security/w2-preview-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "Alex should see {string} in SSN field in W-2 Preview page",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "Alex should see W-2 Preview as the title in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks the dropdown menu for masking SSNs and selects Yes for revealing SSNs in Edit page on W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex waits for the W-2 Reports page to load in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Print button in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks Download dropdown in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Edit button in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks on Download as {string} button in W-2 Preview page",
        "async": true
      },
      {
        "type": "When",
        "pattern": "Alex clicks View Report button in W-2 Preview page",
        "async": true
      }
    ],
    "imports": [
      "../../pages/security/w2-preview-page",
      "@cucumber/cucumber",
      "chai"
    ],
    "pageObjects": []
  },
  {
    "file": "theme-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/themes/theme-steps.js",
    "stepDefinitions": [
      {
        "type": "Then",
        "pattern": "the header background color should be {string} in hex on the homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the side nav background color should be {string} in hex on the homepage",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "the run payroll button background color should be {string} in hex on the homepage",
        "async": true
      }
    ],
    "imports": [
      "../../support/helpers",
      "@cucumber/cucumber",
      "chai",
      "../../pages/common/home-page",
      "../../support/credentials-manager",
      "../../pages/common/practitioner-login"
    ],
    "pageObjects": []
  },
  {
    "file": "compare-steps.js",
    "path": "/Users/arog/framework/qa_automation/SBS_Automation/steps/vrt/compare-steps.js",
    "stepDefinitions": [
      {
        "type": "When",
        "pattern": "expected screenshot {string} is specified",
        "async": true
      },
      {
        "type": "When",
        "pattern": "rect specified as x-coordinate {int} y-coordinate {int} width {int} height {int} is ignored",
        "async": true
      },
      {
        "type": "Then",
        "pattern": "current page screenshot should be the same as expected",
        "async": true
      }
    ],
    "imports": [
      "path",
      "@cucumber/cucumber",
      "chai",
      "../../support/vrt"
    ],
    "pageObjects": []
  }
]
